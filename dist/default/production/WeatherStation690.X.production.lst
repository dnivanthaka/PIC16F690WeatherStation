

Microchip Technology PIC LITE Macro Assembler V1.35 build -356382666 
                                                                                               Wed Nov 25 05:46:24 2015

Microchip Technology Omniscient Code Generator v1.35 (Free mode) build 201507080246
     1                           	processor	16F690
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    10                           	psect	clrtext,global,class=CODE,delta=2
    11                           	psect	inittext,global,class=CODE,delta=2
    12                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    13                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    15                           	psect	maintext,global,class=CODE,split=1,delta=2
    16                           	psect	text1,local,class=CODE,merge=1,delta=2
    17                           	psect	text2,local,class=CODE,merge=1,delta=2
    18                           	psect	text3,local,class=CODE,merge=1,delta=2
    19                           	psect	text4,local,class=CODE,merge=1,delta=2
    20                           	psect	text5,local,class=CODE,merge=1,delta=2
    21                           	psect	text6,local,class=CODE,merge=1,delta=2
    22                           	psect	text7,local,class=CODE,merge=1,delta=2
    23                           	psect	text8,local,class=CODE,merge=1,delta=2
    24                           	psect	text9,local,class=CODE,merge=1,delta=2
    25                           	psect	text10,local,class=CODE,merge=1,delta=2
    26                           	psect	text11,local,class=CODE,merge=1,delta=2
    27                           	psect	text12,local,class=CODE,merge=1,delta=2
    28                           	psect	text13,local,class=CODE,merge=1,delta=2
    29                           	psect	text14,local,class=CODE,merge=1,delta=2
    30                           	psect	text15,local,class=CODE,merge=1,delta=2
    31                           	psect	text16,local,class=CODE,merge=1,delta=2
    32                           	psect	text17,local,class=CODE,merge=1,delta=2
    33                           	psect	text18,local,class=CODE,merge=1,delta=2
    34                           	psect	text19,local,class=CODE,merge=1,delta=2
    35                           	psect	text20,local,class=CODE,merge=1,delta=2
    36                           	psect	text21,local,class=CODE,merge=1,delta=2
    37                           	psect	text22,local,class=CODE,merge=1,delta=2
    38                           	psect	text23,local,class=CODE,merge=1,delta=2
    39                           	psect	text24,local,class=CODE,merge=1,delta=2
    40                           	psect	text25,local,class=CODE,merge=1,delta=2
    41                           	psect	text26,local,class=CODE,merge=1,delta=2
    42                           	psect	text27,local,class=CODE,merge=1,delta=2
    43                           	psect	text28,local,class=CODE,merge=1,delta=2
    44                           	psect	intentry,global,class=CODE,delta=2
    45                           	psect	text29,local,class=CODE,merge=1,delta=2
    46                           	psect	text30,local,class=CODE,merge=1,delta=2
    47                           	psect	text31,local,class=CODE,merge=1,delta=2
    48                           	dabs	1,0x7E,2
    49  0000                     	;# 
    50  0001                     	;# 
    51  0002                     	;# 
    52  0003                     	;# 
    53  0004                     	;# 
    54  0005                     	;# 
    55  0006                     	;# 
    56  0007                     	;# 
    57  000A                     	;# 
    58  000B                     	;# 
    59  000C                     	;# 
    60  000D                     	;# 
    61  000E                     	;# 
    62  000E                     	;# 
    63  000F                     	;# 
    64  0010                     	;# 
    65  0011                     	;# 
    66  0012                     	;# 
    67  0013                     	;# 
    68  0014                     	;# 
    69  0015                     	;# 
    70  0015                     	;# 
    71  0016                     	;# 
    72  0017                     	;# 
    73  0018                     	;# 
    74  0019                     	;# 
    75  001A                     	;# 
    76  001C                     	;# 
    77  001D                     	;# 
    78  001E                     	;# 
    79  001F                     	;# 
    80  0081                     	;# 
    81  0085                     	;# 
    82  0086                     	;# 
    83  0087                     	;# 
    84  008C                     	;# 
    85  008D                     	;# 
    86  008E                     	;# 
    87  008F                     	;# 
    88  0090                     	;# 
    89  0092                     	;# 
    90  0093                     	;# 
    91  0093                     	;# 
    92  0093                     	;# 
    93  0094                     	;# 
    94  0095                     	;# 
    95  0095                     	;# 
    96  0096                     	;# 
    97  0096                     	;# 
    98  0097                     	;# 
    99  0098                     	;# 
   100  0099                     	;# 
   101  009A                     	;# 
   102  009B                     	;# 
   103  009E                     	;# 
   104  009F                     	;# 
   105  010C                     	;# 
   106  010C                     	;# 
   107  010D                     	;# 
   108  010E                     	;# 
   109  010F                     	;# 
   110  0115                     	;# 
   111  0116                     	;# 
   112  0118                     	;# 
   113  0119                     	;# 
   114  011A                     	;# 
   115  011B                     	;# 
   116  011E                     	;# 
   117  011F                     	;# 
   118  018C                     	;# 
   119  018D                     	;# 
   120  019D                     	;# 
   121  019E                     	;# 
   122  0000                     	;# 
   123  0001                     	;# 
   124  0002                     	;# 
   125  0003                     	;# 
   126  0004                     	;# 
   127  0005                     	;# 
   128  0006                     	;# 
   129  0007                     	;# 
   130  000A                     	;# 
   131  000B                     	;# 
   132  000C                     	;# 
   133  000D                     	;# 
   134  000E                     	;# 
   135  000E                     	;# 
   136  000F                     	;# 
   137  0010                     	;# 
   138  0011                     	;# 
   139  0012                     	;# 
   140  0013                     	;# 
   141  0014                     	;# 
   142  0015                     	;# 
   143  0015                     	;# 
   144  0016                     	;# 
   145  0017                     	;# 
   146  0018                     	;# 
   147  0019                     	;# 
   148  001A                     	;# 
   149  001C                     	;# 
   150  001D                     	;# 
   151  001E                     	;# 
   152  001F                     	;# 
   153  0081                     	;# 
   154  0085                     	;# 
   155  0086                     	;# 
   156  0087                     	;# 
   157  008C                     	;# 
   158  008D                     	;# 
   159  008E                     	;# 
   160  008F                     	;# 
   161  0090                     	;# 
   162  0092                     	;# 
   163  0093                     	;# 
   164  0093                     	;# 
   165  0093                     	;# 
   166  0094                     	;# 
   167  0095                     	;# 
   168  0095                     	;# 
   169  0096                     	;# 
   170  0096                     	;# 
   171  0097                     	;# 
   172  0098                     	;# 
   173  0099                     	;# 
   174  009A                     	;# 
   175  009B                     	;# 
   176  009E                     	;# 
   177  009F                     	;# 
   178  010C                     	;# 
   179  010C                     	;# 
   180  010D                     	;# 
   181  010E                     	;# 
   182  010F                     	;# 
   183  0115                     	;# 
   184  0116                     	;# 
   185  0118                     	;# 
   186  0119                     	;# 
   187  011A                     	;# 
   188  011B                     	;# 
   189  011E                     	;# 
   190  011F                     	;# 
   191  018C                     	;# 
   192  018D                     	;# 
   193  019D                     	;# 
   194  019E                     	;# 
   195  0000                     	;# 
   196  0001                     	;# 
   197  0002                     	;# 
   198  0003                     	;# 
   199  0004                     	;# 
   200  0005                     	;# 
   201  0006                     	;# 
   202  0007                     	;# 
   203  000A                     	;# 
   204  000B                     	;# 
   205  000C                     	;# 
   206  000D                     	;# 
   207  000E                     	;# 
   208  000E                     	;# 
   209  000F                     	;# 
   210  0010                     	;# 
   211  0011                     	;# 
   212  0012                     	;# 
   213  0013                     	;# 
   214  0014                     	;# 
   215  0015                     	;# 
   216  0015                     	;# 
   217  0016                     	;# 
   218  0017                     	;# 
   219  0018                     	;# 
   220  0019                     	;# 
   221  001A                     	;# 
   222  001C                     	;# 
   223  001D                     	;# 
   224  001E                     	;# 
   225  001F                     	;# 
   226  0081                     	;# 
   227  0085                     	;# 
   228  0086                     	;# 
   229  0087                     	;# 
   230  008C                     	;# 
   231  008D                     	;# 
   232  008E                     	;# 
   233  008F                     	;# 
   234  0090                     	;# 
   235  0092                     	;# 
   236  0093                     	;# 
   237  0093                     	;# 
   238  0093                     	;# 
   239  0094                     	;# 
   240  0095                     	;# 
   241  0095                     	;# 
   242  0096                     	;# 
   243  0096                     	;# 
   244  0097                     	;# 
   245  0098                     	;# 
   246  0099                     	;# 
   247  009A                     	;# 
   248  009B                     	;# 
   249  009E                     	;# 
   250  009F                     	;# 
   251  010C                     	;# 
   252  010C                     	;# 
   253  010D                     	;# 
   254  010E                     	;# 
   255  010F                     	;# 
   256  0115                     	;# 
   257  0116                     	;# 
   258  0118                     	;# 
   259  0119                     	;# 
   260  011A                     	;# 
   261  011B                     	;# 
   262  011E                     	;# 
   263  011F                     	;# 
   264  018C                     	;# 
   265  018D                     	;# 
   266  019D                     	;# 
   267  019E                     	;# 
   268  0000                     	;# 
   269  0001                     	;# 
   270  0002                     	;# 
   271  0003                     	;# 
   272  0004                     	;# 
   273  0005                     	;# 
   274  0006                     	;# 
   275  0007                     	;# 
   276  000A                     	;# 
   277  000B                     	;# 
   278  000C                     	;# 
   279  000D                     	;# 
   280  000E                     	;# 
   281  000E                     	;# 
   282  000F                     	;# 
   283  0010                     	;# 
   284  0011                     	;# 
   285  0012                     	;# 
   286  0013                     	;# 
   287  0014                     	;# 
   288  0015                     	;# 
   289  0015                     	;# 
   290  0016                     	;# 
   291  0017                     	;# 
   292  0018                     	;# 
   293  0019                     	;# 
   294  001A                     	;# 
   295  001C                     	;# 
   296  001D                     	;# 
   297  001E                     	;# 
   298  001F                     	;# 
   299  0081                     	;# 
   300  0085                     	;# 
   301  0086                     	;# 
   302  0087                     	;# 
   303  008C                     	;# 
   304  008D                     	;# 
   305  008E                     	;# 
   306  008F                     	;# 
   307  0090                     	;# 
   308  0092                     	;# 
   309  0093                     	;# 
   310  0093                     	;# 
   311  0093                     	;# 
   312  0094                     	;# 
   313  0095                     	;# 
   314  0095                     	;# 
   315  0096                     	;# 
   316  0096                     	;# 
   317  0097                     	;# 
   318  0098                     	;# 
   319  0099                     	;# 
   320  009A                     	;# 
   321  009B                     	;# 
   322  009E                     	;# 
   323  009F                     	;# 
   324  010C                     	;# 
   325  010C                     	;# 
   326  010D                     	;# 
   327  010E                     	;# 
   328  010F                     	;# 
   329  0115                     	;# 
   330  0116                     	;# 
   331  0118                     	;# 
   332  0119                     	;# 
   333  011A                     	;# 
   334  011B                     	;# 
   335  011E                     	;# 
   336  011F                     	;# 
   337  018C                     	;# 
   338  018D                     	;# 
   339  019D                     	;# 
   340  019E                     	;# 
   341  0000                     	;# 
   342  0001                     	;# 
   343  0002                     	;# 
   344  0003                     	;# 
   345  0004                     	;# 
   346  0005                     	;# 
   347  0006                     	;# 
   348  0007                     	;# 
   349  000A                     	;# 
   350  000B                     	;# 
   351  000C                     	;# 
   352  000D                     	;# 
   353  000E                     	;# 
   354  000E                     	;# 
   355  000F                     	;# 
   356  0010                     	;# 
   357  0011                     	;# 
   358  0012                     	;# 
   359  0013                     	;# 
   360  0014                     	;# 
   361  0015                     	;# 
   362  0015                     	;# 
   363  0016                     	;# 
   364  0017                     	;# 
   365  0018                     	;# 
   366  0019                     	;# 
   367  001A                     	;# 
   368  001C                     	;# 
   369  001D                     	;# 
   370  001E                     	;# 
   371  001F                     	;# 
   372  0081                     	;# 
   373  0085                     	;# 
   374  0086                     	;# 
   375  0087                     	;# 
   376  008C                     	;# 
   377  008D                     	;# 
   378  008E                     	;# 
   379  008F                     	;# 
   380  0090                     	;# 
   381  0092                     	;# 
   382  0093                     	;# 
   383  0093                     	;# 
   384  0093                     	;# 
   385  0094                     	;# 
   386  0095                     	;# 
   387  0095                     	;# 
   388  0096                     	;# 
   389  0096                     	;# 
   390  0097                     	;# 
   391  0098                     	;# 
   392  0099                     	;# 
   393  009A                     	;# 
   394  009B                     	;# 
   395  009E                     	;# 
   396  009F                     	;# 
   397  010C                     	;# 
   398  010C                     	;# 
   399  010D                     	;# 
   400  010E                     	;# 
   401  010F                     	;# 
   402  0115                     	;# 
   403  0116                     	;# 
   404  0118                     	;# 
   405  0119                     	;# 
   406  011A                     	;# 
   407  011B                     	;# 
   408  011E                     	;# 
   409  011F                     	;# 
   410  018C                     	;# 
   411  018D                     	;# 
   412  019D                     	;# 
   413  019E                     	;# 
   414  0000                     	;# 
   415  0001                     	;# 
   416  0002                     	;# 
   417  0003                     	;# 
   418  0004                     	;# 
   419  0005                     	;# 
   420  0006                     	;# 
   421  0007                     	;# 
   422  000A                     	;# 
   423  000B                     	;# 
   424  000C                     	;# 
   425  000D                     	;# 
   426  000E                     	;# 
   427  000E                     	;# 
   428  000F                     	;# 
   429  0010                     	;# 
   430  0011                     	;# 
   431  0012                     	;# 
   432  0013                     	;# 
   433  0014                     	;# 
   434  0015                     	;# 
   435  0015                     	;# 
   436  0016                     	;# 
   437  0017                     	;# 
   438  0018                     	;# 
   439  0019                     	;# 
   440  001A                     	;# 
   441  001C                     	;# 
   442  001D                     	;# 
   443  001E                     	;# 
   444  001F                     	;# 
   445  0081                     	;# 
   446  0085                     	;# 
   447  0086                     	;# 
   448  0087                     	;# 
   449  008C                     	;# 
   450  008D                     	;# 
   451  008E                     	;# 
   452  008F                     	;# 
   453  0090                     	;# 
   454  0092                     	;# 
   455  0093                     	;# 
   456  0093                     	;# 
   457  0093                     	;# 
   458  0094                     	;# 
   459  0095                     	;# 
   460  0095                     	;# 
   461  0096                     	;# 
   462  0096                     	;# 
   463  0097                     	;# 
   464  0098                     	;# 
   465  0099                     	;# 
   466  009A                     	;# 
   467  009B                     	;# 
   468  009E                     	;# 
   469  009F                     	;# 
   470  010C                     	;# 
   471  010C                     	;# 
   472  010D                     	;# 
   473  010E                     	;# 
   474  010F                     	;# 
   475  0115                     	;# 
   476  0116                     	;# 
   477  0118                     	;# 
   478  0119                     	;# 
   479  011A                     	;# 
   480  011B                     	;# 
   481  011E                     	;# 
   482  011F                     	;# 
   483  018C                     	;# 
   484  018D                     	;# 
   485  019D                     	;# 
   486  019E                     	;# 
   487  0000                     	;# 
   488  0001                     	;# 
   489  0002                     	;# 
   490  0003                     	;# 
   491  0004                     	;# 
   492  0005                     	;# 
   493  0006                     	;# 
   494  0007                     	;# 
   495  000A                     	;# 
   496  000B                     	;# 
   497  000C                     	;# 
   498  000D                     	;# 
   499  000E                     	;# 
   500  000E                     	;# 
   501  000F                     	;# 
   502  0010                     	;# 
   503  0011                     	;# 
   504  0012                     	;# 
   505  0013                     	;# 
   506  0014                     	;# 
   507  0015                     	;# 
   508  0015                     	;# 
   509  0016                     	;# 
   510  0017                     	;# 
   511  0018                     	;# 
   512  0019                     	;# 
   513  001A                     	;# 
   514  001C                     	;# 
   515  001D                     	;# 
   516  001E                     	;# 
   517  001F                     	;# 
   518  0081                     	;# 
   519  0085                     	;# 
   520  0086                     	;# 
   521  0087                     	;# 
   522  008C                     	;# 
   523  008D                     	;# 
   524  008E                     	;# 
   525  008F                     	;# 
   526  0090                     	;# 
   527  0092                     	;# 
   528  0093                     	;# 
   529  0093                     	;# 
   530  0093                     	;# 
   531  0094                     	;# 
   532  0095                     	;# 
   533  0095                     	;# 
   534  0096                     	;# 
   535  0096                     	;# 
   536  0097                     	;# 
   537  0098                     	;# 
   538  0099                     	;# 
   539  009A                     	;# 
   540  009B                     	;# 
   541  009E                     	;# 
   542  009F                     	;# 
   543  010C                     	;# 
   544  010C                     	;# 
   545  010D                     	;# 
   546  010E                     	;# 
   547  010F                     	;# 
   548  0115                     	;# 
   549  0116                     	;# 
   550  0118                     	;# 
   551  0119                     	;# 
   552  011A                     	;# 
   553  011B                     	;# 
   554  011E                     	;# 
   555  011F                     	;# 
   556  018C                     	;# 
   557  018D                     	;# 
   558  019D                     	;# 
   559  019E                     	;# 
   560  0000                     	;# 
   561  0001                     	;# 
   562  0002                     	;# 
   563  0003                     	;# 
   564  0004                     	;# 
   565  0005                     	;# 
   566  0006                     	;# 
   567  0007                     	;# 
   568  000A                     	;# 
   569  000B                     	;# 
   570  000C                     	;# 
   571  000D                     	;# 
   572  000E                     	;# 
   573  000E                     	;# 
   574  000F                     	;# 
   575  0010                     	;# 
   576  0011                     	;# 
   577  0012                     	;# 
   578  0013                     	;# 
   579  0014                     	;# 
   580  0015                     	;# 
   581  0015                     	;# 
   582  0016                     	;# 
   583  0017                     	;# 
   584  0018                     	;# 
   585  0019                     	;# 
   586  001A                     	;# 
   587  001C                     	;# 
   588  001D                     	;# 
   589  001E                     	;# 
   590  001F                     	;# 
   591  0081                     	;# 
   592  0085                     	;# 
   593  0086                     	;# 
   594  0087                     	;# 
   595  008C                     	;# 
   596  008D                     	;# 
   597  008E                     	;# 
   598  008F                     	;# 
   599  0090                     	;# 
   600  0092                     	;# 
   601  0093                     	;# 
   602  0093                     	;# 
   603  0093                     	;# 
   604  0094                     	;# 
   605  0095                     	;# 
   606  0095                     	;# 
   607  0096                     	;# 
   608  0096                     	;# 
   609  0097                     	;# 
   610  0098                     	;# 
   611  0099                     	;# 
   612  009A                     	;# 
   613  009B                     	;# 
   614  009E                     	;# 
   615  009F                     	;# 
   616  010C                     	;# 
   617  010C                     	;# 
   618  010D                     	;# 
   619  010E                     	;# 
   620  010F                     	;# 
   621  0115                     	;# 
   622  0116                     	;# 
   623  0118                     	;# 
   624  0119                     	;# 
   625  011A                     	;# 
   626  011B                     	;# 
   627  011E                     	;# 
   628  011F                     	;# 
   629  018C                     	;# 
   630  018D                     	;# 
   631  019D                     	;# 
   632  019E                     	;# 
   633                           
   634                           	psect	idataBANK0
   635  0F40                     __pidataBANK0:	
   636                           
   637                           ;initializer for main@F1621
   638  0F40  3428               	retlw	40
   639  0F41  3469               	retlw	105
   640  0F42  3455               	retlw	85
   641  0F43  345D               	retlw	93
   642  0F44  3405               	retlw	5
   643  0F45  3400               	retlw	0
   644  0F46  3400               	retlw	0
   645  0F47  347C               	retlw	124
   646  0F48  3400               	retlw	0
   647  0F49  3400               	retlw	0
   648  0F4A  3400               	retlw	0
   649  0F4B  3400               	retlw	0
   650  0F4C  3400               	retlw	0
   651  0F4D  3400               	retlw	0
   652  0F4E  3400               	retlw	0
   653  0F4F  3400               	retlw	0
   654  0F50  3400               	retlw	0
   655  0F51  3400               	retlw	0
   656  0F52  3400               	retlw	0
   657  0F53  3400               	retlw	0
   658  0F54  3400               	retlw	0
   659  0F55  3400               	retlw	0
   660  001F                     _ADCON0bits	set	31
   661  000B                     _INTCONbits	set	11
   662  000C                     _PIR1bits	set	12
   663  0006                     _PORTBbits	set	6
   664  0007                     _PORTCbits	set	7
   665  001A                     _RCREG	set	26
   666  0018                     _RCSTA	set	24
   667  0014                     _SSPCON	set	20
   668  0010                     _T1CONbits	set	16
   669  0001                     _TMR0	set	1
   670  0019                     _TXREG	set	25
   671  005F                     _GIE	set	95
   672  0065                     _RCIF	set	101
   673  0063                     _SSPIF	set	99
   674  0064                     _TXIF	set	100
   675  0081                     _OPTION_REGbits	set	129
   676  008F                     _OSCCON	set	143
   677  008C                     _PIE1bits	set	140
   678  0099                     _SPBRG	set	153
   679  0086                     _TRISBbits	set	134
   680  0087                     _TRISCbits	set	135
   681  0098                     _TXSTA	set	152
   682  04DB                     _BRG16	set	1243
   683  04C2                     _BRGH	set	1218
   684  04C4                     _SYNC	set	1220
   685  011E                     _ANSEL	set	286
   686  011F                     _ANSELH	set	287
   687                           
   688                           ; #config settings
   689  0000                     
   690                           	psect	cinit
   691  0013                     start_initialization:	
   692  0013                     __initialization:	
   693                           
   694                           ; Clear objects allocated to COMMON
   695  0013  01FB               	clrf	__pbssCOMMON& (0+127)
   696  0014  01FC               	clrf	(__pbssCOMMON+1)& (0+127)
   697                           
   698                           ; Clear objects allocated to BANK0
   699  0015  01E6               	clrf	__pbssBANK0& (0+127)
   700  0016  01E7               	clrf	(__pbssBANK0+1)& (0+127)
   701  0017  01E8               	clrf	(__pbssBANK0+2)& (0+127)
   702  0018  01E9               	clrf	(__pbssBANK0+3)& (0+127)
   703  0019  01EA               	clrf	(__pbssBANK0+4)& (0+127)
   704                           
   705                           ; Clear objects allocated to BANK2
   706  001A  1783               	bsf	3,7	;select IRP bank2
   707  001B  3020               	movlw	low __pbssBANK2
   708  001C  0084               	movwf	4
   709  001D  306A               	movlw	low (__pbssBANK2+74)
   710  001E  158A  268C  118A   	fcall	clear_ram0
   711                           
   712                           ; Initialize objects allocated to BANK0
   713  0021  1383               	bcf	3,7	;select IRP bank0
   714  0022  3066               	movlw	low (__pdataBANK0+22)
   715  0023  00FD               	movwf	btemp+-1
   716  0024  300F               	movlw	high __pidataBANK0
   717  0025  00FE               	movwf	btemp
   718  0026  3040               	movlw	low __pidataBANK0
   719  0027  00FF               	movwf	btemp+1
   720  0028  3050               	movlw	low __pdataBANK0
   721  0029  0084               	movwf	4
   722  002A  158A  26E1         	fcall	init_ram0
   723  002C                     end_of_initialization:	
   724                           ;End of C runtime variable initialization code
   725                           
   726  002C                     __end_of__initialization:	
   727  002C  0183               	clrf	3
   728  002D  118A  282F         	ljmp	_main	;jump to C main() function
   729                           
   730                           	psect	bssCOMMON
   731  007B                     __pbssCOMMON:	
   732  007B                     _crc8:	
   733  007B                     	ds	1
   734  007C                     _scale:	
   735  007C                     	ds	1
   736                           
   737                           	psect	bssBANK0
   738  0066                     __pbssBANK0:	
   739  0066                     main@F1623:	
   740  0066                     	ds	5
   741                           
   742                           	psect	dataBANK0
   743  0050                     __pdataBANK0:	
   744  0050                     main@F1621:	
   745  0050                     	ds	22
   746                           
   747                           	psect	bssBANK2
   748  0120                     __pbssBANK2:	
   749  0120                     main@F1625:	
   750  0120                     	ds	26
   751  013A                     _data:	
   752  013A                     	ds	48
   753                           
   754                           	psect	clrtext
   755  0E8C                     clear_ram0:	
   756                           ;	Called with FSR containing the base address, and
   757                           ;	W with the last address+1
   758                           
   759  0E8C  0064               	clrwdt	;clear the watchdog before getting into this loop
   760  0E8D                     clrloop0:	
   761  0E8D  0180               	clrf	0	;clear RAM location pointed to by FSR
   762  0E8E  0A84               	incf	4,f	;increment pointer
   763  0E8F  0604               	xorwf	4,w	;XOR with final address
   764  0E90  1903               	btfsc	3,2	;have we reached the end yet?
   765  0E91  3400               	retlw	0	;all done for this memory range, return
   766  0E92  0604               	xorwf	4,w	;XOR again to restore value
   767  0E93  2E8D               	goto	clrloop0	;do the next byte
   768                           
   769                           	psect	inittext
   770  0EDD                     init_fetch0:	
   771                           ;	Called with low address in FSR and high address in W
   772                           
   773  0EDD  087E               	movf	126,w
   774  0EDE  008A               	movwf	10
   775  0EDF  087F               	movf	127,w
   776  0EE0  0082               	movwf	2
   777  0EE1                     init_ram0:	
   778                           ;Called with:
   779                           ;	high address of idata address in btemp 
   780                           ;	low address of idata address in btemp+1 
   781                           ;	low address of data in FSR
   782                           ;	high address + 1 of data in btemp-1
   783                           
   784  0EE1  26DD  158A         	fcall	init_fetch0
   785  0EE3  0080               	movwf	0
   786  0EE4  0A84               	incf	4,f
   787  0EE5  0804               	movf	4,w
   788  0EE6  067D               	xorwf	125,w
   789  0EE7  1903               	btfsc	3,2
   790  0EE8  3400               	retlw	0
   791  0EE9  0AFF               	incf	127,f
   792  0EEA  1903               	btfsc	3,2
   793  0EEB  0AFE               	incf	126,f
   794  0EEC  2EE1               	goto	init_ram0
   795                           
   796                           	psect	cstackBANK1
   797  00A0                     __pcstackBANK1:	
   798  00A0                     ??_main:	
   799                           
   800                           ; 0 bytes @ 0x0
   801  00A0                     	ds	5
   802  00A5                     main@ut:	
   803                           
   804                           ; 2 bytes @ 0x5
   805  00A5                     	ds	2
   806  00A7                     main@up:	
   807                           
   808                           ; 4 bytes @ 0x7
   809  00A7                     	ds	4
   810  00AB                     main@d1:	
   811                           
   812                           ; 5 bytes @ 0xB
   813  00AB                     	ds	5
   814  00B0                     main@dev:	
   815                           
   816                           ; 26 bytes @ 0x10
   817  00B0                     	ds	26
   818  00CA                     main@t1:	
   819                           
   820                           ; 22 bytes @ 0x2A
   821  00CA                     	ds	22
   822                           
   823                           	psect	cstackCOMMON
   824  0070                     __pcstackCOMMON:	
   825  0070                     ?_ow_init:	
   826  0070                     ?_ow_write_byte:	
   827                           ; 0 bytes @ 0x0
   828                           
   829  0070                     ?_uart_init:	
   830                           ; 0 bytes @ 0x0
   831                           
   832  0070                     ?_i2c_fw_init:	
   833                           ; 0 bytes @ 0x0
   834                           
   835  0070                     ?_tx_init:	
   836                           ; 0 bytes @ 0x0
   837                           
   838  0070                     ?_dht22_init:	
   839                           ; 0 bytes @ 0x0
   840                           
   841  0070                     ?_ds18b20_init:	
   842                           ; 0 bytes @ 0x0
   843                           
   844  0070                     ?_ds18b20_read_scratch:	
   845                           ; 0 bytes @ 0x0
   846                           
   847  0070                     ?_ds18b20_start_convert:	
   848                           ; 0 bytes @ 0x0
   849                           
   850  0070                     ?_pic_init:	
   851                           ; 0 bytes @ 0x0
   852                           
   853  0070                     ?_init_tx_interrupt:	
   854                           ; 0 bytes @ 0x0
   855                           
   856  0070                     ?_isr:	
   857                           ; 0 bytes @ 0x0
   858                           
   859  0070                     ?_i2c_fw_start:	
   860                           ; 0 bytes @ 0x0
   861                           
   862  0070                     ?_i2c_fw_stop:	
   863                           ; 0 bytes @ 0x0
   864                           
   865  0070                     ?_i2c_fw_repstart:	
   866                           ; 0 bytes @ 0x0
   867                           
   868  0070                     ?_i2c_fw_send_ack:	
   869                           ; 0 bytes @ 0x0
   870                           
   871  0070                     ?_i2c_fw_write_byte:	
   872                           ; 0 bytes @ 0x0
   873                           
   874  0070                     ?_sendbit:	
   875                           ; 0 bytes @ 0x0
   876                           
   877  0070                     ??_sendbit:	
   878                           ; 0 bytes @ 0x0
   879                           
   880  0070                     ?_sendbyte:	
   881                           ; 0 bytes @ 0x0
   882                           
   883  0070                     ?_ow_reset:	
   884                           ; 0 bytes @ 0x0
   885                           
   886  0070                     ?_ow_read_byte:	
   887                           ; 1 bytes @ 0x0
   888                           
   889  0070                     ?_bmp180_init:	
   890                           ; 1 bytes @ 0x0
   891                           
   892  0070                     ?_bmp180_read_params:	
   893                           ; 1 bytes @ 0x0
   894                           
   895  0070                     ?_dht22_read:	
   896                           ; 1 bytes @ 0x0
   897                           
   898  0070                     ?_i2c_fw_read_status:	
   899                           ; 1 bytes @ 0x0
   900                           
   901  0070                     ?_i2c_fw_read_byte:	
   902                           ; 1 bytes @ 0x0
   903                           
   904                           
   905                           ; 1 bytes @ 0x0
   906  0070                     	ds	1
   907  0071                     sendbit@bt:	
   908                           
   909                           ; 1 bytes @ 0x1
   910  0071                     	ds	1
   911  0072                     ??_sendbyte:	
   912                           
   913                           ; 0 bytes @ 0x2
   914  0072                     	ds	2
   915  0074                     sendbyte@data:	
   916                           
   917                           ; 1 bytes @ 0x4
   918  0074                     	ds	1
   919  0075                     sendbyte@i:	
   920                           
   921                           ; 1 bytes @ 0x5
   922  0075                     	ds	1
   923  0076                     ?_tx_send_data:	
   924  0076                     tx_send_data@data:	
   925                           ; 1 bytes @ 0x6
   926                           
   927                           
   928                           ; 1 bytes @ 0x6
   929  0076                     	ds	1
   930  0077                     ??_tx_send_data:	
   931                           
   932                           ; 0 bytes @ 0x7
   933  0077                     	ds	1
   934  0078                     tx_send_data@checksum:	
   935                           
   936                           ; 1 bytes @ 0x8
   937  0078                     	ds	1
   938  0079                     tx_send_data@length:	
   939                           
   940                           ; 1 bytes @ 0x9
   941  0079                     	ds	1
   942  007A                     tx_send_data@i:	
   943                           
   944                           ; 1 bytes @ 0xA
   945  007A                     	ds	1
   946                           
   947                           	psect	cstackBANK0
   948  0020                     __pcstackBANK0:	
   949  0020                     ??_isr:	
   950                           
   951                           ; 0 bytes @ 0x0
   952  0020                     	ds	5
   953  0025                     ??_ow_init:	
   954  0025                     ??_ow_reset:	
   955                           ; 0 bytes @ 0x5
   956                           
   957  0025                     ??_ow_write_byte:	
   958                           ; 0 bytes @ 0x5
   959                           
   960  0025                     ??_ow_read_byte:	
   961                           ; 0 bytes @ 0x5
   962                           
   963  0025                     ??_uart_init:	
   964                           ; 0 bytes @ 0x5
   965                           
   966  0025                     ??_i2c_fw_init:	
   967                           ; 0 bytes @ 0x5
   968                           
   969  0025                     ??_tx_init:	
   970                           ; 0 bytes @ 0x5
   971                           
   972  0025                     ??_dht22_init:	
   973                           ; 0 bytes @ 0x5
   974                           
   975  0025                     ??_dht22_read:	
   976                           ; 0 bytes @ 0x5
   977                           
   978  0025                     ??_ds18b20_init:	
   979                           ; 0 bytes @ 0x5
   980                           
   981  0025                     ??_pic_init:	
   982                           ; 0 bytes @ 0x5
   983                           
   984  0025                     ??_init_tx_interrupt:	
   985                           ; 0 bytes @ 0x5
   986                           
   987  0025                     ??_i2c_fw_start:	
   988                           ; 0 bytes @ 0x5
   989                           
   990  0025                     ??_i2c_fw_stop:	
   991                           ; 0 bytes @ 0x5
   992                           
   993  0025                     ??_i2c_fw_repstart:	
   994                           ; 0 bytes @ 0x5
   995                           
   996  0025                     ??_i2c_fw_read_status:	
   997                           ; 0 bytes @ 0x5
   998                           
   999  0025                     ??_i2c_fw_send_ack:	
  1000                           ; 0 bytes @ 0x5
  1001                           
  1002  0025                     ??_i2c_fw_write_byte:	
  1003                           ; 0 bytes @ 0x5
  1004                           
  1005  0025                     ??_i2c_fw_read_byte:	
  1006                           ; 0 bytes @ 0x5
  1007                           
  1008  0025                     i2c_fw_read_status@ret:	
  1009                           ; 0 bytes @ 0x5
  1010                           
  1011                           
  1012                           ; 1 bytes @ 0x5
  1013  0025                     	ds	1
  1014  0026                     ow_reset@ret:	
  1015  0026                     ow_read_byte@i:	
  1016                           ; 1 bytes @ 0x6
  1017                           
  1018                           
  1019                           ; 1 bytes @ 0x6
  1020  0026                     	ds	1
  1021  0027                     ow_write_byte@data:	
  1022  0027                     ow_read_byte@data:	
  1023                           ; 1 bytes @ 0x7
  1024                           
  1025  0027                     i2c_fw_write_byte@data:	
  1026                           ; 1 bytes @ 0x7
  1027                           
  1028  0027                     i2c_fw_read_byte@data:	
  1029                           ; 1 bytes @ 0x7
  1030                           
  1031  0027                     dht22_read@temp:	
  1032                           ; 1 bytes @ 0x7
  1033                           
  1034                           
  1035                           ; 2 bytes @ 0x7
  1036  0027                     	ds	1
  1037  0028                     ow_write_byte@i:	
  1038  0028                     i2c_fw_write_byte@i:	
  1039                           ; 1 bytes @ 0x8
  1040                           
  1041  0028                     i2c_fw_read_byte@i:	
  1042                           ; 1 bytes @ 0x8
  1043                           
  1044                           
  1045                           ; 1 bytes @ 0x8
  1046  0028                     	ds	1
  1047  0029                     ??_ds18b20_read_scratch:	
  1048  0029                     ??_ds18b20_start_convert:	
  1049                           ; 0 bytes @ 0x9
  1050                           
  1051  0029                     ?_i2c_fw_write_and_read:	
  1052                           ; 0 bytes @ 0x9
  1053                           
  1054  0029                     ?_i2c_fw_write_only:	
  1055                           ; 1 bytes @ 0x9
  1056                           
  1057  0029                     i2c_fw_write_and_read@reg:	
  1058                           ; 1 bytes @ 0x9
  1059                           
  1060  0029                     i2c_fw_write_only@reg:	
  1061                           ; 1 bytes @ 0x9
  1062                           
  1063  0029                     dht22_read@humidity:	
  1064                           ; 1 bytes @ 0x9
  1065                           
  1066                           
  1067                           ; 2 bytes @ 0x9
  1068  0029                     	ds	1
  1069  002A                     i2c_fw_write_and_read@data_len:	
  1070  002A                     i2c_fw_write_only@value:	
  1071                           ; 1 bytes @ 0xA
  1072                           
  1073                           
  1074                           ; 1 bytes @ 0xA
  1075  002A                     	ds	1
  1076  002B                     ??_i2c_fw_write_only:	
  1077  002B                     dht22_read@ptr:	
  1078                           ; 0 bytes @ 0xB
  1079                           
  1080  002B                     i2c_fw_write_and_read@data:	
  1081                           ; 1 bytes @ 0xB
  1082                           
  1083                           
  1084                           ; 1 bytes @ 0xB
  1085  002B                     	ds	1
  1086  002C                     ??_i2c_fw_write_and_read:	
  1087  002C                     dht22_read@p:	
  1088                           ; 0 bytes @ 0xC
  1089                           
  1090  002C                     ds18b20_read_scratch@i:	
  1091                           ; 1 bytes @ 0xC
  1092                           
  1093  002C                     ds18b20_start_convert@dev:	
  1094                           ; 1 bytes @ 0xC
  1095                           
  1096  002C                     i2c_fw_write_only@addr:	
  1097                           ; 1 bytes @ 0xC
  1098                           
  1099                           
  1100                           ; 1 bytes @ 0xC
  1101  002C                     	ds	1
  1102  002D                     dht22_read@i:	
  1103  002D                     ds18b20_read_scratch@dev:	
  1104                           ; 1 bytes @ 0xD
  1105                           
  1106  002D                     ds18b20_start_convert@i:	
  1107                           ; 1 bytes @ 0xD
  1108                           
  1109                           
  1110                           ; 1 bytes @ 0xD
  1111  002D                     	ds	1
  1112  002E                     dht22_read@s:	
  1113  002E                     i2c_fw_write_and_read@addr:	
  1114                           ; 1 bytes @ 0xE
  1115                           
  1116                           
  1117                           ; 1 bytes @ 0xE
  1118  002E                     	ds	1
  1119  002F                     i2c_fw_write_and_read@i:	
  1120                           
  1121                           ; 1 bytes @ 0xF
  1122  002F                     	ds	1
  1123  0030                     ??_bmp180_init:	
  1124  0030                     ??_bmp180_read_params:	
  1125                           ; 0 bytes @ 0x10
  1126                           
  1127  0030                     ?_bmp180_get_ut:	
  1128                           ; 0 bytes @ 0x10
  1129                           
  1130  0030                     ?_bmp180_get_up:	
  1131                           ; 2 bytes @ 0x10
  1132                           
  1133                           
  1134                           ; 4 bytes @ 0x10
  1135  0030                     	ds	2
  1136  0032                     ??_bmp180_get_ut:	
  1137                           
  1138                           ; 0 bytes @ 0x12
  1139  0032                     	ds	1
  1140  0033                     bmp180_init@data:	
  1141  0033                     bmp180_read_params@data:	
  1142                           ; 1 bytes @ 0x13
  1143                           
  1144                           
  1145                           ; 22 bytes @ 0x13
  1146  0033                     	ds	1
  1147  0034                     ??_bmp180_get_up:	
  1148  0034                     bmp180_init@device:	
  1149                           ; 0 bytes @ 0x14
  1150                           
  1151                           
  1152                           ; 1 bytes @ 0x14
  1153  0034                     	ds	2
  1154  0036                     bmp180_get_ut@data:	
  1155                           
  1156                           ; 2 bytes @ 0x16
  1157  0036                     	ds	2
  1158  0038                     bmp180_get_ut@device:	
  1159                           
  1160                           ; 1 bytes @ 0x18
  1161  0038                     	ds	4
  1162  003C                     bmp180_get_up@tmp:	
  1163                           
  1164                           ; 4 bytes @ 0x1C
  1165  003C                     	ds	4
  1166  0040                     bmp180_get_up@data:	
  1167                           
  1168                           ; 3 bytes @ 0x20
  1169  0040                     	ds	3
  1170  0043                     bmp180_get_up@device:	
  1171                           
  1172                           ; 1 bytes @ 0x23
  1173  0043                     	ds	6
  1174  0049                     bmp180_read_params@j:	
  1175                           
  1176                           ; 1 bytes @ 0x29
  1177  0049                     	ds	1
  1178  004A                     bmp180_read_params@i:	
  1179                           
  1180                           ; 1 bytes @ 0x2A
  1181  004A                     	ds	1
  1182  004B                     bmp180_read_params@device:	
  1183                           
  1184                           ; 1 bytes @ 0x2B
  1185  004B                     	ds	1
  1186  004C                     ?_main:	
  1187  004C                     main@argc:	
  1188                           ; 2 bytes @ 0x2C
  1189                           
  1190                           
  1191                           ; 2 bytes @ 0x2C
  1192  004C                     	ds	2
  1193  004E                     main@argv:	
  1194                           
  1195                           ; 2 bytes @ 0x2E
  1196  004E                     	ds	2
  1197                           
  1198                           	psect	maintext
  1199  002F                     __pmaintext:	
  1200 ;;
  1201 ;;Main: autosize = 0, tempsize = 5, incstack = 0, save=0
  1202 ;;
  1203 ;; *************** function _main *****************
  1204 ;; Defined at:
  1205 ;;		line 68 in file "main.c"
  1206 ;; Parameters:    Size  Location     Type
  1207 ;;  argc            2   44[BANK0 ] int 
  1208 ;;  argv            2   46[BANK0 ] PTR PTR unsigned char 
  1209 ;; Auto vars:     Size  Location     Type
  1210 ;;  dev            26   16[BANK1 ] struct bmp180_t
  1211 ;;  t1             22   42[BANK1 ] struct ds18b20
  1212 ;;  d1              5   11[BANK1 ] struct dht22
  1213 ;;  up              4    7[BANK1 ] unsigned long 
  1214 ;;  ut              2    5[BANK1 ] unsigned short 
  1215 ;; Return value:  Size  Location     Type
  1216 ;;                  2   44[BANK0 ] int 
  1217 ;; Registers used:
  1218 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1219 ;; Tracked objects:
  1220 ;;		On entry : B00/0
  1221 ;;		On exit  : 0/0
  1222 ;;		Unchanged: 0/0
  1223 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1224 ;;      Params:         0       4       0       0
  1225 ;;      Locals:         0       0      59       0
  1226 ;;      Temps:          0       0       5       0
  1227 ;;      Totals:         0       4      64       0
  1228 ;;Total ram usage:       68 bytes
  1229 ;; Hardware stack levels required when called:    7
  1230 ;; This function calls:
  1231 ;;		_bmp180_get_up
  1232 ;;		_bmp180_get_ut
  1233 ;;		_bmp180_init
  1234 ;;		_bmp180_read_params
  1235 ;;		_dht22_init
  1236 ;;		_dht22_read
  1237 ;;		_ds18b20_init
  1238 ;;		_ds18b20_read_scratch
  1239 ;;		_ds18b20_start_convert
  1240 ;;		_i2c_fw_init
  1241 ;;		_init_tx_interrupt
  1242 ;;		_pic_init
  1243 ;;		_tx_init
  1244 ;;		_uart_init
  1245 ;; This function is called by:
  1246 ;;		Startup code after reset
  1247 ;; This function uses a non-reentrant model
  1248 ;;
  1249                           
  1250                           
  1251                           ;psect for function _main
  1252  002F                     _main:	
  1253                           
  1254                           ;main.c: 72: struct ds18b20 t1 = {
  1255                           ;main.c: 73: {0x28, 0x69, 0x55, 0x5d, 0x5, 0, 0, 0x7c},
  1256                           ;main.c: 74: 0,
  1257                           ;main.c: 75: 0,
  1258                           ;main.c: 76: {0, 0, 0, 0, 0, 0, 0, 0, 0},
  1259                           ;main.c: 77: 0
  1260                           ;main.c: 78: };
  1261                           
  1262                           ;incstack = 0
  1263                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1264  002F  30CA               	movlw	main@t1& (0+255)
  1265  0030  0084               	movwf	4
  1266  0031  3050               	movlw	low main@F1621
  1267  0032  1683               	bsf	3,5	;RP0=1, select bank1
  1268  0033  1303               	bcf	3,6	;RP1=0, select bank1
  1269  0034  00A0               	movwf	??_main^(0+128)
  1270  0035  0804               	movf	4,w
  1271  0036  00A1               	movwf	(??_main^(0+128)+1)
  1272  0037  3016               	movlw	22
  1273  0038  00A2               	movwf	(??_main^(0+128)+2)
  1274  0039                     u1160:	
  1275  0039  0820               	movf	??_main^(0+128),w
  1276  003A  0084               	movwf	4
  1277  003B  1383               	bcf	3,7	;select IRP bank0
  1278  003C  0800               	movf	0,w
  1279  003D  00A3               	movwf	(??_main^(0+128)+3)
  1280  003E  0AA0               	incf	??_main^(0+128),f
  1281  003F  0821               	movf	(??_main^(0+128)+1),w
  1282  0040  0084               	movwf	4
  1283  0041  0823               	movf	(??_main^(0+128)+3),w
  1284  0042  0080               	movwf	0
  1285  0043  0AA1               	incf	(??_main^(0+128)+1),f
  1286  0044  0BA2               	decfsz	(??_main^(0+128)+2),f
  1287  0045  2839               	goto	u1160
  1288                           
  1289                           ;main.c: 88: struct dht22 d1 = {0};
  1290  0046  30AB               	movlw	main@d1& (0+255)
  1291  0047  0084               	movwf	4
  1292  0048  1283               	bcf	3,5	;RP0=0, select bank0
  1293  0049  1303               	bcf	3,6	;RP1=0, select bank0
  1294  004A  0866               	movf	main@F1623,w
  1295  004B  0080               	movwf	0
  1296  004C  0A84               	incf	4,f
  1297  004D  0867               	movf	main@F1623+1,w
  1298  004E  0080               	movwf	0
  1299  004F  0A84               	incf	4,f
  1300  0050  0868               	movf	main@F1623+2,w
  1301  0051  0080               	movwf	0
  1302  0052  0A84               	incf	4,f
  1303  0053  0869               	movf	main@F1623+3,w
  1304  0054  0080               	movwf	0
  1305  0055  0A84               	incf	4,f
  1306  0056  086A               	movf	main@F1623+4,w
  1307  0057  0080               	movwf	0
  1308                           
  1309                           ;main.c: 90: struct bmp180_t dev = {0};
  1310  0058  30B0               	movlw	main@dev& (0+255)
  1311  0059  0084               	movwf	4
  1312  005A  3020               	movlw	low main@F1625
  1313  005B  1683               	bsf	3,5	;RP0=1, select bank1
  1314  005C  1303               	bcf	3,6	;RP1=0, select bank1
  1315  005D  00A0               	movwf	??_main^(0+128)
  1316  005E  0804               	movf	4,w
  1317  005F  00A1               	movwf	(??_main^(0+128)+1)
  1318  0060  301A               	movlw	26
  1319  0061  00A2               	movwf	(??_main^(0+128)+2)
  1320  0062                     u1170:	
  1321  0062  0820               	movf	??_main^(0+128),w
  1322  0063  0084               	movwf	4
  1323  0064  1783               	bsf	3,7	;select IRP bank2
  1324  0065  0800               	movf	0,w
  1325  0066  00A3               	movwf	(??_main^(0+128)+3)
  1326  0067  0AA0               	incf	??_main^(0+128),f
  1327  0068  0821               	movf	(??_main^(0+128)+1),w
  1328  0069  0084               	movwf	4
  1329  006A  1383               	bcf	3,7	;select IRP bank1
  1330  006B  0823               	movf	(??_main^(0+128)+3),w
  1331  006C  0080               	movwf	0
  1332  006D  0AA1               	incf	(??_main^(0+128)+1),f
  1333  006E  0BA2               	decfsz	(??_main^(0+128)+2),f
  1334  006F  2862               	goto	u1170
  1335                           
  1336                           ;main.c: 92: unsigned short ut;
  1337                           ;main.c: 93: unsigned long up;
  1338                           ;main.c: 120: pic_init();
  1339  0070  158A  26ED  118A   	fcall	_pic_init
  1340                           
  1341                           ;main.c: 121: uart_init();
  1342  0073  158A  272A  118A   	fcall	_uart_init
  1343                           
  1344                           ;main.c: 122: ds18b20_init();
  1345  0076  118A  27FC  118A   	fcall	_ds18b20_init
  1346                           
  1347                           ;main.c: 123: dht22_init();
  1348  0079  158A  276E  118A   	fcall	_dht22_init
  1349                           
  1350                           ;main.c: 124: i2c_fw_init();
  1351  007C  158A  2694  118A   	fcall	_i2c_fw_init
  1352                           
  1353                           ;main.c: 125: tx_init();
  1354  007F  158A  2685  118A   	fcall	_tx_init
  1355                           
  1356                           ;main.c: 127: dev.addr = 0xEF;
  1357  0082  30EF               	movlw	239
  1358  0083  1683               	bsf	3,5	;RP0=1, select bank1
  1359  0084  1303               	bcf	3,6	;RP1=0, select bank1
  1360  0085  00A0               	movwf	??_main^(0+128)
  1361  0086  0820               	movf	??_main^(0+128),w
  1362  0087  00C6               	movwf	(main@dev^(0+128)+22)
  1363                           
  1364                           ;main.c: 128: dev.chipid = 0x55;
  1365  0088  3055               	movlw	85
  1366  0089  00A0               	movwf	??_main^(0+128)
  1367  008A  0820               	movf	??_main^(0+128),w
  1368  008B  00C8               	movwf	(main@dev^(0+128)+24)
  1369                           
  1370                           ;main.c: 132: bmp180_init(&dev);
  1371  008C  30B0               	movlw	(low (main@dev| 0))& (0+255)
  1372  008D  118A  27DA  118A   	fcall	_bmp180_init
  1373                           
  1374                           ;main.c: 133: bmp180_read_params(&dev);
  1375  0090  30B0               	movlw	(low (main@dev| 0))& (0+255)
  1376  0091  118A  2553  118A   	fcall	_bmp180_read_params
  1377                           
  1378                           ;main.c: 149: init_tx_interrupt();
  1379  0094  158A  269E  118A   	fcall	_init_tx_interrupt
  1380  0097                     l2360:	
  1381                           ;main.c: 151: while(1){
  1382                           
  1383                           
  1384                           ;main.c: 154: ut = bmp180_get_ut(&dev);
  1385  0097  30B0               	movlw	(low (main@dev| 0))& (0+255)
  1386  0098  118A  25DC  118A   	fcall	_bmp180_get_ut
  1387  009B  1283               	bcf	3,5	;RP0=0, select bank0
  1388  009C  1303               	bcf	3,6	;RP1=0, select bank0
  1389  009D  0831               	movf	?_bmp180_get_ut+1,w
  1390  009E  1683               	bsf	3,5	;RP0=1, select bank1
  1391  009F  1303               	bcf	3,6	;RP1=0, select bank1
  1392  00A0  00A6               	movwf	(main@ut+1)^(0+128)
  1393  00A1  1283               	bcf	3,5	;RP0=0, select bank0
  1394  00A2  1303               	bcf	3,6	;RP1=0, select bank0
  1395  00A3  0830               	movf	?_bmp180_get_ut,w
  1396  00A4  1683               	bsf	3,5	;RP0=1, select bank1
  1397  00A5  1303               	bcf	3,6	;RP1=0, select bank1
  1398  00A6  00A5               	movwf	main@ut^(0+128)
  1399                           
  1400                           ;main.c: 155: up = bmp180_get_up(&dev);
  1401  00A7  30B0               	movlw	(low (main@dev| 0))& (0+255)
  1402  00A8  118A  23F2  118A   	fcall	_bmp180_get_up
  1403  00AB  1283               	bcf	3,5	;RP0=0, select bank0
  1404  00AC  1303               	bcf	3,6	;RP1=0, select bank0
  1405  00AD  0833               	movf	?_bmp180_get_up+3,w
  1406  00AE  1683               	bsf	3,5	;RP0=1, select bank1
  1407  00AF  1303               	bcf	3,6	;RP1=0, select bank1
  1408  00B0  00AA               	movwf	(main@up+3)^(0+128)
  1409  00B1  1283               	bcf	3,5	;RP0=0, select bank0
  1410  00B2  1303               	bcf	3,6	;RP1=0, select bank0
  1411  00B3  0832               	movf	?_bmp180_get_up+2,w
  1412  00B4  1683               	bsf	3,5	;RP0=1, select bank1
  1413  00B5  1303               	bcf	3,6	;RP1=0, select bank1
  1414  00B6  00A9               	movwf	(main@up+2)^(0+128)
  1415  00B7  1283               	bcf	3,5	;RP0=0, select bank0
  1416  00B8  1303               	bcf	3,6	;RP1=0, select bank0
  1417  00B9  0831               	movf	?_bmp180_get_up+1,w
  1418  00BA  1683               	bsf	3,5	;RP0=1, select bank1
  1419  00BB  1303               	bcf	3,6	;RP1=0, select bank1
  1420  00BC  00A8               	movwf	(main@up+1)^(0+128)
  1421  00BD  1283               	bcf	3,5	;RP0=0, select bank0
  1422  00BE  1303               	bcf	3,6	;RP1=0, select bank0
  1423  00BF  0830               	movf	?_bmp180_get_up,w
  1424  00C0  1683               	bsf	3,5	;RP0=1, select bank1
  1425  00C1  1303               	bcf	3,6	;RP1=0, select bank1
  1426  00C2  00A7               	movwf	main@up^(0+128)
  1427                           
  1428                           ;main.c: 159: ds18b20_start_convert(&t1);
  1429  00C3  30CA               	movlw	(low (main@t1| 0))& (0+255)
  1430  00C4  118A  26D2  118A   	fcall	_ds18b20_start_convert
  1431                           
  1432                           ;main.c: 160: ds18b20_read_scratch(&t1);
  1433  00C7  30CA               	movlw	(low (main@t1| 0))& (0+255)
  1434  00C8  118A  22C0  118A   	fcall	_ds18b20_read_scratch
  1435                           
  1436                           ;main.c: 162: data[0] = (t1.tempi >> 8) & 0xFF;
  1437  00CB  1683               	bsf	3,5	;RP0=1, select bank1
  1438  00CC  1303               	bcf	3,6	;RP1=0, select bank1
  1439  00CD  0853               	movf	((main@t1+1)^(0+128)+8),w
  1440  00CE  00A0               	movwf	??_main^(0+128)
  1441  00CF  0820               	movf	??_main^(0+128),w
  1442  00D0  1283               	bcf	3,5	;RP0=0, select bank2
  1443  00D1  1703               	bsf	3,6	;RP1=1, select bank2
  1444  00D2  00BA               	movwf	_data^(0+256)
  1445                           
  1446                           ;main.c: 163: data[1] = (t1.tempi) & 0xFF;
  1447  00D3  1683               	bsf	3,5	;RP0=1, select bank1
  1448  00D4  1303               	bcf	3,6	;RP1=0, select bank1
  1449  00D5  0852               	movf	(main@t1^(0+128)+8),w
  1450  00D6  00A0               	movwf	??_main^(0+128)
  1451  00D7  0820               	movf	??_main^(0+128),w
  1452  00D8  1283               	bcf	3,5	;RP0=0, select bank2
  1453  00D9  1703               	bsf	3,6	;RP1=1, select bank2
  1454  00DA  00BB               	movwf	(_data^(0+256)+1)
  1455                           
  1456                           ;main.c: 165: data[2] = (t1.tempd >> 8) & 0xFF;
  1457  00DB  1683               	bsf	3,5	;RP0=1, select bank1
  1458  00DC  1303               	bcf	3,6	;RP1=0, select bank1
  1459  00DD  0855               	movf	((main@t1+1)^(0+128)+10),w
  1460  00DE  00A0               	movwf	??_main^(0+128)
  1461  00DF  0820               	movf	??_main^(0+128),w
  1462  00E0  1283               	bcf	3,5	;RP0=0, select bank2
  1463  00E1  1703               	bsf	3,6	;RP1=1, select bank2
  1464  00E2  00BC               	movwf	(_data^(0+256)+2)
  1465                           
  1466                           ;main.c: 166: data[3] = (t1.tempd) & 0xFF;
  1467  00E3  1683               	bsf	3,5	;RP0=1, select bank1
  1468  00E4  1303               	bcf	3,6	;RP1=0, select bank1
  1469  00E5  0854               	movf	(main@t1^(0+128)+10),w
  1470  00E6  00A0               	movwf	??_main^(0+128)
  1471  00E7  0820               	movf	??_main^(0+128),w
  1472  00E8  1283               	bcf	3,5	;RP0=0, select bank2
  1473  00E9  1703               	bsf	3,6	;RP1=1, select bank2
  1474  00EA  00BD               	movwf	(_data^(0+256)+3)
  1475                           
  1476                           ;main.c: 168: _delay((unsigned long)((200)*(8000000/4000.0)));
  1477  00EB  3003               	movlw	3
  1478  00EC  1683               	bsf	3,5	;RP0=1, select bank1
  1479  00ED  1303               	bcf	3,6	;RP1=0, select bank1
  1480  00EE  00A2               	movwf	(??_main^(0+128)+2)
  1481  00EF  3008               	movlw	8
  1482  00F0  00A1               	movwf	(??_main^(0+128)+1)
  1483  00F1  3078               	movlw	120
  1484  00F2  00A0               	movwf	??_main^(0+128)
  1485  00F3                     u1217:	
  1486  00F3  0BA0               	decfsz	??_main^(0+128),f
  1487  00F4  28F3               	goto	u1217
  1488  00F5  0BA1               	decfsz	(??_main^(0+128)+1),f
  1489  00F6  28F3               	goto	u1217
  1490  00F7  0BA2               	decfsz	(??_main^(0+128)+2),f
  1491  00F8  28F3               	goto	u1217
  1492                           
  1493                           ;main.c: 175: t1.romcode[0] = 0x28;
  1494  00F9  3028               	movlw	40
  1495  00FA  1683               	bsf	3,5	;RP0=1, select bank1
  1496  00FB  1303               	bcf	3,6	;RP1=0, select bank1
  1497  00FC  00A0               	movwf	??_main^(0+128)
  1498  00FD  0820               	movf	??_main^(0+128),w
  1499  00FE  00CA               	movwf	main@t1^(0+128)
  1500                           
  1501                           ;main.c: 176: t1.romcode[1] = 0x6a;
  1502  00FF  306A               	movlw	106
  1503  0100  00A0               	movwf	??_main^(0+128)
  1504  0101  0820               	movf	??_main^(0+128),w
  1505  0102  00CB               	movwf	(main@t1^(0+128)+1)
  1506                           
  1507                           ;main.c: 177: t1.romcode[2] = 0xf4;
  1508  0103  30F4               	movlw	244
  1509  0104  00A0               	movwf	??_main^(0+128)
  1510  0105  0820               	movf	??_main^(0+128),w
  1511  0106  00CC               	movwf	(main@t1^(0+128)+2)
  1512                           
  1513                           ;main.c: 178: t1.romcode[3] = 0x8f;
  1514  0107  308F               	movlw	143
  1515  0108  00A0               	movwf	??_main^(0+128)
  1516  0109  0820               	movf	??_main^(0+128),w
  1517  010A  00CD               	movwf	(main@t1^(0+128)+3)
  1518                           
  1519                           ;main.c: 179: t1.romcode[4] = 0x6;
  1520  010B  3006               	movlw	6
  1521  010C  00A0               	movwf	??_main^(0+128)
  1522  010D  0820               	movf	??_main^(0+128),w
  1523  010E  00CE               	movwf	(main@t1^(0+128)+4)
  1524                           
  1525                           ;main.c: 180: t1.romcode[5] = 0;
  1526  010F  01CF               	clrf	(main@t1^(0+128)+5)
  1527                           
  1528                           ;main.c: 181: t1.romcode[6] = 0;
  1529  0110  01D0               	clrf	(main@t1^(0+128)+6)
  1530                           
  1531                           ;main.c: 182: t1.romcode[7] = 0x39;
  1532  0111  3039               	movlw	57
  1533  0112  00A0               	movwf	??_main^(0+128)
  1534  0113  0820               	movf	??_main^(0+128),w
  1535  0114  00D1               	movwf	(main@t1^(0+128)+7)
  1536                           
  1537                           ;main.c: 184: t1.scratchpad[0] = 0;
  1538  0115  01D6               	clrf	(main@t1^(0+128)+12)
  1539                           
  1540                           ;main.c: 185: t1.scratchpad[1] = 0;
  1541  0116  01D7               	clrf	(main@t1^(0+128)+13)
  1542                           
  1543                           ;main.c: 186: t1.scratchpad[2] = 0;
  1544  0117  01D8               	clrf	(main@t1^(0+128)+14)
  1545                           
  1546                           ;main.c: 187: t1.scratchpad[3] = 0;
  1547  0118  01D9               	clrf	(main@t1^(0+128)+15)
  1548                           
  1549                           ;main.c: 188: t1.scratchpad[4] = 0;
  1550  0119  01DA               	clrf	(main@t1^(0+128)+16)
  1551                           
  1552                           ;main.c: 189: t1.scratchpad[5] = 0;
  1553  011A  01DB               	clrf	(main@t1^(0+128)+17)
  1554                           
  1555                           ;main.c: 190: t1.scratchpad[6] = 0;
  1556  011B  01DC               	clrf	(main@t1^(0+128)+18)
  1557                           
  1558                           ;main.c: 191: t1.scratchpad[7] = 0;
  1559  011C  01DD               	clrf	(main@t1^(0+128)+19)
  1560                           
  1561                           ;main.c: 192: t1.scratchpad[8] = 0;
  1562  011D  01DE               	clrf	(main@t1^(0+128)+20)
  1563                           
  1564                           ;main.c: 195: ds18b20_start_convert(&t1);
  1565  011E  30CA               	movlw	(low (main@t1| 0))& (0+255)
  1566  011F  118A  26D2  118A   	fcall	_ds18b20_start_convert
  1567                           
  1568                           ;main.c: 196: ds18b20_read_scratch(&t1);
  1569  0122  30CA               	movlw	(low (main@t1| 0))& (0+255)
  1570  0123  118A  22C0  118A   	fcall	_ds18b20_read_scratch
  1571                           
  1572                           ;main.c: 198: data[4] = (t1.tempi >> 8) & 0xFF;
  1573  0126  1683               	bsf	3,5	;RP0=1, select bank1
  1574  0127  1303               	bcf	3,6	;RP1=0, select bank1
  1575  0128  0853               	movf	((main@t1+1)^(0+128)+8),w
  1576  0129  00A0               	movwf	??_main^(0+128)
  1577  012A  0820               	movf	??_main^(0+128),w
  1578  012B  1283               	bcf	3,5	;RP0=0, select bank2
  1579  012C  1703               	bsf	3,6	;RP1=1, select bank2
  1580  012D  00BE               	movwf	(_data^(0+256)+4)
  1581                           
  1582                           ;main.c: 199: data[5] = (t1.tempi) & 0xFF;
  1583  012E  1683               	bsf	3,5	;RP0=1, select bank1
  1584  012F  1303               	bcf	3,6	;RP1=0, select bank1
  1585  0130  0852               	movf	(main@t1^(0+128)+8),w
  1586  0131  00A0               	movwf	??_main^(0+128)
  1587  0132  0820               	movf	??_main^(0+128),w
  1588  0133  1283               	bcf	3,5	;RP0=0, select bank2
  1589  0134  1703               	bsf	3,6	;RP1=1, select bank2
  1590  0135  00BF               	movwf	(_data^(0+256)+5)
  1591                           
  1592                           ;main.c: 201: data[6] = (t1.tempd >> 8) & 0xFF;
  1593  0136  1683               	bsf	3,5	;RP0=1, select bank1
  1594  0137  1303               	bcf	3,6	;RP1=0, select bank1
  1595  0138  0855               	movf	((main@t1+1)^(0+128)+10),w
  1596  0139  00A0               	movwf	??_main^(0+128)
  1597  013A  0820               	movf	??_main^(0+128),w
  1598  013B  1283               	bcf	3,5	;RP0=0, select bank2
  1599  013C  1703               	bsf	3,6	;RP1=1, select bank2
  1600  013D  00C0               	movwf	(_data^(0+256)+6)
  1601                           
  1602                           ;main.c: 202: data[7] = (t1.tempd) & 0xFF;
  1603  013E  1683               	bsf	3,5	;RP0=1, select bank1
  1604  013F  1303               	bcf	3,6	;RP1=0, select bank1
  1605  0140  0854               	movf	(main@t1^(0+128)+10),w
  1606  0141  00A0               	movwf	??_main^(0+128)
  1607  0142  0820               	movf	??_main^(0+128),w
  1608  0143  1283               	bcf	3,5	;RP0=0, select bank2
  1609  0144  1703               	bsf	3,6	;RP1=1, select bank2
  1610  0145  00C1               	movwf	(_data^(0+256)+7)
  1611                           
  1612                           ;main.c: 204: _delay((unsigned long)((200)*(8000000/4000.0)));
  1613  0146  3003               	movlw	3
  1614  0147  1683               	bsf	3,5	;RP0=1, select bank1
  1615  0148  1303               	bcf	3,6	;RP1=0, select bank1
  1616  0149  00A2               	movwf	(??_main^(0+128)+2)
  1617  014A  3008               	movlw	8
  1618  014B  00A1               	movwf	(??_main^(0+128)+1)
  1619  014C  3078               	movlw	120
  1620  014D  00A0               	movwf	??_main^(0+128)
  1621  014E                     u1227:	
  1622  014E  0BA0               	decfsz	??_main^(0+128),f
  1623  014F  294E               	goto	u1227
  1624  0150  0BA1               	decfsz	(??_main^(0+128)+1),f
  1625  0151  294E               	goto	u1227
  1626  0152  0BA2               	decfsz	(??_main^(0+128)+2),f
  1627  0153  294E               	goto	u1227
  1628                           
  1629                           ;main.c: 206: t1.romcode[0] = 0x28;
  1630  0154  3028               	movlw	40
  1631  0155  1683               	bsf	3,5	;RP0=1, select bank1
  1632  0156  1303               	bcf	3,6	;RP1=0, select bank1
  1633  0157  00A0               	movwf	??_main^(0+128)
  1634  0158  0820               	movf	??_main^(0+128),w
  1635  0159  00CA               	movwf	main@t1^(0+128)
  1636                           
  1637                           ;main.c: 207: t1.romcode[1] = 0x69;
  1638  015A  3069               	movlw	105
  1639  015B  00A0               	movwf	??_main^(0+128)
  1640  015C  0820               	movf	??_main^(0+128),w
  1641  015D  00CB               	movwf	(main@t1^(0+128)+1)
  1642                           
  1643                           ;main.c: 208: t1.romcode[2] = 0x55;
  1644  015E  3055               	movlw	85
  1645  015F  00A0               	movwf	??_main^(0+128)
  1646  0160  0820               	movf	??_main^(0+128),w
  1647  0161  00CC               	movwf	(main@t1^(0+128)+2)
  1648                           
  1649                           ;main.c: 209: t1.romcode[3] = 0x5d;
  1650  0162  305D               	movlw	93
  1651  0163  00A0               	movwf	??_main^(0+128)
  1652  0164  0820               	movf	??_main^(0+128),w
  1653  0165  00CD               	movwf	(main@t1^(0+128)+3)
  1654                           
  1655                           ;main.c: 210: t1.romcode[4] = 0x5;
  1656  0166  3005               	movlw	5
  1657  0167  00A0               	movwf	??_main^(0+128)
  1658  0168  0820               	movf	??_main^(0+128),w
  1659  0169  00CE               	movwf	(main@t1^(0+128)+4)
  1660                           
  1661                           ;main.c: 211: t1.romcode[5] = 0;
  1662  016A  01CF               	clrf	(main@t1^(0+128)+5)
  1663                           
  1664                           ;main.c: 212: t1.romcode[6] = 0;
  1665  016B  01D0               	clrf	(main@t1^(0+128)+6)
  1666                           
  1667                           ;main.c: 213: t1.romcode[7] = 0x7c;
  1668  016C  307C               	movlw	124
  1669  016D  00A0               	movwf	??_main^(0+128)
  1670  016E  0820               	movf	??_main^(0+128),w
  1671  016F  00D1               	movwf	(main@t1^(0+128)+7)
  1672                           
  1673                           ;main.c: 215: t1.scratchpad[0] = 0;
  1674  0170  01D6               	clrf	(main@t1^(0+128)+12)
  1675                           
  1676                           ;main.c: 216: t1.scratchpad[1] = 0;
  1677  0171  01D7               	clrf	(main@t1^(0+128)+13)
  1678                           
  1679                           ;main.c: 217: t1.scratchpad[2] = 0;
  1680  0172  01D8               	clrf	(main@t1^(0+128)+14)
  1681                           
  1682                           ;main.c: 218: t1.scratchpad[3] = 0;
  1683  0173  01D9               	clrf	(main@t1^(0+128)+15)
  1684                           
  1685                           ;main.c: 219: t1.scratchpad[4] = 0;
  1686  0174  01DA               	clrf	(main@t1^(0+128)+16)
  1687                           
  1688                           ;main.c: 220: t1.scratchpad[5] = 0;
  1689  0175  01DB               	clrf	(main@t1^(0+128)+17)
  1690                           
  1691                           ;main.c: 221: t1.scratchpad[6] = 0;
  1692  0176  01DC               	clrf	(main@t1^(0+128)+18)
  1693                           
  1694                           ;main.c: 222: t1.scratchpad[7] = 0;
  1695  0177  01DD               	clrf	(main@t1^(0+128)+19)
  1696                           
  1697                           ;main.c: 223: t1.scratchpad[8] = 0;
  1698  0178  01DE               	clrf	(main@t1^(0+128)+20)
  1699                           
  1700                           ;main.c: 226: dht22_read(&d1);
  1701  0179  30AB               	movlw	(low (main@d1| 0))& (0+255)
  1702  017A  118A  24C6  118A   	fcall	_dht22_read
  1703                           
  1704                           ;main.c: 265: data[8] = d1.ti;
  1705  017D  1683               	bsf	3,5	;RP0=1, select bank1
  1706  017E  1303               	bcf	3,6	;RP1=0, select bank1
  1707  017F  082D               	movf	(main@d1^(0+128)+2),w
  1708  0180  00A0               	movwf	??_main^(0+128)
  1709  0181  0820               	movf	??_main^(0+128),w
  1710  0182  1283               	bcf	3,5	;RP0=0, select bank2
  1711  0183  1703               	bsf	3,6	;RP1=1, select bank2
  1712  0184  00C2               	movwf	(_data^(0+256)+8)
  1713                           
  1714                           ;main.c: 266: data[9] = d1.td;
  1715  0185  1683               	bsf	3,5	;RP0=1, select bank1
  1716  0186  1303               	bcf	3,6	;RP1=0, select bank1
  1717  0187  082E               	movf	(main@d1^(0+128)+3),w
  1718  0188  00A0               	movwf	??_main^(0+128)
  1719  0189  0820               	movf	??_main^(0+128),w
  1720  018A  1283               	bcf	3,5	;RP0=0, select bank2
  1721  018B  1703               	bsf	3,6	;RP1=1, select bank2
  1722  018C  00C3               	movwf	(_data^(0+256)+9)
  1723                           
  1724                           ;main.c: 268: data[10] = d1.rhi;
  1725  018D  1683               	bsf	3,5	;RP0=1, select bank1
  1726  018E  1303               	bcf	3,6	;RP1=0, select bank1
  1727  018F  082B               	movf	main@d1^(0+128),w
  1728  0190  00A0               	movwf	??_main^(0+128)
  1729  0191  0820               	movf	??_main^(0+128),w
  1730  0192  1283               	bcf	3,5	;RP0=0, select bank2
  1731  0193  1703               	bsf	3,6	;RP1=1, select bank2
  1732  0194  00C4               	movwf	(_data^(0+256)+10)
  1733                           
  1734                           ;main.c: 269: data[11] = d1.rhd;
  1735  0195  1683               	bsf	3,5	;RP0=1, select bank1
  1736  0196  1303               	bcf	3,6	;RP1=0, select bank1
  1737  0197  082C               	movf	(main@d1^(0+128)+1),w
  1738  0198  00A0               	movwf	??_main^(0+128)
  1739  0199  0820               	movf	??_main^(0+128),w
  1740  019A  1283               	bcf	3,5	;RP0=0, select bank2
  1741  019B  1703               	bsf	3,6	;RP1=1, select bank2
  1742  019C  00C5               	movwf	(_data^(0+256)+11)
  1743                           
  1744                           ;main.c: 271: data[12] = (dev.params.ac1 >> 8) & 0xFF;
  1745  019D  1683               	bsf	3,5	;RP0=1, select bank1
  1746  019E  1303               	bcf	3,6	;RP1=0, select bank1
  1747  019F  0831               	movf	(main@dev+1)^(0+128),w
  1748  01A0  00A0               	movwf	??_main^(0+128)
  1749  01A1  0820               	movf	??_main^(0+128),w
  1750  01A2  1283               	bcf	3,5	;RP0=0, select bank2
  1751  01A3  1703               	bsf	3,6	;RP1=1, select bank2
  1752  01A4  00C6               	movwf	(_data^(0+256)+12)
  1753                           
  1754                           ;main.c: 272: data[13] = (dev.params.ac1) & 0xFF;
  1755  01A5  1683               	bsf	3,5	;RP0=1, select bank1
  1756  01A6  1303               	bcf	3,6	;RP1=0, select bank1
  1757  01A7  0830               	movf	main@dev^(0+128),w
  1758  01A8  00A0               	movwf	??_main^(0+128)
  1759  01A9  0820               	movf	??_main^(0+128),w
  1760  01AA  1283               	bcf	3,5	;RP0=0, select bank2
  1761  01AB  1703               	bsf	3,6	;RP1=1, select bank2
  1762  01AC  00C7               	movwf	(_data^(0+256)+13)
  1763                           
  1764                           ;main.c: 274: data[14] = (dev.params.ac2 >> 8) & 0xFF;
  1765  01AD  1683               	bsf	3,5	;RP0=1, select bank1
  1766  01AE  1303               	bcf	3,6	;RP1=0, select bank1
  1767  01AF  0833               	movf	((main@dev+1)^(0+128)+2),w
  1768  01B0  00A0               	movwf	??_main^(0+128)
  1769  01B1  0820               	movf	??_main^(0+128),w
  1770  01B2  1283               	bcf	3,5	;RP0=0, select bank2
  1771  01B3  1703               	bsf	3,6	;RP1=1, select bank2
  1772  01B4  00C8               	movwf	(_data^(0+256)+14)
  1773                           
  1774                           ;main.c: 275: data[15] = (dev.params.ac2) & 0xFF;
  1775  01B5  1683               	bsf	3,5	;RP0=1, select bank1
  1776  01B6  1303               	bcf	3,6	;RP1=0, select bank1
  1777  01B7  0832               	movf	(main@dev^(0+128)+2),w
  1778  01B8  00A0               	movwf	??_main^(0+128)
  1779  01B9  0820               	movf	??_main^(0+128),w
  1780  01BA  1283               	bcf	3,5	;RP0=0, select bank2
  1781  01BB  1703               	bsf	3,6	;RP1=1, select bank2
  1782  01BC  00C9               	movwf	(_data^(0+256)+15)
  1783                           
  1784                           ;main.c: 277: data[16] = (dev.params.ac3 >> 8) & 0xFF;
  1785  01BD  1683               	bsf	3,5	;RP0=1, select bank1
  1786  01BE  1303               	bcf	3,6	;RP1=0, select bank1
  1787  01BF  0835               	movf	((main@dev+1)^(0+128)+4),w
  1788  01C0  00A0               	movwf	??_main^(0+128)
  1789  01C1  0820               	movf	??_main^(0+128),w
  1790  01C2  1283               	bcf	3,5	;RP0=0, select bank2
  1791  01C3  1703               	bsf	3,6	;RP1=1, select bank2
  1792  01C4  00CA               	movwf	(_data^(0+256)+16)
  1793                           
  1794                           ;main.c: 278: data[17] = (dev.params.ac3) & 0xFF;
  1795  01C5  1683               	bsf	3,5	;RP0=1, select bank1
  1796  01C6  1303               	bcf	3,6	;RP1=0, select bank1
  1797  01C7  0834               	movf	(main@dev^(0+128)+4),w
  1798  01C8  00A0               	movwf	??_main^(0+128)
  1799  01C9  0820               	movf	??_main^(0+128),w
  1800  01CA  1283               	bcf	3,5	;RP0=0, select bank2
  1801  01CB  1703               	bsf	3,6	;RP1=1, select bank2
  1802  01CC  00CB               	movwf	(_data^(0+256)+17)
  1803                           
  1804                           ;main.c: 280: data[18] = (dev.params.ac4 >> 8) & 0xFF;
  1805  01CD  1683               	bsf	3,5	;RP0=1, select bank1
  1806  01CE  1303               	bcf	3,6	;RP1=0, select bank1
  1807  01CF  0837               	movf	((main@dev+1)^(0+128)+6),w
  1808  01D0  00A0               	movwf	??_main^(0+128)
  1809  01D1  0820               	movf	??_main^(0+128),w
  1810  01D2  1283               	bcf	3,5	;RP0=0, select bank2
  1811  01D3  1703               	bsf	3,6	;RP1=1, select bank2
  1812  01D4  00CC               	movwf	(_data^(0+256)+18)
  1813                           
  1814                           ;main.c: 281: data[19] = (dev.params.ac4) & 0xFF;
  1815  01D5  1683               	bsf	3,5	;RP0=1, select bank1
  1816  01D6  1303               	bcf	3,6	;RP1=0, select bank1
  1817  01D7  0836               	movf	(main@dev^(0+128)+6),w
  1818  01D8  00A0               	movwf	??_main^(0+128)
  1819  01D9  0820               	movf	??_main^(0+128),w
  1820  01DA  1283               	bcf	3,5	;RP0=0, select bank2
  1821  01DB  1703               	bsf	3,6	;RP1=1, select bank2
  1822  01DC  00CD               	movwf	(_data^(0+256)+19)
  1823                           
  1824                           ;main.c: 283: data[20] = (dev.params.ac5 >> 8) & 0xFF;
  1825  01DD  1683               	bsf	3,5	;RP0=1, select bank1
  1826  01DE  1303               	bcf	3,6	;RP1=0, select bank1
  1827  01DF  0839               	movf	((main@dev+1)^(0+128)+8),w
  1828  01E0  00A0               	movwf	??_main^(0+128)
  1829  01E1  0820               	movf	??_main^(0+128),w
  1830  01E2  1283               	bcf	3,5	;RP0=0, select bank2
  1831  01E3  1703               	bsf	3,6	;RP1=1, select bank2
  1832  01E4  00CE               	movwf	(_data^(0+256)+20)
  1833                           
  1834                           ;main.c: 284: data[21] = (dev.params.ac5) & 0xFF;
  1835  01E5  1683               	bsf	3,5	;RP0=1, select bank1
  1836  01E6  1303               	bcf	3,6	;RP1=0, select bank1
  1837  01E7  0838               	movf	(main@dev^(0+128)+8),w
  1838  01E8  00A0               	movwf	??_main^(0+128)
  1839  01E9  0820               	movf	??_main^(0+128),w
  1840  01EA  1283               	bcf	3,5	;RP0=0, select bank2
  1841  01EB  1703               	bsf	3,6	;RP1=1, select bank2
  1842  01EC  00CF               	movwf	(_data^(0+256)+21)
  1843                           
  1844                           ;main.c: 286: data[22] = (dev.params.ac6 >> 8) & 0xFF;
  1845  01ED  1683               	bsf	3,5	;RP0=1, select bank1
  1846  01EE  1303               	bcf	3,6	;RP1=0, select bank1
  1847  01EF  083B               	movf	((main@dev+1)^(0+128)+10),w
  1848  01F0  00A0               	movwf	??_main^(0+128)
  1849  01F1  0820               	movf	??_main^(0+128),w
  1850  01F2  1283               	bcf	3,5	;RP0=0, select bank2
  1851  01F3  1703               	bsf	3,6	;RP1=1, select bank2
  1852  01F4  00D0               	movwf	(_data^(0+256)+22)
  1853                           
  1854                           ;main.c: 287: data[23] = (dev.params.ac6) & 0xFF;
  1855  01F5  1683               	bsf	3,5	;RP0=1, select bank1
  1856  01F6  1303               	bcf	3,6	;RP1=0, select bank1
  1857  01F7  083A               	movf	(main@dev^(0+128)+10),w
  1858  01F8  00A0               	movwf	??_main^(0+128)
  1859  01F9  0820               	movf	??_main^(0+128),w
  1860  01FA  1283               	bcf	3,5	;RP0=0, select bank2
  1861  01FB  1703               	bsf	3,6	;RP1=1, select bank2
  1862  01FC  00D1               	movwf	(_data^(0+256)+23)
  1863                           
  1864                           ;main.c: 289: data[24] = (dev.params.b1 >> 8) & 0xFF;
  1865  01FD  1683               	bsf	3,5	;RP0=1, select bank1
  1866  01FE  1303               	bcf	3,6	;RP1=0, select bank1
  1867  01FF  083D               	movf	((main@dev+1)^(0+128)+12),w
  1868  0200  00A0               	movwf	??_main^(0+128)
  1869  0201  0820               	movf	??_main^(0+128),w
  1870  0202  1283               	bcf	3,5	;RP0=0, select bank2
  1871  0203  1703               	bsf	3,6	;RP1=1, select bank2
  1872  0204  00D2               	movwf	(_data^(0+256)+24)
  1873                           
  1874                           ;main.c: 290: data[25] = (dev.params.b1) & 0xFF;
  1875  0205  1683               	bsf	3,5	;RP0=1, select bank1
  1876  0206  1303               	bcf	3,6	;RP1=0, select bank1
  1877  0207  083C               	movf	(main@dev^(0+128)+12),w
  1878  0208  00A0               	movwf	??_main^(0+128)
  1879  0209  0820               	movf	??_main^(0+128),w
  1880  020A  1283               	bcf	3,5	;RP0=0, select bank2
  1881  020B  1703               	bsf	3,6	;RP1=1, select bank2
  1882  020C  00D3               	movwf	(_data^(0+256)+25)
  1883                           
  1884                           ;main.c: 292: data[26] = (dev.params.b2 >> 8) & 0xFF;
  1885  020D  1683               	bsf	3,5	;RP0=1, select bank1
  1886  020E  1303               	bcf	3,6	;RP1=0, select bank1
  1887  020F  083F               	movf	((main@dev+1)^(0+128)+14),w
  1888  0210  00A0               	movwf	??_main^(0+128)
  1889  0211  0820               	movf	??_main^(0+128),w
  1890  0212  1283               	bcf	3,5	;RP0=0, select bank2
  1891  0213  1703               	bsf	3,6	;RP1=1, select bank2
  1892  0214  00D4               	movwf	(_data^(0+256)+26)
  1893                           
  1894                           ;main.c: 293: data[27] = (dev.params.b2) & 0xFF;
  1895  0215  1683               	bsf	3,5	;RP0=1, select bank1
  1896  0216  1303               	bcf	3,6	;RP1=0, select bank1
  1897  0217  083E               	movf	(main@dev^(0+128)+14),w
  1898  0218  00A0               	movwf	??_main^(0+128)
  1899  0219  0820               	movf	??_main^(0+128),w
  1900  021A  1283               	bcf	3,5	;RP0=0, select bank2
  1901  021B  1703               	bsf	3,6	;RP1=1, select bank2
  1902  021C  00D5               	movwf	(_data^(0+256)+27)
  1903                           
  1904                           ;main.c: 295: data[28] = (dev.params.mb >> 8) & 0xFF;
  1905  021D  1683               	bsf	3,5	;RP0=1, select bank1
  1906  021E  1303               	bcf	3,6	;RP1=0, select bank1
  1907  021F  0841               	movf	((main@dev+1)^(0+128)+16),w
  1908  0220  00A0               	movwf	??_main^(0+128)
  1909  0221  0820               	movf	??_main^(0+128),w
  1910  0222  1283               	bcf	3,5	;RP0=0, select bank2
  1911  0223  1703               	bsf	3,6	;RP1=1, select bank2
  1912  0224  00D6               	movwf	(_data^(0+256)+28)
  1913                           
  1914                           ;main.c: 296: data[29] = (dev.params.mb) & 0xFF;
  1915  0225  1683               	bsf	3,5	;RP0=1, select bank1
  1916  0226  1303               	bcf	3,6	;RP1=0, select bank1
  1917  0227  0840               	movf	(main@dev^(0+128)+16),w
  1918  0228  00A0               	movwf	??_main^(0+128)
  1919  0229  0820               	movf	??_main^(0+128),w
  1920  022A  1283               	bcf	3,5	;RP0=0, select bank2
  1921  022B  1703               	bsf	3,6	;RP1=1, select bank2
  1922  022C  00D7               	movwf	(_data^(0+256)+29)
  1923                           
  1924                           ;main.c: 298: data[30] = (dev.params.mc >> 8) & 0xFF;
  1925  022D  1683               	bsf	3,5	;RP0=1, select bank1
  1926  022E  1303               	bcf	3,6	;RP1=0, select bank1
  1927  022F  0843               	movf	((main@dev+1)^(0+128)+18),w
  1928  0230  00A0               	movwf	??_main^(0+128)
  1929  0231  0820               	movf	??_main^(0+128),w
  1930  0232  1283               	bcf	3,5	;RP0=0, select bank2
  1931  0233  1703               	bsf	3,6	;RP1=1, select bank2
  1932  0234  00D8               	movwf	(_data^(0+256)+30)
  1933                           
  1934                           ;main.c: 299: data[31] = (dev.params.mc) & 0xFF;
  1935  0235  1683               	bsf	3,5	;RP0=1, select bank1
  1936  0236  1303               	bcf	3,6	;RP1=0, select bank1
  1937  0237  0842               	movf	(main@dev^(0+128)+18),w
  1938  0238  00A0               	movwf	??_main^(0+128)
  1939  0239  0820               	movf	??_main^(0+128),w
  1940  023A  1283               	bcf	3,5	;RP0=0, select bank2
  1941  023B  1703               	bsf	3,6	;RP1=1, select bank2
  1942  023C  00D9               	movwf	(_data^(0+256)+31)
  1943                           
  1944                           ;main.c: 301: data[32] = (dev.params.md >> 8) & 0xFF;
  1945  023D  1683               	bsf	3,5	;RP0=1, select bank1
  1946  023E  1303               	bcf	3,6	;RP1=0, select bank1
  1947  023F  0845               	movf	((main@dev+1)^(0+128)+20),w
  1948  0240  00A0               	movwf	??_main^(0+128)
  1949  0241  0820               	movf	??_main^(0+128),w
  1950  0242  1283               	bcf	3,5	;RP0=0, select bank2
  1951  0243  1703               	bsf	3,6	;RP1=1, select bank2
  1952  0244  00DA               	movwf	(_data^(0+256)+32)
  1953                           
  1954                           ;main.c: 302: data[33] = (dev.params.md) & 0xFF;
  1955  0245  1683               	bsf	3,5	;RP0=1, select bank1
  1956  0246  1303               	bcf	3,6	;RP1=0, select bank1
  1957  0247  0844               	movf	(main@dev^(0+128)+20),w
  1958  0248  00A0               	movwf	??_main^(0+128)
  1959  0249  0820               	movf	??_main^(0+128),w
  1960  024A  1283               	bcf	3,5	;RP0=0, select bank2
  1961  024B  1703               	bsf	3,6	;RP1=1, select bank2
  1962  024C  00DB               	movwf	(_data^(0+256)+33)
  1963                           
  1964                           ;main.c: 304: data[34] = (ut >> 8) & 0xFF;
  1965  024D  1683               	bsf	3,5	;RP0=1, select bank1
  1966  024E  1303               	bcf	3,6	;RP1=0, select bank1
  1967  024F  0826               	movf	(main@ut+1)^(0+128),w
  1968  0250  00A0               	movwf	??_main^(0+128)
  1969  0251  0820               	movf	??_main^(0+128),w
  1970  0252  1283               	bcf	3,5	;RP0=0, select bank2
  1971  0253  1703               	bsf	3,6	;RP1=1, select bank2
  1972  0254  00DC               	movwf	(_data^(0+256)+34)
  1973                           
  1974                           ;main.c: 305: data[35] = (ut) & 0xFF;
  1975  0255  1683               	bsf	3,5	;RP0=1, select bank1
  1976  0256  1303               	bcf	3,6	;RP1=0, select bank1
  1977  0257  0825               	movf	main@ut^(0+128),w
  1978  0258  00A0               	movwf	??_main^(0+128)
  1979  0259  0820               	movf	??_main^(0+128),w
  1980  025A  1283               	bcf	3,5	;RP0=0, select bank2
  1981  025B  1703               	bsf	3,6	;RP1=1, select bank2
  1982  025C  00DD               	movwf	(_data^(0+256)+35)
  1983                           
  1984                           ;main.c: 307: data[36] = (up >> 24) & 0xFF;
  1985  025D  1683               	bsf	3,5	;RP0=1, select bank1
  1986  025E  1303               	bcf	3,6	;RP1=0, select bank1
  1987  025F  0827               	movf	main@up^(0+128),w
  1988  0260  00A0               	movwf	??_main^(0+128)
  1989  0261  0828               	movf	(main@up+1)^(0+128),w
  1990  0262  00A1               	movwf	(??_main^(0+128)+1)
  1991  0263  0829               	movf	(main@up+2)^(0+128),w
  1992  0264  00A2               	movwf	(??_main^(0+128)+2)
  1993  0265  082A               	movf	(main@up+3)^(0+128),w
  1994  0266  00A3               	movwf	(??_main^(0+128)+3)
  1995  0267  3018               	movlw	24
  1996  0268                     u1185:	
  1997  0268  1003               	clrc
  1998  0269  0CA3               	rrf	(??_main^(0+128)+3),f
  1999  026A  0CA2               	rrf	(??_main^(0+128)+2),f
  2000  026B  0CA1               	rrf	(??_main^(0+128)+1),f
  2001  026C  0CA0               	rrf	??_main^(0+128),f
  2002  026D  3EFF               	addlw	-1
  2003  026E  1D03               	skipz
  2004  026F  2A68               	goto	u1185
  2005  0270  0820               	movf	??_main^(0+128),w
  2006  0271  00A4               	movwf	(??_main+4)^(0+128)
  2007  0272  0824               	movf	(??_main+4)^(0+128),w
  2008  0273  1283               	bcf	3,5	;RP0=0, select bank2
  2009  0274  1703               	bsf	3,6	;RP1=1, select bank2
  2010  0275  00DE               	movwf	(_data^(0+256)+36)
  2011                           
  2012                           ;main.c: 308: data[37] = (up >> 16) & 0xFF;
  2013  0276  1683               	bsf	3,5	;RP0=1, select bank1
  2014  0277  1303               	bcf	3,6	;RP1=0, select bank1
  2015  0278  0827               	movf	main@up^(0+128),w
  2016  0279  00A0               	movwf	??_main^(0+128)
  2017  027A  0828               	movf	(main@up+1)^(0+128),w
  2018  027B  00A1               	movwf	(??_main^(0+128)+1)
  2019  027C  0829               	movf	(main@up+2)^(0+128),w
  2020  027D  00A2               	movwf	(??_main^(0+128)+2)
  2021  027E  082A               	movf	(main@up+3)^(0+128),w
  2022  027F  00A3               	movwf	(??_main^(0+128)+3)
  2023  0280  3010               	movlw	16
  2024  0281                     u1195:	
  2025  0281  1003               	clrc
  2026  0282  0CA3               	rrf	(??_main^(0+128)+3),f
  2027  0283  0CA2               	rrf	(??_main^(0+128)+2),f
  2028  0284  0CA1               	rrf	(??_main^(0+128)+1),f
  2029  0285  0CA0               	rrf	??_main^(0+128),f
  2030  0286  3EFF               	addlw	-1
  2031  0287  1D03               	skipz
  2032  0288  2A81               	goto	u1195
  2033  0289  0820               	movf	??_main^(0+128),w
  2034  028A  00A4               	movwf	(??_main+4)^(0+128)
  2035  028B  0824               	movf	(??_main+4)^(0+128),w
  2036  028C  1283               	bcf	3,5	;RP0=0, select bank2
  2037  028D  1703               	bsf	3,6	;RP1=1, select bank2
  2038  028E  00DF               	movwf	(_data^(0+256)+37)
  2039                           
  2040                           ;main.c: 309: data[38] = (up >> 8) & 0xFF;
  2041  028F  1683               	bsf	3,5	;RP0=1, select bank1
  2042  0290  1303               	bcf	3,6	;RP1=0, select bank1
  2043  0291  0827               	movf	main@up^(0+128),w
  2044  0292  00A0               	movwf	??_main^(0+128)
  2045  0293  0828               	movf	(main@up+1)^(0+128),w
  2046  0294  00A1               	movwf	(??_main^(0+128)+1)
  2047  0295  0829               	movf	(main@up+2)^(0+128),w
  2048  0296  00A2               	movwf	(??_main^(0+128)+2)
  2049  0297  082A               	movf	(main@up+3)^(0+128),w
  2050  0298  00A3               	movwf	(??_main^(0+128)+3)
  2051  0299  3008               	movlw	8
  2052  029A                     u1205:	
  2053  029A  1003               	clrc
  2054  029B  0CA3               	rrf	(??_main^(0+128)+3),f
  2055  029C  0CA2               	rrf	(??_main^(0+128)+2),f
  2056  029D  0CA1               	rrf	(??_main^(0+128)+1),f
  2057  029E  0CA0               	rrf	??_main^(0+128),f
  2058  029F  3EFF               	addlw	-1
  2059  02A0  1D03               	skipz
  2060  02A1  2A9A               	goto	u1205
  2061  02A2  0820               	movf	??_main^(0+128),w
  2062  02A3  00A4               	movwf	(??_main+4)^(0+128)
  2063  02A4  0824               	movf	(??_main+4)^(0+128),w
  2064  02A5  1283               	bcf	3,5	;RP0=0, select bank2
  2065  02A6  1703               	bsf	3,6	;RP1=1, select bank2
  2066  02A7  00E0               	movwf	(_data^(0+256)+38)
  2067                           
  2068                           ;main.c: 310: data[39] = (up) & 0xFF;
  2069  02A8  1683               	bsf	3,5	;RP0=1, select bank1
  2070  02A9  1303               	bcf	3,6	;RP1=0, select bank1
  2071  02AA  0827               	movf	main@up^(0+128),w
  2072  02AB  00A0               	movwf	??_main^(0+128)
  2073  02AC  0820               	movf	??_main^(0+128),w
  2074  02AD  1283               	bcf	3,5	;RP0=0, select bank2
  2075  02AE  1703               	bsf	3,6	;RP1=1, select bank2
  2076  02AF  00E1               	movwf	(_data^(0+256)+39)
  2077                           
  2078                           ;main.c: 314: _delay((unsigned long)((1000)*(8000000/4000.0)));
  2079  02B0  300B               	movlw	11
  2080  02B1  1683               	bsf	3,5	;RP0=1, select bank1
  2081  02B2  1303               	bcf	3,6	;RP1=0, select bank1
  2082  02B3  00A2               	movwf	(??_main^(0+128)+2)
  2083  02B4  3026               	movlw	38
  2084  02B5  00A1               	movwf	(??_main^(0+128)+1)
  2085  02B6  3066               	movlw	102
  2086  02B7  00A0               	movwf	??_main^(0+128)
  2087  02B8                     u1237:	
  2088  02B8  0BA0               	decfsz	??_main^(0+128),f
  2089  02B9  2AB8               	goto	u1237
  2090  02BA  0BA1               	decfsz	(??_main^(0+128)+1),f
  2091  02BB  2AB8               	goto	u1237
  2092  02BC  0BA2               	decfsz	(??_main^(0+128)+2),f
  2093  02BD  2AB8               	goto	u1237
  2094  02BE  2ABF               	nop2
  2095  02BF  2897               	goto	l2360
  2096  02C0                     __end_of_main:	
  2097                           ;main.c: 319: }
  2098                           ;main.c: 322: return (0);
  2099                           ;	Return value of _main is never used
  2100                           
  2101                           
  2102                           	psect	text1
  2103  0F2A                     __ptext1:	
  2104 ;; *************** function _uart_init *****************
  2105 ;; Defined at:
  2106 ;;		line 7 in file "uart.c"
  2107 ;; Parameters:    Size  Location     Type
  2108 ;;		None
  2109 ;; Auto vars:     Size  Location     Type
  2110 ;;		None
  2111 ;; Return value:  Size  Location     Type
  2112 ;;		None               void
  2113 ;; Registers used:
  2114 ;;		wreg, status,2
  2115 ;; Tracked objects:
  2116 ;;		On entry : 0/0
  2117 ;;		On exit  : 0/0
  2118 ;;		Unchanged: 0/0
  2119 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2120 ;;      Params:         0       0       0       0
  2121 ;;      Locals:         0       0       0       0
  2122 ;;      Temps:          0       0       0       0
  2123 ;;      Totals:         0       0       0       0
  2124 ;;Total ram usage:        0 bytes
  2125 ;; Hardware stack levels used:    1
  2126 ;; Hardware stack levels required when called:    4
  2127 ;; This function calls:
  2128 ;;		Nothing
  2129 ;; This function is called by:
  2130 ;;		_main
  2131 ;; This function uses a non-reentrant model
  2132 ;;
  2133                           
  2134                           
  2135                           ;psect for function _uart_init
  2136  0F2A                     _uart_init:	
  2137                           
  2138                           ;uart.c: 9: TRISBbits.TRISB7 = 0;
  2139                           
  2140                           ;incstack = 0
  2141                           ; Regs used in _uart_init: [wreg+status,2]
  2142  0F2A  1683               	bsf	3,5	;RP0=1, select bank1
  2143  0F2B  1303               	bcf	3,6	;RP1=0, select bank1
  2144  0F2C  1386               	bcf	6,7	;volatile
  2145                           
  2146                           ;uart.c: 10: TRISBbits.TRISB5 = 1;
  2147  0F2D  1686               	bsf	6,5	;volatile
  2148                           
  2149                           ;uart.c: 16: TXREG = 0;
  2150  0F2E  1283               	bcf	3,5	;RP0=0, select bank0
  2151  0F2F  1303               	bcf	3,6	;RP1=0, select bank0
  2152  0F30  0199               	clrf	25	;volatile
  2153                           
  2154                           ;uart.c: 17: RCREG = 0;
  2155  0F31  019A               	clrf	26	;volatile
  2156                           
  2157                           ;uart.c: 19: BRG16 = 0;
  2158  0F32  1683               	bsf	3,5	;RP0=1, select bank1
  2159  0F33  1303               	bcf	3,6	;RP1=0, select bank1
  2160  0F34  119B               	bcf	27,3	;volatile
  2161                           
  2162                           ;uart.c: 20: BRGH = 1;
  2163  0F35  1518               	bsf	24,2	;volatile
  2164                           
  2165                           ;uart.c: 21: SYNC = 0;
  2166  0F36  1218               	bcf	24,4	;volatile
  2167                           
  2168                           ;uart.c: 24: SPBRG = 207;
  2169  0F37  30CF               	movlw	207
  2170  0F38  0099               	movwf	25	;volatile
  2171                           
  2172                           ;uart.c: 26: TXSTA = 0x24;
  2173  0F39  3024               	movlw	36
  2174  0F3A  0098               	movwf	24	;volatile
  2175                           
  2176                           ;uart.c: 27: RCSTA = 0x90;
  2177  0F3B  3090               	movlw	144
  2178  0F3C  1283               	bcf	3,5	;RP0=0, select bank0
  2179  0F3D  1303               	bcf	3,6	;RP1=0, select bank0
  2180  0F3E  0098               	movwf	24	;volatile
  2181  0F3F  0008               	return
  2182  0F40                     __end_of_uart_init:	
  2183                           
  2184                           	psect	text2
  2185  0E85                     __ptext2:	
  2186 ;; *************** function _tx_init *****************
  2187 ;; Defined at:
  2188 ;;		line 109 in file "wl_tx.c"
  2189 ;; Parameters:    Size  Location     Type
  2190 ;;		None
  2191 ;; Auto vars:     Size  Location     Type
  2192 ;;		None
  2193 ;; Return value:  Size  Location     Type
  2194 ;;		None               void
  2195 ;; Registers used:
  2196 ;;		None
  2197 ;; Tracked objects:
  2198 ;;		On entry : 0/0
  2199 ;;		On exit  : 0/0
  2200 ;;		Unchanged: 0/0
  2201 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2202 ;;      Params:         0       0       0       0
  2203 ;;      Locals:         0       0       0       0
  2204 ;;      Temps:          0       0       0       0
  2205 ;;      Totals:         0       0       0       0
  2206 ;;Total ram usage:        0 bytes
  2207 ;; Hardware stack levels used:    1
  2208 ;; Hardware stack levels required when called:    4
  2209 ;; This function calls:
  2210 ;;		Nothing
  2211 ;; This function is called by:
  2212 ;;		_main
  2213 ;; This function uses a non-reentrant model
  2214 ;;
  2215                           
  2216                           
  2217                           ;psect for function _tx_init
  2218  0E85                     _tx_init:	
  2219                           
  2220                           ;wl_tx.c: 111: TRISCbits.TRISC7 = 0;
  2221                           
  2222                           ;incstack = 0
  2223                           ; Regs used in _tx_init: []
  2224  0E85  1683               	bsf	3,5	;RP0=1, select bank1
  2225  0E86  1303               	bcf	3,6	;RP1=0, select bank1
  2226  0E87  1387               	bcf	7,7	;volatile
  2227                           
  2228                           ;wl_tx.c: 112: PORTCbits.RC7 = 0;
  2229  0E88  1283               	bcf	3,5	;RP0=0, select bank0
  2230  0E89  1303               	bcf	3,6	;RP1=0, select bank0
  2231  0E8A  1387               	bcf	7,7	;volatile
  2232  0E8B  0008               	return
  2233  0E8C                     __end_of_tx_init:	
  2234                           
  2235                           	psect	text3
  2236  0EED                     __ptext3:	
  2237 ;; *************** function _pic_init *****************
  2238 ;; Defined at:
  2239 ;;		line 23 in file "main.c"
  2240 ;; Parameters:    Size  Location     Type
  2241 ;;		None
  2242 ;; Auto vars:     Size  Location     Type
  2243 ;;		None
  2244 ;; Return value:  Size  Location     Type
  2245 ;;		None               void
  2246 ;; Registers used:
  2247 ;;		wreg, status,2
  2248 ;; Tracked objects:
  2249 ;;		On entry : 0/0
  2250 ;;		On exit  : 0/0
  2251 ;;		Unchanged: 0/0
  2252 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2253 ;;      Params:         0       0       0       0
  2254 ;;      Locals:         0       0       0       0
  2255 ;;      Temps:          0       0       0       0
  2256 ;;      Totals:         0       0       0       0
  2257 ;;Total ram usage:        0 bytes
  2258 ;; Hardware stack levels used:    1
  2259 ;; Hardware stack levels required when called:    4
  2260 ;; This function calls:
  2261 ;;		Nothing
  2262 ;; This function is called by:
  2263 ;;		_main
  2264 ;; This function uses a non-reentrant model
  2265 ;;
  2266                           
  2267                           
  2268                           ;psect for function _pic_init
  2269  0EED                     _pic_init:	
  2270                           
  2271                           ;main.c: 26: OSCCON = 0b01110000;
  2272                           
  2273                           ;incstack = 0
  2274                           ; Regs used in _pic_init: [wreg+status,2]
  2275  0EED  3070               	movlw	112
  2276  0EEE  1683               	bsf	3,5	;RP0=1, select bank1
  2277  0EEF  1303               	bcf	3,6	;RP1=0, select bank1
  2278  0EF0  008F               	movwf	15	;volatile
  2279                           
  2280                           ;main.c: 28: ANSEL = 0;
  2281  0EF1  1283               	bcf	3,5	;RP0=0, select bank2
  2282  0EF2  1703               	bsf	3,6	;RP1=1, select bank2
  2283  0EF3  019E               	clrf	30	;volatile
  2284                           
  2285                           ;main.c: 29: ANSELH = 0;
  2286  0EF4  019F               	clrf	31	;volatile
  2287                           
  2288                           ;main.c: 31: ADCON0bits.ADON = 0;
  2289  0EF5  1283               	bcf	3,5	;RP0=0, select bank0
  2290  0EF6  1303               	bcf	3,6	;RP1=0, select bank0
  2291  0EF7  101F               	bcf	31,0	;volatile
  2292                           
  2293                           ;main.c: 33: TRISCbits.TRISC6 = 0;
  2294  0EF8  1683               	bsf	3,5	;RP0=1, select bank1
  2295  0EF9  1303               	bcf	3,6	;RP1=0, select bank1
  2296  0EFA  1307               	bcf	7,6	;volatile
  2297                           
  2298                           ;main.c: 34: PORTCbits.RC6 = 0;
  2299  0EFB  1283               	bcf	3,5	;RP0=0, select bank0
  2300  0EFC  1303               	bcf	3,6	;RP1=0, select bank0
  2301  0EFD  1307               	bcf	7,6	;volatile
  2302  0EFE  0008               	return
  2303  0EFF                     __end_of_pic_init:	
  2304                           
  2305                           	psect	text4
  2306  0E9E                     __ptext4:	
  2307 ;; *************** function _init_tx_interrupt *****************
  2308 ;; Defined at:
  2309 ;;		line 37 in file "main.c"
  2310 ;; Parameters:    Size  Location     Type
  2311 ;;		None
  2312 ;; Auto vars:     Size  Location     Type
  2313 ;;		None
  2314 ;; Return value:  Size  Location     Type
  2315 ;;		None               void
  2316 ;; Registers used:
  2317 ;;		None
  2318 ;; Tracked objects:
  2319 ;;		On entry : 0/0
  2320 ;;		On exit  : 0/0
  2321 ;;		Unchanged: 0/0
  2322 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2323 ;;      Params:         0       0       0       0
  2324 ;;      Locals:         0       0       0       0
  2325 ;;      Temps:          0       0       0       0
  2326 ;;      Totals:         0       0       0       0
  2327 ;;Total ram usage:        0 bytes
  2328 ;; Hardware stack levels used:    1
  2329 ;; Hardware stack levels required when called:    4
  2330 ;; This function calls:
  2331 ;;		Nothing
  2332 ;; This function is called by:
  2333 ;;		_main
  2334 ;; This function uses a non-reentrant model
  2335 ;;
  2336                           
  2337                           
  2338                           ;psect for function _init_tx_interrupt
  2339  0E9E                     _init_tx_interrupt:	
  2340                           
  2341                           ;main.c: 40: T1CONbits.TMR1ON = 1;
  2342                           
  2343                           ;incstack = 0
  2344                           ; Regs used in _init_tx_interrupt: []
  2345  0E9E  1283               	bcf	3,5	;RP0=0, select bank0
  2346  0E9F  1303               	bcf	3,6	;RP1=0, select bank0
  2347  0EA0  1410               	bsf	16,0	;volatile
  2348                           
  2349                           ;main.c: 41: T1CONbits.T1CKPS0 = 1;
  2350  0EA1  1610               	bsf	16,4	;volatile
  2351                           
  2352                           ;main.c: 42: T1CONbits.T1CKPS1 = 1;
  2353  0EA2  1690               	bsf	16,5	;volatile
  2354                           
  2355                           ;main.c: 44: PIE1bits.TMR1IE = 1;
  2356  0EA3  1683               	bsf	3,5	;RP0=1, select bank1
  2357  0EA4  1303               	bcf	3,6	;RP1=0, select bank1
  2358  0EA5  140C               	bsf	12,0	;volatile
  2359                           
  2360                           ;main.c: 45: INTCONbits.PEIE = 1;
  2361  0EA6  170B               	bsf	11,6	;volatile
  2362                           
  2363                           ;main.c: 46: INTCONbits.GIE = 1;
  2364  0EA7  178B               	bsf	11,7	;volatile
  2365  0EA8  0008               	return
  2366  0EA9                     __end_of_init_tx_interrupt:	
  2367                           
  2368                           	psect	text5
  2369  0E94                     __ptext5:	
  2370 ;; *************** function _i2c_fw_init *****************
  2371 ;; Defined at:
  2372 ;;		line 10 in file "i2c_fw_master.c"
  2373 ;; Parameters:    Size  Location     Type
  2374 ;;		None
  2375 ;; Auto vars:     Size  Location     Type
  2376 ;;		None
  2377 ;; Return value:  Size  Location     Type
  2378 ;;		None               void
  2379 ;; Registers used:
  2380 ;;		wreg
  2381 ;; Tracked objects:
  2382 ;;		On entry : 0/0
  2383 ;;		On exit  : 0/0
  2384 ;;		Unchanged: 0/0
  2385 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2386 ;;      Params:         0       0       0       0
  2387 ;;      Locals:         0       0       0       0
  2388 ;;      Temps:          0       0       0       0
  2389 ;;      Totals:         0       0       0       0
  2390 ;;Total ram usage:        0 bytes
  2391 ;; Hardware stack levels used:    1
  2392 ;; Hardware stack levels required when called:    4
  2393 ;; This function calls:
  2394 ;;		Nothing
  2395 ;; This function is called by:
  2396 ;;		_main
  2397 ;; This function uses a non-reentrant model
  2398 ;;
  2399                           
  2400                           
  2401                           ;psect for function _i2c_fw_init
  2402  0E94                     _i2c_fw_init:	
  2403                           
  2404                           ;i2c_fw_master.c: 12: TRISBbits.TRISB4 = 1;
  2405                           
  2406                           ;incstack = 0
  2407                           ; Regs used in _i2c_fw_init: [wreg]
  2408  0E94  1683               	bsf	3,5	;RP0=1, select bank1
  2409  0E95  1303               	bcf	3,6	;RP1=0, select bank1
  2410  0E96  1606               	bsf	6,4	;volatile
  2411                           
  2412                           ;i2c_fw_master.c: 13: TRISBbits.TRISB6 = 1;
  2413  0E97  1706               	bsf	6,6	;volatile
  2414                           
  2415                           ;i2c_fw_master.c: 15: SSPCON = 0b00101011;
  2416  0E98  302B               	movlw	43
  2417  0E99  1283               	bcf	3,5	;RP0=0, select bank0
  2418  0E9A  1303               	bcf	3,6	;RP1=0, select bank0
  2419  0E9B  0094               	movwf	20	;volatile
  2420                           
  2421                           ;i2c_fw_master.c: 18: SSPIF = 0;
  2422  0E9C  118C               	bcf	12,3	;volatile
  2423  0E9D  0008               	return
  2424  0E9E                     __end_of_i2c_fw_init:	
  2425                           
  2426                           	psect	text6
  2427  06D2                     __ptext6:	
  2428 ;; *************** function _ds18b20_start_convert *****************
  2429 ;; Defined at:
  2430 ;;		line 106 in file "ds18b20.c"
  2431 ;; Parameters:    Size  Location     Type
  2432 ;;  dev             1    wreg     PTR struct ds18b20
  2433 ;;		 -> main@t1(22), 
  2434 ;; Auto vars:     Size  Location     Type
  2435 ;;  dev             1   12[BANK0 ] PTR struct ds18b20
  2436 ;;		 -> main@t1(22), 
  2437 ;;  i               1   13[BANK0 ] unsigned char 
  2438 ;; Return value:  Size  Location     Type
  2439 ;;		None               void
  2440 ;; Registers used:
  2441 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2442 ;; Tracked objects:
  2443 ;;		On entry : 0/0
  2444 ;;		On exit  : 0/0
  2445 ;;		Unchanged: 0/0
  2446 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2447 ;;      Params:         0       0       0       0
  2448 ;;      Locals:         0       2       0       0
  2449 ;;      Temps:          0       3       0       0
  2450 ;;      Totals:         0       5       0       0
  2451 ;;Total ram usage:        5 bytes
  2452 ;; Hardware stack levels used:    1
  2453 ;; Hardware stack levels required when called:    5
  2454 ;; This function calls:
  2455 ;;		_ow_reset
  2456 ;;		_ow_write_byte
  2457 ;; This function is called by:
  2458 ;;		_main
  2459 ;; This function uses a non-reentrant model
  2460 ;;
  2461                           
  2462                           
  2463                           ;psect for function _ds18b20_start_convert
  2464  06D2                     _ds18b20_start_convert:	
  2465                           
  2466                           ;incstack = 0
  2467                           ; Regs used in _ds18b20_start_convert: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2468                           ;ds18b20_start_convert@dev stored from wreg
  2469  06D2  1283               	bcf	3,5	;RP0=0, select bank0
  2470  06D3  1303               	bcf	3,6	;RP1=0, select bank0
  2471  06D4  00AC               	movwf	ds18b20_start_convert@dev
  2472                           
  2473                           ;ds18b20.c: 108: unsigned char i;
  2474                           ;ds18b20.c: 110: ow_reset();
  2475  06D5  158A  27D4  118A   	fcall	_ow_reset
  2476                           
  2477                           ;ds18b20.c: 111: ow_write_byte(0x55);
  2478  06D8  3055               	movlw	85
  2479  06D9  118A  270B  118A   	fcall	_ow_write_byte
  2480                           
  2481                           ;ds18b20.c: 113: for(i=0;i<8;i++){
  2482  06DC  1283               	bcf	3,5	;RP0=0, select bank0
  2483  06DD  1303               	bcf	3,6	;RP1=0, select bank0
  2484  06DE  01AD               	clrf	ds18b20_start_convert@i
  2485  06DF  3008               	movlw	8
  2486  06E0  022D               	subwf	ds18b20_start_convert@i,w
  2487  06E1  1803               	btfsc	3,0
  2488  06E2  2EF7               	goto	l1920
  2489  06E3                     l1914:	
  2490                           
  2491                           ;ds18b20.c: 114: ow_write_byte(dev->romcode[i]);
  2492  06E3  082D               	movf	ds18b20_start_convert@i,w
  2493  06E4  072C               	addwf	ds18b20_start_convert@dev,w
  2494  06E5  00A9               	movwf	??_ds18b20_start_convert
  2495  06E6  0829               	movf	??_ds18b20_start_convert,w
  2496  06E7  0084               	movwf	4
  2497  06E8  1383               	bcf	3,7	;select IRP bank0
  2498  06E9  0800               	movf	0,w
  2499  06EA  118A  270B  118A   	fcall	_ow_write_byte
  2500  06ED  3001               	movlw	1
  2501  06EE  1283               	bcf	3,5	;RP0=0, select bank0
  2502  06EF  1303               	bcf	3,6	;RP1=0, select bank0
  2503  06F0  00A9               	movwf	??_ds18b20_start_convert
  2504  06F1  0829               	movf	??_ds18b20_start_convert,w
  2505  06F2  07AD               	addwf	ds18b20_start_convert@i,f
  2506  06F3  3008               	movlw	8
  2507  06F4  022D               	subwf	ds18b20_start_convert@i,w
  2508  06F5  1C03               	skipc
  2509  06F6  2EE3               	goto	l1914
  2510  06F7                     l1920:	
  2511                           
  2512                           ;ds18b20.c: 115: }
  2513                           ;ds18b20.c: 116: ow_write_byte(0x44);
  2514  06F7  3044               	movlw	68
  2515  06F8  118A  270B  118A   	fcall	_ow_write_byte
  2516                           
  2517                           ;ds18b20.c: 117: _delay((unsigned long)((750)*(8000000/4000.0)));
  2518  06FB  3008               	movlw	8
  2519  06FC  1283               	bcf	3,5	;RP0=0, select bank0
  2520  06FD  1303               	bcf	3,6	;RP1=0, select bank0
  2521  06FE  00AB               	movwf	??_ds18b20_start_convert+2
  2522  06FF  309D               	movlw	157
  2523  0700  00AA               	movwf	??_ds18b20_start_convert+1
  2524  0701  300B               	movlw	11
  2525  0702  00A9               	movwf	??_ds18b20_start_convert
  2526  0703                     u1247:	
  2527  0703  0BA9               	decfsz	??_ds18b20_start_convert,f
  2528  0704  2F03               	goto	u1247
  2529  0705  0BAA               	decfsz	??_ds18b20_start_convert+1,f
  2530  0706  2F03               	goto	u1247
  2531  0707  0BAB               	decfsz	??_ds18b20_start_convert+2,f
  2532  0708  2F03               	goto	u1247
  2533  0709  2F0A               	nop2
  2534  070A  0008               	return
  2535  070B                     __end_of_ds18b20_start_convert:	
  2536                           
  2537                           	psect	text7
  2538  02C0                     __ptext7:	
  2539 ;; *************** function _ds18b20_read_scratch *****************
  2540 ;; Defined at:
  2541 ;;		line 50 in file "ds18b20.c"
  2542 ;; Parameters:    Size  Location     Type
  2543 ;;  dev             1    wreg     PTR struct ds18b20
  2544 ;;		 -> main@t1(22), 
  2545 ;; Auto vars:     Size  Location     Type
  2546 ;;  dev             1   13[BANK0 ] PTR struct ds18b20
  2547 ;;		 -> main@t1(22), 
  2548 ;;  i               1   12[BANK0 ] unsigned char 
  2549 ;; Return value:  Size  Location     Type
  2550 ;;		None               void
  2551 ;; Registers used:
  2552 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2553 ;; Tracked objects:
  2554 ;;		On entry : 0/0
  2555 ;;		On exit  : 0/0
  2556 ;;		Unchanged: 0/0
  2557 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2558 ;;      Params:         0       0       0       0
  2559 ;;      Locals:         0       2       0       0
  2560 ;;      Temps:          0       3       0       0
  2561 ;;      Totals:         0       5       0       0
  2562 ;;Total ram usage:        5 bytes
  2563 ;; Hardware stack levels used:    1
  2564 ;; Hardware stack levels required when called:    5
  2565 ;; This function calls:
  2566 ;;		_ow_read_byte
  2567 ;;		_ow_reset
  2568 ;;		_ow_write_byte
  2569 ;; This function is called by:
  2570 ;;		_main
  2571 ;; This function uses a non-reentrant model
  2572 ;;
  2573                           
  2574                           
  2575                           ;psect for function _ds18b20_read_scratch
  2576  02C0                     _ds18b20_read_scratch:	
  2577                           
  2578                           ;incstack = 0
  2579                           ; Regs used in _ds18b20_read_scratch: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstac
      +                          k]
  2580                           ;ds18b20_read_scratch@dev stored from wreg
  2581  02C0  1283               	bcf	3,5	;RP0=0, select bank0
  2582  02C1  1303               	bcf	3,6	;RP1=0, select bank0
  2583  02C2  00AD               	movwf	ds18b20_read_scratch@dev
  2584                           
  2585                           ;ds18b20.c: 52: unsigned char i;
  2586                           ;ds18b20.c: 56: ow_reset();
  2587  02C3  158A  27D4  118A   	fcall	_ow_reset
  2588                           
  2589                           ;ds18b20.c: 58: ow_write_byte(0x55);
  2590  02C6  3055               	movlw	85
  2591  02C7  118A  270B  118A   	fcall	_ow_write_byte
  2592                           
  2593                           ;ds18b20.c: 59: for(i=0;i<8;i++){
  2594  02CA  1283               	bcf	3,5	;RP0=0, select bank0
  2595  02CB  1303               	bcf	3,6	;RP1=0, select bank0
  2596  02CC  01AC               	clrf	ds18b20_read_scratch@i
  2597  02CD  3008               	movlw	8
  2598  02CE  022C               	subwf	ds18b20_read_scratch@i,w
  2599  02CF  1803               	btfsc	3,0
  2600  02D0  2AE5               	goto	l1864
  2601  02D1                     l1858:	
  2602                           
  2603                           ;ds18b20.c: 60: ow_write_byte(dev->romcode[i]);
  2604  02D1  082C               	movf	ds18b20_read_scratch@i,w
  2605  02D2  072D               	addwf	ds18b20_read_scratch@dev,w
  2606  02D3  00A9               	movwf	??_ds18b20_read_scratch
  2607  02D4  0829               	movf	??_ds18b20_read_scratch,w
  2608  02D5  0084               	movwf	4
  2609  02D6  1383               	bcf	3,7	;select IRP bank0
  2610  02D7  0800               	movf	0,w
  2611  02D8  118A  270B  118A   	fcall	_ow_write_byte
  2612  02DB  3001               	movlw	1
  2613  02DC  1283               	bcf	3,5	;RP0=0, select bank0
  2614  02DD  1303               	bcf	3,6	;RP1=0, select bank0
  2615  02DE  00A9               	movwf	??_ds18b20_read_scratch
  2616  02DF  0829               	movf	??_ds18b20_read_scratch,w
  2617  02E0  07AC               	addwf	ds18b20_read_scratch@i,f
  2618  02E1  3008               	movlw	8
  2619  02E2  022C               	subwf	ds18b20_read_scratch@i,w
  2620  02E3  1C03               	skipc
  2621  02E4  2AD1               	goto	l1858
  2622  02E5                     l1864:	
  2623                           
  2624                           ;ds18b20.c: 61: }
  2625                           ;ds18b20.c: 63: ow_write_byte(0xBE);
  2626  02E5  30BE               	movlw	190
  2627  02E6  118A  270B  118A   	fcall	_ow_write_byte
  2628                           
  2629                           ;ds18b20.c: 64: dev->scratchpad[0] = ow_read_byte();
  2630  02E9  118A  2779  118A   	fcall	_ow_read_byte
  2631  02EC  1283               	bcf	3,5	;RP0=0, select bank0
  2632  02ED  1303               	bcf	3,6	;RP1=0, select bank0
  2633  02EE  00A9               	movwf	??_ds18b20_read_scratch
  2634  02EF  082D               	movf	ds18b20_read_scratch@dev,w
  2635  02F0  3E0C               	addlw	12
  2636  02F1  0084               	movwf	4
  2637  02F2  0829               	movf	??_ds18b20_read_scratch,w
  2638  02F3  1383               	bcf	3,7	;select IRP bank0
  2639  02F4  0080               	movwf	0
  2640                           
  2641                           ;ds18b20.c: 65: dev->scratchpad[1] = ow_read_byte();
  2642  02F5  118A  2779  118A   	fcall	_ow_read_byte
  2643  02F8  1283               	bcf	3,5	;RP0=0, select bank0
  2644  02F9  1303               	bcf	3,6	;RP1=0, select bank0
  2645  02FA  00A9               	movwf	??_ds18b20_read_scratch
  2646  02FB  082D               	movf	ds18b20_read_scratch@dev,w
  2647  02FC  3E0D               	addlw	13
  2648  02FD  0084               	movwf	4
  2649  02FE  0829               	movf	??_ds18b20_read_scratch,w
  2650  02FF  1383               	bcf	3,7	;select IRP bank0
  2651  0300  0080               	movwf	0
  2652                           
  2653                           ;ds18b20.c: 66: dev->scratchpad[2] = ow_read_byte();
  2654  0301  118A  2779  118A   	fcall	_ow_read_byte
  2655  0304  1283               	bcf	3,5	;RP0=0, select bank0
  2656  0305  1303               	bcf	3,6	;RP1=0, select bank0
  2657  0306  00A9               	movwf	??_ds18b20_read_scratch
  2658  0307  082D               	movf	ds18b20_read_scratch@dev,w
  2659  0308  3E0E               	addlw	14
  2660  0309  0084               	movwf	4
  2661  030A  0829               	movf	??_ds18b20_read_scratch,w
  2662  030B  1383               	bcf	3,7	;select IRP bank0
  2663  030C  0080               	movwf	0
  2664                           
  2665                           ;ds18b20.c: 67: dev->scratchpad[3] = ow_read_byte();
  2666  030D  118A  2779  118A   	fcall	_ow_read_byte
  2667  0310  1283               	bcf	3,5	;RP0=0, select bank0
  2668  0311  1303               	bcf	3,6	;RP1=0, select bank0
  2669  0312  00A9               	movwf	??_ds18b20_read_scratch
  2670  0313  082D               	movf	ds18b20_read_scratch@dev,w
  2671  0314  3E0F               	addlw	15
  2672  0315  0084               	movwf	4
  2673  0316  0829               	movf	??_ds18b20_read_scratch,w
  2674  0317  1383               	bcf	3,7	;select IRP bank0
  2675  0318  0080               	movwf	0
  2676                           
  2677                           ;ds18b20.c: 68: dev->scratchpad[4] = ow_read_byte();
  2678  0319  118A  2779  118A   	fcall	_ow_read_byte
  2679  031C  1283               	bcf	3,5	;RP0=0, select bank0
  2680  031D  1303               	bcf	3,6	;RP1=0, select bank0
  2681  031E  00A9               	movwf	??_ds18b20_read_scratch
  2682  031F  082D               	movf	ds18b20_read_scratch@dev,w
  2683  0320  3E10               	addlw	16
  2684  0321  0084               	movwf	4
  2685  0322  0829               	movf	??_ds18b20_read_scratch,w
  2686  0323  1383               	bcf	3,7	;select IRP bank0
  2687  0324  0080               	movwf	0
  2688                           
  2689                           ;ds18b20.c: 69: dev->scratchpad[5] = ow_read_byte();
  2690  0325  118A  2779  118A   	fcall	_ow_read_byte
  2691  0328  1283               	bcf	3,5	;RP0=0, select bank0
  2692  0329  1303               	bcf	3,6	;RP1=0, select bank0
  2693  032A  00A9               	movwf	??_ds18b20_read_scratch
  2694  032B  082D               	movf	ds18b20_read_scratch@dev,w
  2695  032C  3E11               	addlw	17
  2696  032D  0084               	movwf	4
  2697  032E  0829               	movf	??_ds18b20_read_scratch,w
  2698  032F  1383               	bcf	3,7	;select IRP bank0
  2699  0330  0080               	movwf	0
  2700                           
  2701                           ;ds18b20.c: 70: dev->scratchpad[6] = ow_read_byte();
  2702  0331  118A  2779  118A   	fcall	_ow_read_byte
  2703  0334  1283               	bcf	3,5	;RP0=0, select bank0
  2704  0335  1303               	bcf	3,6	;RP1=0, select bank0
  2705  0336  00A9               	movwf	??_ds18b20_read_scratch
  2706  0337  082D               	movf	ds18b20_read_scratch@dev,w
  2707  0338  3E12               	addlw	18
  2708  0339  0084               	movwf	4
  2709  033A  0829               	movf	??_ds18b20_read_scratch,w
  2710  033B  1383               	bcf	3,7	;select IRP bank0
  2711  033C  0080               	movwf	0
  2712                           
  2713                           ;ds18b20.c: 71: dev->scratchpad[7] = ow_read_byte();
  2714  033D  118A  2779  118A   	fcall	_ow_read_byte
  2715  0340  1283               	bcf	3,5	;RP0=0, select bank0
  2716  0341  1303               	bcf	3,6	;RP1=0, select bank0
  2717  0342  00A9               	movwf	??_ds18b20_read_scratch
  2718  0343  082D               	movf	ds18b20_read_scratch@dev,w
  2719  0344  3E13               	addlw	19
  2720  0345  0084               	movwf	4
  2721  0346  0829               	movf	??_ds18b20_read_scratch,w
  2722  0347  1383               	bcf	3,7	;select IRP bank0
  2723  0348  0080               	movwf	0
  2724                           
  2725                           ;ds18b20.c: 72: dev->scratchpad[8] = ow_read_byte();
  2726  0349  118A  2779  118A   	fcall	_ow_read_byte
  2727  034C  1283               	bcf	3,5	;RP0=0, select bank0
  2728  034D  1303               	bcf	3,6	;RP1=0, select bank0
  2729  034E  00A9               	movwf	??_ds18b20_read_scratch
  2730  034F  082D               	movf	ds18b20_read_scratch@dev,w
  2731  0350  3E14               	addlw	20
  2732  0351  0084               	movwf	4
  2733  0352  0829               	movf	??_ds18b20_read_scratch,w
  2734  0353  1383               	bcf	3,7	;select IRP bank0
  2735  0354  0080               	movwf	0
  2736                           
  2737                           ;ds18b20.c: 84: dev->config = dev->scratchpad[4];
  2738  0355  082D               	movf	ds18b20_read_scratch@dev,w
  2739  0356  3E10               	addlw	16
  2740  0357  0084               	movwf	4
  2741  0358  0800               	movf	0,w
  2742  0359  00A9               	movwf	??_ds18b20_read_scratch
  2743  035A  082D               	movf	ds18b20_read_scratch@dev,w
  2744  035B  3E15               	addlw	21
  2745  035C  0084               	movwf	4
  2746  035D  0829               	movf	??_ds18b20_read_scratch,w
  2747  035E  0080               	movwf	0
  2748                           
  2749                           ;ds18b20.c: 88: dev->tempi = (((0x07 & dev->scratchpad[1]) << 8) | dev->scratchpad[0]) >
      +                          > 4;
  2750  035F  082D               	movf	ds18b20_read_scratch@dev,w
  2751  0360  3E0D               	addlw	13
  2752  0361  0084               	movwf	4
  2753  0362  3007               	movlw	7
  2754  0363  0500               	andwf	0,w
  2755  0364  00A9               	movwf	??_ds18b20_read_scratch
  2756  0365  082D               	movf	ds18b20_read_scratch@dev,w
  2757  0366  3E0C               	addlw	12
  2758  0367  0084               	movwf	4
  2759  0368  0829               	movf	??_ds18b20_read_scratch,w
  2760  0369  00AB               	movwf	??_ds18b20_read_scratch+2
  2761  036A  0800               	movf	0,w
  2762  036B  00AA               	movwf	??_ds18b20_read_scratch+1
  2763  036C  3004               	movlw	4
  2764  036D  00FF               	movwf	127
  2765  036E                     u905:	
  2766  036E  0D2B               	rlf	??_ds18b20_read_scratch+2,w
  2767  036F  0CAB               	rrf	??_ds18b20_read_scratch+2,f
  2768  0370  0CAA               	rrf	??_ds18b20_read_scratch+1,f
  2769  0371  0BFF               	decfsz	127,f
  2770  0372  2B6E               	goto	u905
  2771  0373  082D               	movf	ds18b20_read_scratch@dev,w
  2772  0374  3E08               	addlw	8
  2773  0375  0084               	movwf	4
  2774  0376  082A               	movf	??_ds18b20_read_scratch+1,w
  2775  0377  0080               	movwf	0
  2776  0378  0A84               	incf	4,f
  2777  0379  082B               	movf	??_ds18b20_read_scratch+2,w
  2778  037A  0080               	movwf	0
  2779                           
  2780                           ;ds18b20.c: 89: if(dev->scratchpad[1] & 0xF0)
  2781  037B  082D               	movf	ds18b20_read_scratch@dev,w
  2782  037C  3E0D               	addlw	13
  2783  037D  0084               	movwf	4
  2784  037E  0800               	movf	0,w
  2785  037F  39F0               	andlw	240
  2786  0380  1903               	btfsc	3,2
  2787  0381  2B97               	goto	l62
  2788                           
  2789                           ;ds18b20.c: 90: dev->tempi = -dev->tempi;
  2790  0382  082D               	movf	ds18b20_read_scratch@dev,w
  2791  0383  3E08               	addlw	8
  2792  0384  0084               	movwf	4
  2793  0385  0800               	movf	0,w
  2794  0386  00A9               	movwf	??_ds18b20_read_scratch
  2795  0387  0A84               	incf	4,f
  2796  0388  0800               	movf	0,w
  2797  0389  00AA               	movwf	??_ds18b20_read_scratch+1
  2798  038A  09A9               	comf	??_ds18b20_read_scratch,f
  2799  038B  09AA               	comf	??_ds18b20_read_scratch+1,f
  2800  038C  0AA9               	incf	??_ds18b20_read_scratch,f
  2801  038D  1903               	skipnz
  2802  038E  0AAA               	incf	??_ds18b20_read_scratch+1,f
  2803  038F  082D               	movf	ds18b20_read_scratch@dev,w
  2804  0390  3E08               	addlw	8
  2805  0391  0084               	movwf	4
  2806  0392  0829               	movf	??_ds18b20_read_scratch,w
  2807  0393  0080               	movwf	0
  2808  0394  0A84               	incf	4,f
  2809  0395  082A               	movf	??_ds18b20_read_scratch+1,w
  2810  0396  0080               	movwf	0
  2811  0397                     l62:	
  2812                           
  2813                           ;ds18b20.c: 92: dev->tempd = dev->scratchpad[0] & 0x0F;
  2814  0397  082D               	movf	ds18b20_read_scratch@dev,w
  2815  0398  3E0C               	addlw	12
  2816  0399  0084               	movwf	4
  2817  039A  0800               	movf	0,w
  2818  039B  390F               	andlw	15
  2819  039C  00A9               	movwf	??_ds18b20_read_scratch
  2820  039D  01AA               	clrf	??_ds18b20_read_scratch+1
  2821  039E  082D               	movf	ds18b20_read_scratch@dev,w
  2822  039F  3E0A               	addlw	10
  2823  03A0  0084               	movwf	4
  2824  03A1  0829               	movf	??_ds18b20_read_scratch,w
  2825  03A2  0080               	movwf	0
  2826  03A3  0A84               	incf	4,f
  2827  03A4  082A               	movf	??_ds18b20_read_scratch+1,w
  2828  03A5  0080               	movwf	0
  2829                           
  2830                           ;ds18b20.c: 93: if( dev->tempd & 0x08 ){
  2831  03A6  082D               	movf	ds18b20_read_scratch@dev,w
  2832  03A7  3E0A               	addlw	10
  2833  03A8  0084               	movwf	4
  2834  03A9  0800               	movf	0,w
  2835  03AA  00A9               	movwf	??_ds18b20_read_scratch
  2836  03AB  0A84               	incf	4,f
  2837  03AC  0800               	movf	0,w
  2838  03AD  00AA               	movwf	??_ds18b20_read_scratch+1
  2839  03AE  1DA9               	btfss	??_ds18b20_read_scratch,3
  2840  03AF  2BB9               	goto	l1894
  2841                           
  2842                           ;ds18b20.c: 94: dev->tempd = 5;
  2843  03B0  082D               	movf	ds18b20_read_scratch@dev,w
  2844  03B1  3E0A               	addlw	10
  2845  03B2  0084               	movwf	4
  2846  03B3  3005               	movlw	5
  2847  03B4  0080               	movwf	0
  2848  03B5  0A84               	incf	4,f
  2849  03B6  3000               	movlw	0
  2850  03B7  0080               	movwf	0
  2851                           
  2852                           ;ds18b20.c: 95: }else if( dev->tempd & 0x04 ){
  2853  03B8  0008               	return
  2854  03B9                     l1894:	
  2855  03B9  082D               	movf	ds18b20_read_scratch@dev,w
  2856  03BA  3E0A               	addlw	10
  2857  03BB  0084               	movwf	4
  2858  03BC  0800               	movf	0,w
  2859  03BD  00A9               	movwf	??_ds18b20_read_scratch
  2860  03BE  0A84               	incf	4,f
  2861  03BF  0800               	movf	0,w
  2862  03C0  00AA               	movwf	??_ds18b20_read_scratch+1
  2863  03C1  1D29               	btfss	??_ds18b20_read_scratch,2
  2864  03C2  2BCC               	goto	l1898
  2865                           
  2866                           ;ds18b20.c: 96: dev->tempd = 25;
  2867  03C3  082D               	movf	ds18b20_read_scratch@dev,w
  2868  03C4  3E0A               	addlw	10
  2869  03C5  0084               	movwf	4
  2870  03C6  3019               	movlw	25
  2871  03C7  0080               	movwf	0
  2872  03C8  0A84               	incf	4,f
  2873  03C9  3000               	movlw	0
  2874  03CA  0080               	movwf	0
  2875                           
  2876                           ;ds18b20.c: 97: }else if( dev->tempd & 0x02 ){
  2877  03CB  0008               	return
  2878  03CC                     l1898:	
  2879  03CC  082D               	movf	ds18b20_read_scratch@dev,w
  2880  03CD  3E0A               	addlw	10
  2881  03CE  0084               	movwf	4
  2882  03CF  0800               	movf	0,w
  2883  03D0  00A9               	movwf	??_ds18b20_read_scratch
  2884  03D1  0A84               	incf	4,f
  2885  03D2  0800               	movf	0,w
  2886  03D3  00AA               	movwf	??_ds18b20_read_scratch+1
  2887  03D4  1CA9               	btfss	??_ds18b20_read_scratch,1
  2888  03D5  2BDF               	goto	l1902
  2889                           
  2890                           ;ds18b20.c: 98: dev->tempd = 125;
  2891  03D6  082D               	movf	ds18b20_read_scratch@dev,w
  2892  03D7  3E0A               	addlw	10
  2893  03D8  0084               	movwf	4
  2894  03D9  307D               	movlw	125
  2895  03DA  0080               	movwf	0
  2896  03DB  0A84               	incf	4,f
  2897  03DC  3000               	movlw	0
  2898  03DD  0080               	movwf	0
  2899                           
  2900                           ;ds18b20.c: 99: }else if( dev->tempd & 0x01 ){
  2901  03DE  0008               	return
  2902  03DF                     l1902:	
  2903  03DF  082D               	movf	ds18b20_read_scratch@dev,w
  2904  03E0  3E0A               	addlw	10
  2905  03E1  0084               	movwf	4
  2906  03E2  0800               	movf	0,w
  2907  03E3  00A9               	movwf	??_ds18b20_read_scratch
  2908  03E4  0A84               	incf	4,f
  2909  03E5  0800               	movf	0,w
  2910  03E6  00AA               	movwf	??_ds18b20_read_scratch+1
  2911  03E7  1C29               	btfss	??_ds18b20_read_scratch,0
  2912  03E8  0008               	return
  2913                           
  2914                           ;ds18b20.c: 100: dev->tempd = 625;
  2915  03E9  082D               	movf	ds18b20_read_scratch@dev,w
  2916  03EA  3E0A               	addlw	10
  2917  03EB  0084               	movwf	4
  2918  03EC  3071               	movlw	113
  2919  03ED  0080               	movwf	0
  2920  03EE  0A84               	incf	4,f
  2921  03EF  3002               	movlw	2
  2922  03F0  0080               	movwf	0
  2923  03F1  0008               	return
  2924  03F2                     __end_of_ds18b20_read_scratch:	
  2925                           
  2926                           	psect	text8
  2927  070B                     __ptext8:	
  2928 ;; *************** function _ow_write_byte *****************
  2929 ;; Defined at:
  2930 ;;		line 65 in file "onewire.c"
  2931 ;; Parameters:    Size  Location     Type
  2932 ;;  data            1    wreg     unsigned char 
  2933 ;; Auto vars:     Size  Location     Type
  2934 ;;  data            1    7[BANK0 ] unsigned char 
  2935 ;;  i               1    8[BANK0 ] unsigned char 
  2936 ;; Return value:  Size  Location     Type
  2937 ;;		None               void
  2938 ;; Registers used:
  2939 ;;		wreg, status,2, status,0
  2940 ;; Tracked objects:
  2941 ;;		On entry : 0/0
  2942 ;;		On exit  : 0/0
  2943 ;;		Unchanged: 0/0
  2944 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2945 ;;      Params:         0       0       0       0
  2946 ;;      Locals:         0       2       0       0
  2947 ;;      Temps:          0       2       0       0
  2948 ;;      Totals:         0       4       0       0
  2949 ;;Total ram usage:        4 bytes
  2950 ;; Hardware stack levels used:    1
  2951 ;; Hardware stack levels required when called:    4
  2952 ;; This function calls:
  2953 ;;		Nothing
  2954 ;; This function is called by:
  2955 ;;		_ds18b20_read_scratch
  2956 ;;		_ds18b20_start_convert
  2957 ;;		_ds18b20_read_rom
  2958 ;;		_ds18b20_write_scratch
  2959 ;;		_ds18b20_copy_scratch
  2960 ;;		_ds18b20_recall_eeprom
  2961 ;; This function uses a non-reentrant model
  2962 ;;
  2963                           
  2964                           
  2965                           ;psect for function _ow_write_byte
  2966  070B                     _ow_write_byte:	
  2967                           
  2968                           ;incstack = 0
  2969                           ; Regs used in _ow_write_byte: [wreg+status,2+status,0]
  2970                           ;ow_write_byte@data stored from wreg
  2971  070B  1283               	bcf	3,5	;RP0=0, select bank0
  2972  070C  1303               	bcf	3,6	;RP1=0, select bank0
  2973  070D  00A7               	movwf	ow_write_byte@data
  2974                           
  2975                           ;onewire.c: 67: unsigned char i;
  2976                           ;onewire.c: 69: (GIE = 0);
  2977  070E  138B               	bcf	11,7	;volatile
  2978                           
  2979                           ;onewire.c: 70: for(i=0;i<8;i++){
  2980  070F  01A8               	clrf	ow_write_byte@i
  2981  0710  3008               	movlw	8
  2982  0711  0228               	subwf	ow_write_byte@i,w
  2983  0712  1803               	btfsc	3,0
  2984  0713  2F40               	goto	l196
  2985  0714                     l195:	
  2986                           
  2987                           ;onewire.c: 72: TRISCbits.TRISC0 = 0;
  2988  0714  1683               	bsf	3,5	;RP0=1, select bank1
  2989  0715  1303               	bcf	3,6	;RP1=0, select bank1
  2990  0716  1007               	bcf	7,0	;volatile
  2991                           
  2992                           ;onewire.c: 73: _delay((unsigned long)((15)*(8000000/4000000.0)));
  2993  0717  3009               	movlw	9
  2994  0718  1283               	bcf	3,5	;RP0=0, select bank0
  2995  0719  1303               	bcf	3,6	;RP1=0, select bank0
  2996  071A  00A5               	movwf	??_ow_write_byte
  2997  071B                     u1257:	
  2998  071B  0BA5               	decfsz	??_ow_write_byte,f
  2999  071C  2F1B               	goto	u1257
  3000  071D  2F1E               	nop2	;nop
  3001                           
  3002                           ;onewire.c: 74: if( data & 1 ){
  3003  071E  1283               	bcf	3,5	;RP0=0, select bank0
  3004  071F  1303               	bcf	3,6	;RP1=0, select bank0
  3005  0720  1C27               	btfss	ow_write_byte@data,0
  3006  0721  2F25               	goto	l1698
  3007                           
  3008                           ;onewire.c: 76: TRISCbits.TRISC0 = 1;
  3009  0722  1683               	bsf	3,5	;RP0=1, select bank1
  3010  0723  1303               	bcf	3,6	;RP1=0, select bank1
  3011  0724  1407               	bsf	7,0	;volatile
  3012  0725                     l1698:	
  3013                           
  3014                           ;onewire.c: 77: }
  3015                           ;onewire.c: 78: _delay((unsigned long)((45)*(8000000/4000000.0)));
  3016  0725  301D               	movlw	29
  3017  0726  1283               	bcf	3,5	;RP0=0, select bank0
  3018  0727  00A5               	movwf	??_ow_write_byte
  3019  0728                     u1267:	
  3020  0728  0BA5               	decfsz	??_ow_write_byte,f
  3021  0729  2F28               	goto	u1267
  3022  072A  2F2B               	nop2	;nop
  3023                           
  3024                           ;onewire.c: 80: TRISCbits.TRISC0 = 1;
  3025  072B  1683               	bsf	3,5	;RP0=1, select bank1
  3026  072C  1303               	bcf	3,6	;RP1=0, select bank1
  3027  072D  1407               	bsf	7,0	;volatile
  3028                           
  3029                           ;onewire.c: 82: _delay((unsigned long)((1)*(8000000/4000000.0)));
  3030  072E  2F2F               	nop2	;2 cycle nop
  3031                           
  3032                           ;onewire.c: 83: data = data >> 1;
  3033  072F  1283               	bcf	3,5	;RP0=0, select bank0
  3034  0730  1303               	bcf	3,6	;RP1=0, select bank0
  3035  0731  0827               	movf	ow_write_byte@data,w
  3036  0732  00A5               	movwf	??_ow_write_byte
  3037  0733  1003               	clrc
  3038  0734  0C25               	rrf	??_ow_write_byte,w
  3039  0735  00A6               	movwf	??_ow_write_byte+1
  3040  0736  0826               	movf	??_ow_write_byte+1,w
  3041  0737  00A7               	movwf	ow_write_byte@data
  3042  0738  3001               	movlw	1
  3043  0739  00A5               	movwf	??_ow_write_byte
  3044  073A  0825               	movf	??_ow_write_byte,w
  3045  073B  07A8               	addwf	ow_write_byte@i,f
  3046  073C  3008               	movlw	8
  3047  073D  0228               	subwf	ow_write_byte@i,w
  3048  073E  1C03               	skipc
  3049  073F  2F14               	goto	l195
  3050  0740                     l196:	
  3051                           
  3052                           ;onewire.c: 84: }
  3053                           ;onewire.c: 85: (GIE = 1);
  3054  0740  178B               	bsf	11,7	;volatile
  3055  0741  0008               	return
  3056  0742                     __end_of_ow_write_byte:	
  3057                           
  3058                           	psect	text9
  3059  0FD4                     __ptext9:	
  3060 ;; *************** function _ow_reset *****************
  3061 ;; Defined at:
  3062 ;;		line 26 in file "onewire.c"
  3063 ;; Parameters:    Size  Location     Type
  3064 ;;		None
  3065 ;; Auto vars:     Size  Location     Type
  3066 ;;  ret             1    6[BANK0 ] unsigned char 
  3067 ;; Return value:  Size  Location     Type
  3068 ;;                  1    wreg      unsigned char 
  3069 ;; Registers used:
  3070 ;;		wreg, status,2
  3071 ;; Tracked objects:
  3072 ;;		On entry : 0/0
  3073 ;;		On exit  : 0/0
  3074 ;;		Unchanged: 0/0
  3075 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3076 ;;      Params:         0       0       0       0
  3077 ;;      Locals:         0       1       0       0
  3078 ;;      Temps:          0       1       0       0
  3079 ;;      Totals:         0       2       0       0
  3080 ;;Total ram usage:        2 bytes
  3081 ;; Hardware stack levels used:    1
  3082 ;; Hardware stack levels required when called:    4
  3083 ;; This function calls:
  3084 ;;		Nothing
  3085 ;; This function is called by:
  3086 ;;		_ds18b20_read_scratch
  3087 ;;		_ds18b20_start_convert
  3088 ;;		_ds18b20_read_rom
  3089 ;;		_ds18b20_write_scratch
  3090 ;;		_ds18b20_copy_scratch
  3091 ;;		_ds18b20_recall_eeprom
  3092 ;; This function uses a non-reentrant model
  3093 ;;
  3094                           
  3095                           
  3096                           ;psect for function _ow_reset
  3097  0FD4                     _ow_reset:	
  3098                           
  3099                           ;onewire.c: 28: unsigned char ret = 0;
  3100                           
  3101                           ;incstack = 0
  3102                           ; Regs used in _ow_reset: [wreg+status,2]
  3103  0FD4  1283               	bcf	3,5	;RP0=0, select bank0
  3104  0FD5  1303               	bcf	3,6	;RP1=0, select bank0
  3105  0FD6  01A6               	clrf	ow_reset@ret
  3106                           
  3107                           ;onewire.c: 30: (GIE = 0);
  3108  0FD7  138B               	bcf	11,7	;volatile
  3109                           
  3110                           ;onewire.c: 35: PORTCbits.RC0 = 0;
  3111  0FD8  1007               	bcf	7,0	;volatile
  3112                           
  3113                           ;onewire.c: 36: TRISCbits.TRISC0 = 0;
  3114  0FD9  1683               	bsf	3,5	;RP0=1, select bank1
  3115  0FDA  1303               	bcf	3,6	;RP1=0, select bank1
  3116  0FDB  1007               	bcf	7,0	;volatile
  3117                           
  3118                           ;onewire.c: 38: _delay((unsigned long)((490)*(8000000/4000000.0)));
  3119  0FDC  30F4               	movlw	244
  3120  0FDD  1283               	bcf	3,5	;RP0=0, select bank0
  3121  0FDE  1303               	bcf	3,6	;RP1=0, select bank0
  3122  0FDF  00A5               	movwf	??_ow_reset
  3123  0FE0                     u1277:	
  3124  0FE0  0000               	nop
  3125  0FE1  0BA5               	decfsz	??_ow_reset,f
  3126  0FE2  2FE0               	goto	u1277
  3127  0FE3  2FE4               	nop2	;nop
  3128  0FE4  0000               	nop
  3129                           
  3130                           ;onewire.c: 41: TRISCbits.TRISC0 = 1;
  3131  0FE5  1683               	bsf	3,5	;RP0=1, select bank1
  3132  0FE6  1303               	bcf	3,6	;RP1=0, select bank1
  3133  0FE7  1407               	bsf	7,0	;volatile
  3134                           
  3135                           ;onewire.c: 43: _delay((unsigned long)((60)*(8000000/4000000.0)));
  3136  0FE8  3027               	movlw	39
  3137  0FE9  1283               	bcf	3,5	;RP0=0, select bank0
  3138  0FEA  1303               	bcf	3,6	;RP1=0, select bank0
  3139  0FEB  00A5               	movwf	??_ow_reset
  3140  0FEC                     u1287:	
  3141  0FEC  0BA5               	decfsz	??_ow_reset,f
  3142  0FED  2FEC               	goto	u1287
  3143  0FEE  2FEF               	nop2	;nop
  3144                           
  3145                           ;onewire.c: 45: if( PORTCbits.RC0 == 0 ){
  3146  0FEF  1283               	bcf	3,5	;RP0=0, select bank0
  3147  0FF0  1303               	bcf	3,6	;RP1=0, select bank0
  3148  0FF1  1807               	btfsc	7,0	;volatile
  3149  0FF2  2FF6               	goto	l1676
  3150                           
  3151                           ;onewire.c: 47: ret = 1;
  3152  0FF3  01A6               	clrf	ow_reset@ret
  3153  0FF4  0AA6               	incf	ow_reset@ret,f
  3154                           
  3155                           ;onewire.c: 48: }else{
  3156  0FF5  2FF7               	goto	l1678
  3157  0FF6                     l1676:	
  3158                           
  3159                           ;onewire.c: 50: ret = 0;
  3160  0FF6  01A6               	clrf	ow_reset@ret
  3161  0FF7                     l1678:	
  3162                           
  3163                           ;onewire.c: 51: }
  3164                           ;onewire.c: 53: (GIE = 1);
  3165  0FF7  178B               	bsf	11,7	;volatile
  3166                           
  3167                           ;onewire.c: 54: _delay((unsigned long)((450)*(8000000/4000000.0)));
  3168  0FF8  30E0               	movlw	224
  3169  0FF9  00A5               	movwf	??_ow_reset
  3170  0FFA                     u1297:	
  3171  0FFA  0000               	nop
  3172  0FFB  0BA5               	decfsz	??_ow_reset,f
  3173  0FFC  2FFA               	goto	u1297
  3174  0FFD  2FFE               	nop2	;nop
  3175  0FFE  0000               	nop
  3176  0FFF  0008               	return
  3177  1000                     __end_of_ow_reset:	
  3178                           ;onewire.c: 56: return ret;
  3179                           ;	Return value of _ow_reset is never used
  3180                           
  3181                           
  3182                           	psect	text10
  3183  0779                     __ptext10:	
  3184 ;; *************** function _ow_read_byte *****************
  3185 ;; Defined at:
  3186 ;;		line 110 in file "onewire.c"
  3187 ;; Parameters:    Size  Location     Type
  3188 ;;		None
  3189 ;; Auto vars:     Size  Location     Type
  3190 ;;  data            1    7[BANK0 ] unsigned char 
  3191 ;;  i               1    6[BANK0 ] unsigned char 
  3192 ;; Return value:  Size  Location     Type
  3193 ;;                  1    wreg      unsigned char 
  3194 ;; Registers used:
  3195 ;;		wreg, status,2, status,0
  3196 ;; Tracked objects:
  3197 ;;		On entry : 0/0
  3198 ;;		On exit  : 0/0
  3199 ;;		Unchanged: 0/0
  3200 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3201 ;;      Params:         0       0       0       0
  3202 ;;      Locals:         0       2       0       0
  3203 ;;      Temps:          0       1       0       0
  3204 ;;      Totals:         0       3       0       0
  3205 ;;Total ram usage:        3 bytes
  3206 ;; Hardware stack levels used:    1
  3207 ;; Hardware stack levels required when called:    4
  3208 ;; This function calls:
  3209 ;;		Nothing
  3210 ;; This function is called by:
  3211 ;;		_ds18b20_read_scratch
  3212 ;;		_ds18b20_read_rom
  3213 ;; This function uses a non-reentrant model
  3214 ;;
  3215                           
  3216                           
  3217                           ;psect for function _ow_read_byte
  3218  0779                     _ow_read_byte:	
  3219                           
  3220                           ;onewire.c: 112: unsigned char i;
  3221                           ;onewire.c: 113: unsigned char data = 0;
  3222                           
  3223                           ;incstack = 0
  3224                           ; Regs used in _ow_read_byte: [wreg+status,2+status,0]
  3225  0779  1283               	bcf	3,5	;RP0=0, select bank0
  3226  077A  1303               	bcf	3,6	;RP1=0, select bank0
  3227  077B  01A7               	clrf	ow_read_byte@data
  3228                           
  3229                           ;onewire.c: 115: (GIE = 0);
  3230  077C  138B               	bcf	11,7	;volatile
  3231                           
  3232                           ;onewire.c: 116: for(i=0;i<8;i++){
  3233  077D  01A6               	clrf	ow_read_byte@i
  3234  077E  3008               	movlw	8
  3235  077F  0226               	subwf	ow_read_byte@i,w
  3236  0780  1803               	btfsc	3,0
  3237  0781  2FA9               	goto	l206
  3238                           
  3239                           ;onewire.c: 117: data >>= 1;
  3240  0782  1003               	clrc
  3241  0783                     L1:	
  3242  0783  0CA7               	rrf	ow_read_byte@data,f
  3243                           
  3244                           ;onewire.c: 119: TRISCbits.TRISC0 = 0;
  3245  0784  1683               	bsf	3,5	;RP0=1, select bank1
  3246  0785  1303               	bcf	3,6	;RP1=0, select bank1
  3247  0786  1007               	bcf	7,0	;volatile
  3248                           
  3249                           ;onewire.c: 120: _delay((unsigned long)((1)*(8000000/4000000.0)));
  3250  0787  2F88               	nop2	;2 cycle nop
  3251                           
  3252                           ;onewire.c: 122: TRISCbits.TRISC0 = 1;
  3253  0788  1683               	bsf	3,5	;RP0=1, select bank1
  3254  0789  1303               	bcf	3,6	;RP1=0, select bank1
  3255  078A  1407               	bsf	7,0	;volatile
  3256                           
  3257                           ;onewire.c: 123: _delay((unsigned long)((5)*(8000000/4000000.0)));
  3258  078B  3003               	movlw	3
  3259  078C  1283               	bcf	3,5	;RP0=0, select bank0
  3260  078D  1303               	bcf	3,6	;RP1=0, select bank0
  3261  078E  00A5               	movwf	??_ow_read_byte
  3262  078F                     u1307:	
  3263  078F  0BA5               	decfsz	??_ow_read_byte,f
  3264  0790  2F8F               	goto	u1307
  3265                           
  3266                           ;onewire.c: 126: if(PORTCbits.RC0 == 1)
  3267  0791  1283               	bcf	3,5	;RP0=0, select bank0
  3268  0792  1303               	bcf	3,6	;RP1=0, select bank0
  3269  0793  1C07               	btfss	7,0	;volatile
  3270  0794  2F9A               	goto	l1728
  3271                           
  3272                           ;onewire.c: 127: data = data | 0x80;
  3273  0795  0827               	movf	ow_read_byte@data,w
  3274  0796  3880               	iorlw	128
  3275  0797  00A5               	movwf	??_ow_read_byte
  3276  0798  0825               	movf	??_ow_read_byte,w
  3277  0799  00A7               	movwf	ow_read_byte@data
  3278  079A                     l1728:	
  3279                           
  3280                           ;onewire.c: 129: _delay((unsigned long)((55)*(8000000/4000000.0)));
  3281  079A  3024               	movlw	36
  3282  079B  00A5               	movwf	??_ow_read_byte
  3283  079C                     u1317:	
  3284  079C  0BA5               	decfsz	??_ow_read_byte,f
  3285  079D  2F9C               	goto	u1317
  3286  079E  0000               	nop
  3287  079F  3001               	movlw	1
  3288  07A0  1283               	bcf	3,5	;RP0=0, select bank0
  3289  07A1  1303               	bcf	3,6	;RP1=0, select bank0
  3290  07A2  00A5               	movwf	??_ow_read_byte
  3291  07A3  0825               	movf	??_ow_read_byte,w
  3292  07A4  07A6               	addwf	ow_read_byte@i,f
  3293  07A5  3008               	movlw	8
  3294  07A6  0226               	subwf	ow_read_byte@i,w
  3295  07A7  1C03               	skipc
  3296  07A8  2F83               	goto	L1
  3297  07A9                     l206:	
  3298                           
  3299                           ;onewire.c: 130: }
  3300                           ;onewire.c: 131: (GIE = 1);
  3301  07A9  178B               	bsf	11,7	;volatile
  3302                           
  3303                           ;onewire.c: 133: return data;
  3304  07AA  0827               	movf	ow_read_byte@data,w
  3305  07AB  0008               	return
  3306  07AC                     __end_of_ow_read_byte:	
  3307                           
  3308                           	psect	text11
  3309  07FC                     __ptext11:	
  3310 ;; *************** function _ds18b20_init *****************
  3311 ;; Defined at:
  3312 ;;		line 10 in file "ds18b20.c"
  3313 ;; Parameters:    Size  Location     Type
  3314 ;;		None
  3315 ;; Auto vars:     Size  Location     Type
  3316 ;;		None
  3317 ;; Return value:  Size  Location     Type
  3318 ;;		None               void
  3319 ;; Registers used:
  3320 ;;		status,2, status,0, pclath, cstack
  3321 ;; Tracked objects:
  3322 ;;		On entry : 0/0
  3323 ;;		On exit  : 0/0
  3324 ;;		Unchanged: 0/0
  3325 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3326 ;;      Params:         0       0       0       0
  3327 ;;      Locals:         0       0       0       0
  3328 ;;      Temps:          0       0       0       0
  3329 ;;      Totals:         0       0       0       0
  3330 ;;Total ram usage:        0 bytes
  3331 ;; Hardware stack levels used:    1
  3332 ;; Hardware stack levels required when called:    5
  3333 ;; This function calls:
  3334 ;;		_ow_init
  3335 ;; This function is called by:
  3336 ;;		_main
  3337 ;; This function uses a non-reentrant model
  3338 ;;
  3339                           
  3340                           
  3341                           ;psect for function _ds18b20_init
  3342  07FC                     _ds18b20_init:	
  3343                           
  3344                           ;ds18b20.c: 12: ow_init();
  3345                           
  3346                           ;incstack = 0
  3347                           ; Regs used in _ds18b20_init: [status,2+status,0+pclath+cstack]
  3348  07FC  158A  267E         	fcall	_ow_init
  3349  07FE  0008               	return
  3350  07FF                     __end_of_ds18b20_init:	
  3351                           
  3352                           	psect	text12
  3353  0E7E                     __ptext12:	
  3354 ;; *************** function _ow_init *****************
  3355 ;; Defined at:
  3356 ;;		line 17 in file "onewire.c"
  3357 ;; Parameters:    Size  Location     Type
  3358 ;;		None
  3359 ;; Auto vars:     Size  Location     Type
  3360 ;;		None
  3361 ;; Return value:  Size  Location     Type
  3362 ;;		None               void
  3363 ;; Registers used:
  3364 ;;		None
  3365 ;; Tracked objects:
  3366 ;;		On entry : 0/0
  3367 ;;		On exit  : 0/0
  3368 ;;		Unchanged: 0/0
  3369 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3370 ;;      Params:         0       0       0       0
  3371 ;;      Locals:         0       0       0       0
  3372 ;;      Temps:          0       0       0       0
  3373 ;;      Totals:         0       0       0       0
  3374 ;;Total ram usage:        0 bytes
  3375 ;; Hardware stack levels used:    1
  3376 ;; Hardware stack levels required when called:    4
  3377 ;; This function calls:
  3378 ;;		Nothing
  3379 ;; This function is called by:
  3380 ;;		_ds18b20_init
  3381 ;; This function uses a non-reentrant model
  3382 ;;
  3383                           
  3384                           
  3385                           ;psect for function _ow_init
  3386  0E7E                     _ow_init:	
  3387                           
  3388                           ;onewire.c: 22: PORTCbits.RC0 = 0;
  3389                           
  3390                           ;incstack = 0
  3391                           ; Regs used in _ow_init: []
  3392  0E7E  1283               	bcf	3,5	;RP0=0, select bank0
  3393  0E7F  1303               	bcf	3,6	;RP1=0, select bank0
  3394  0E80  1007               	bcf	7,0	;volatile
  3395                           
  3396                           ;onewire.c: 23: TRISCbits.TRISC0 = 1;
  3397  0E81  1683               	bsf	3,5	;RP0=1, select bank1
  3398  0E82  1303               	bcf	3,6	;RP1=0, select bank1
  3399  0E83  1407               	bsf	7,0	;volatile
  3400  0E84  0008               	return
  3401  0E85                     __end_of_ow_init:	
  3402                           
  3403                           	psect	text13
  3404  04C6                     __ptext13:	
  3405 ;; *************** function _dht22_read *****************
  3406 ;; Defined at:
  3407 ;;		line 31 in file "dht22.c"
  3408 ;; Parameters:    Size  Location     Type
  3409 ;;  s               1    wreg     PTR struct dht22
  3410 ;;		 -> main@d1(5), 
  3411 ;; Auto vars:     Size  Location     Type
  3412 ;;  s               1   14[BANK0 ] PTR struct dht22
  3413 ;;		 -> main@d1(5), 
  3414 ;;  humidity        2    9[BANK0 ] int 
  3415 ;;  temp            2    7[BANK0 ] int 
  3416 ;;  i               1   13[BANK0 ] unsigned char 
  3417 ;;  p               1   12[BANK0 ] unsigned char 
  3418 ;;  ptr             1   11[BANK0 ] PTR unsigned char 
  3419 ;;		 -> d1.rhi(1), main@d1(5), 
  3420 ;; Return value:  Size  Location     Type
  3421 ;;                  1    wreg      unsigned char 
  3422 ;; Registers used:
  3423 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  3424 ;; Tracked objects:
  3425 ;;		On entry : 0/0
  3426 ;;		On exit  : 0/0
  3427 ;;		Unchanged: 0/0
  3428 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3429 ;;      Params:         0       0       0       0
  3430 ;;      Locals:         0       8       0       0
  3431 ;;      Temps:          0       2       0       0
  3432 ;;      Totals:         0      10       0       0
  3433 ;;Total ram usage:       10 bytes
  3434 ;; Hardware stack levels used:    1
  3435 ;; Hardware stack levels required when called:    4
  3436 ;; This function calls:
  3437 ;;		Nothing
  3438 ;; This function is called by:
  3439 ;;		_main
  3440 ;; This function uses a non-reentrant model
  3441 ;;
  3442                           
  3443                           
  3444                           ;psect for function _dht22_read
  3445  04C6                     _dht22_read:	
  3446                           
  3447                           ;incstack = 0
  3448                           ; Regs used in _dht22_read: [wreg-fsr0h+status,2+status,0+btemp+1]
  3449                           ;dht22_read@s stored from wreg
  3450  04C6  1283               	bcf	3,5	;RP0=0, select bank0
  3451  04C7  1303               	bcf	3,6	;RP1=0, select bank0
  3452  04C8  00AE               	movwf	dht22_read@s
  3453                           
  3454                           ;dht22.c: 33: unsigned char i, p;
  3455                           ;dht22.c: 34: unsigned char *ptr = &(s->rhi);
  3456  04C9  082E               	movf	dht22_read@s,w
  3457  04CA  00A5               	movwf	??_dht22_read
  3458  04CB  0825               	movf	??_dht22_read,w
  3459  04CC  00AB               	movwf	dht22_read@ptr
  3460                           
  3461                           ;dht22.c: 36: (GIE = 0);
  3462  04CD  138B               	bcf	11,7	;volatile
  3463                           
  3464                           ;dht22.c: 40: PORTCbits.RC1 = 0;
  3465  04CE  1087               	bcf	7,1	;volatile
  3466                           
  3467                           ;dht22.c: 41: TRISCbits.TRISC1 = 0;
  3468  04CF  1683               	bsf	3,5	;RP0=1, select bank1
  3469  04D0  1303               	bcf	3,6	;RP1=0, select bank1
  3470  04D1  1087               	bcf	7,1	;volatile
  3471                           
  3472                           ;dht22.c: 43: _delay((unsigned long)((2)*(8000000/4000.0)));
  3473  04D2  3006               	movlw	6
  3474  04D3  1283               	bcf	3,5	;RP0=0, select bank0
  3475  04D4  1303               	bcf	3,6	;RP1=0, select bank0
  3476  04D5  00A6               	movwf	??_dht22_read+1
  3477  04D6  3030               	movlw	48
  3478  04D7  00A5               	movwf	??_dht22_read
  3479  04D8                     u1327:	
  3480  04D8  0BA5               	decfsz	??_dht22_read,f
  3481  04D9  2CD8               	goto	u1327
  3482  04DA  0BA6               	decfsz	??_dht22_read+1,f
  3483  04DB  2CD8               	goto	u1327
  3484  04DC  0000               	nop
  3485                           
  3486                           ;dht22.c: 47: PORTCbits.RC1 = 1;
  3487  04DD  1283               	bcf	3,5	;RP0=0, select bank0
  3488  04DE  1303               	bcf	3,6	;RP1=0, select bank0
  3489  04DF  1487               	bsf	7,1	;volatile
  3490                           
  3491                           ;dht22.c: 48: TRISCbits.TRISC1 = 0;
  3492  04E0  1683               	bsf	3,5	;RP0=1, select bank1
  3493  04E1  1303               	bcf	3,6	;RP1=0, select bank1
  3494  04E2  1087               	bcf	7,1	;volatile
  3495                           
  3496                           ;dht22.c: 52: PORTCbits.RC1 = 0;
  3497  04E3  1283               	bcf	3,5	;RP0=0, select bank0
  3498  04E4  1303               	bcf	3,6	;RP1=0, select bank0
  3499  04E5  1087               	bcf	7,1	;volatile
  3500                           
  3501                           ;dht22.c: 53: TRISCbits.TRISC1 = 1;
  3502  04E6  1683               	bsf	3,5	;RP0=1, select bank1
  3503  04E7  1303               	bcf	3,6	;RP1=0, select bank1
  3504  04E8  1487               	bsf	7,1	;volatile
  3505                           
  3506                           ;dht22.c: 54: _delay((unsigned long)((40)*(8000000/4000000.0)));
  3507  04E9  301A               	movlw	26
  3508  04EA  1283               	bcf	3,5	;RP0=0, select bank0
  3509  04EB  1303               	bcf	3,6	;RP1=0, select bank0
  3510  04EC  00A5               	movwf	??_dht22_read
  3511  04ED                     u1337:	
  3512  04ED  0BA5               	decfsz	??_dht22_read,f
  3513  04EE  2CED               	goto	u1337
  3514  04EF  0000               	nop
  3515  04F0                     l18:	
  3516                           ;dht22.c: 58: while(PORTCbits.RC1);
  3517                           
  3518  04F0  1283               	bcf	3,5	;RP0=0, select bank0
  3519  04F1  1303               	bcf	3,6	;RP1=0, select bank0
  3520  04F2  1887               	btfsc	7,1	;volatile
  3521  04F3  2CF0               	goto	l18
  3522  04F4                     l21:	
  3523                           ;dht22.c: 61: while(! PORTCbits.RC1);
  3524                           
  3525  04F4  1C87               	btfss	7,1	;volatile
  3526  04F5  2CF4               	goto	l21
  3527  04F6                     l24:	
  3528                           ;dht22.c: 63: while(PORTCbits.RC1);
  3529                           
  3530  04F6  1887               	btfsc	7,1	;volatile
  3531  04F7  2CF6               	goto	l24
  3532                           
  3533                           ;dht22.c: 67: for(i=0;i<5;i++){
  3534  04F8  01AD               	clrf	dht22_read@i
  3535  04F9  3005               	movlw	5
  3536  04FA  022D               	subwf	dht22_read@i,w
  3537  04FB  1803               	btfsc	3,0
  3538  04FC  2D2A               	goto	l28
  3539  04FD                     l1820:	
  3540                           
  3541                           ;dht22.c: 68: for(p=0;p<8;p++){
  3542  04FD  01AC               	clrf	dht22_read@p
  3543  04FE  3008               	movlw	8
  3544  04FF  022C               	subwf	dht22_read@p,w
  3545  0500  1803               	btfsc	3,0
  3546  0501  2D22               	goto	l1838
  3547  0502                     l1826:	
  3548                           
  3549                           ;dht22.c: 70: ptr[ i ] <<= 1;
  3550  0502  082D               	movf	dht22_read@i,w
  3551  0503  072B               	addwf	dht22_read@ptr,w
  3552  0504  00A5               	movwf	??_dht22_read
  3553  0505  0825               	movf	??_dht22_read,w
  3554  0506  0084               	movwf	4
  3555  0507  1003               	clrc
  3556  0508  1383               	bcf	3,7	;select IRP bank0
  3557  0509  0D80               	rlf	0,f
  3558  050A                     l31:	
  3559                           ;dht22.c: 72: while(! PORTCbits.RC1);
  3560                           
  3561  050A  1C87               	btfss	7,1	;volatile
  3562  050B  2D0A               	goto	l31
  3563                           
  3564                           ;dht22.c: 73: TMR0 = 0;
  3565  050C  0181               	clrf	1	;volatile
  3566  050D                     l34:	
  3567                           ;dht22.c: 75: while(PORTCbits.RC1);
  3568                           
  3569  050D  1887               	btfsc	7,1	;volatile
  3570  050E  2D0D               	goto	l34
  3571                           
  3572                           ;dht22.c: 76: if(TMR0 > 40){
  3573  050F  3029               	movlw	41
  3574  0510  0201               	subwf	1,w	;volatile
  3575  0511  1C03               	skipc
  3576  0512  2D1A               	goto	l1834
  3577                           
  3578                           ;dht22.c: 77: ptr[ i ] |= 1;
  3579  0513  082D               	movf	dht22_read@i,w
  3580  0514  072B               	addwf	dht22_read@ptr,w
  3581  0515  00A5               	movwf	??_dht22_read
  3582  0516  0825               	movf	??_dht22_read,w
  3583  0517  0084               	movwf	4
  3584  0518  1383               	bcf	3,7	;select IRP bank0
  3585  0519  1400               	bsf	0,0
  3586  051A                     l1834:	
  3587  051A  3001               	movlw	1
  3588  051B  00A5               	movwf	??_dht22_read
  3589  051C  0825               	movf	??_dht22_read,w
  3590  051D  07AC               	addwf	dht22_read@p,f
  3591  051E  3008               	movlw	8
  3592  051F  022C               	subwf	dht22_read@p,w
  3593  0520  1C03               	skipc
  3594  0521  2D02               	goto	l1826
  3595  0522                     l1838:	
  3596  0522  3001               	movlw	1
  3597  0523  00A5               	movwf	??_dht22_read
  3598  0524  0825               	movf	??_dht22_read,w
  3599  0525  07AD               	addwf	dht22_read@i,f
  3600  0526  3005               	movlw	5
  3601  0527  022D               	subwf	dht22_read@i,w
  3602  0528  1C03               	skipc
  3603  0529  2CFD               	goto	l1820
  3604  052A                     l28:	
  3605                           
  3606                           ;dht22.c: 78: }
  3607                           ;dht22.c: 79: }
  3608                           ;dht22.c: 80: }
  3609                           ;dht22.c: 82: (GIE = 1);
  3610  052A  178B               	bsf	11,7	;volatile
  3611                           
  3612                           ;dht22.c: 87: }
  3613                           ;dht22.c: 89: int temp = (s->ti << 8) + s->td;
  3614  052B  082E               	movf	dht22_read@s,w
  3615  052C  3E02               	addlw	2
  3616  052D  0084               	movwf	4
  3617  052E  1383               	bcf	3,7	;select IRP bank0
  3618  052F  0800               	movf	0,w
  3619  0530  00A5               	movwf	??_dht22_read
  3620  0531  01A6               	clrf	??_dht22_read+1
  3621  0532  0825               	movf	??_dht22_read,w
  3622  0533  00A6               	movwf	??_dht22_read+1
  3623  0534  01A5               	clrf	??_dht22_read
  3624  0535  082E               	movf	dht22_read@s,w
  3625  0536  3E03               	addlw	3
  3626  0537  0084               	movwf	4
  3627  0538  0800               	movf	0,w
  3628  0539  0725               	addwf	??_dht22_read,w
  3629  053A  00A7               	movwf	dht22_read@temp
  3630  053B  3000               	movlw	0
  3631  053C  1803               	skipnc
  3632  053D  3001               	movlw	1
  3633  053E  0726               	addwf	??_dht22_read+1,w
  3634  053F  00A8               	movwf	dht22_read@temp+1
  3635                           
  3636                           ;dht22.c: 90: int humidity = (s->rhi << 8) + s->rhd;
  3637  0540  082E               	movf	dht22_read@s,w
  3638  0541  0084               	movwf	4
  3639  0542  0800               	movf	0,w
  3640  0543  00A5               	movwf	??_dht22_read
  3641  0544  01A6               	clrf	??_dht22_read+1
  3642  0545  0825               	movf	??_dht22_read,w
  3643  0546  00A6               	movwf	??_dht22_read+1
  3644  0547  01A5               	clrf	??_dht22_read
  3645  0548  0A2E               	incf	dht22_read@s,w
  3646  0549  0084               	movwf	4
  3647  054A  0800               	movf	0,w
  3648  054B  0725               	addwf	??_dht22_read,w
  3649  054C  00A9               	movwf	dht22_read@humidity
  3650  054D  3000               	movlw	0
  3651  054E  1803               	skipnc
  3652  054F  3001               	movlw	1
  3653  0550  0726               	addwf	??_dht22_read+1,w
  3654  0551  00AA               	movwf	dht22_read@humidity+1
  3655  0552  0008               	return
  3656  0553                     __end_of_dht22_read:	
  3657                           ;dht22.c: 97: return 0;
  3658                           ;	Return value of _dht22_read is never used
  3659                           
  3660                           
  3661                           	psect	text14
  3662  0F6E                     __ptext14:	
  3663 ;; *************** function _dht22_init *****************
  3664 ;; Defined at:
  3665 ;;		line 12 in file "dht22.c"
  3666 ;; Parameters:    Size  Location     Type
  3667 ;;		None
  3668 ;; Auto vars:     Size  Location     Type
  3669 ;;		None
  3670 ;; Return value:  Size  Location     Type
  3671 ;;		None               void
  3672 ;; Registers used:
  3673 ;;		wreg
  3674 ;; Tracked objects:
  3675 ;;		On entry : 0/0
  3676 ;;		On exit  : 0/0
  3677 ;;		Unchanged: 0/0
  3678 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3679 ;;      Params:         0       0       0       0
  3680 ;;      Locals:         0       0       0       0
  3681 ;;      Temps:          0       3       0       0
  3682 ;;      Totals:         0       3       0       0
  3683 ;;Total ram usage:        3 bytes
  3684 ;; Hardware stack levels used:    1
  3685 ;; Hardware stack levels required when called:    4
  3686 ;; This function calls:
  3687 ;;		Nothing
  3688 ;; This function is called by:
  3689 ;;		_main
  3690 ;; This function uses a non-reentrant model
  3691 ;;
  3692                           
  3693                           
  3694                           ;psect for function _dht22_init
  3695  0F6E                     _dht22_init:	
  3696                           
  3697                           ;dht22.c: 17: TRISCbits.TRISC1 = 1;
  3698                           
  3699                           ;incstack = 0
  3700                           ; Regs used in _dht22_init: [wreg]
  3701  0F6E  1683               	bsf	3,5	;RP0=1, select bank1
  3702  0F6F  1303               	bcf	3,6	;RP1=0, select bank1
  3703  0F70  1487               	bsf	7,1	;volatile
  3704                           
  3705                           ;dht22.c: 18: PORTCbits.RC1 = 0;
  3706  0F71  1283               	bcf	3,5	;RP0=0, select bank0
  3707  0F72  1303               	bcf	3,6	;RP1=0, select bank0
  3708  0F73  1087               	bcf	7,1	;volatile
  3709                           
  3710                           ;dht22.c: 20: OPTION_REGbits.T0CS = 0;
  3711  0F74  1683               	bsf	3,5	;RP0=1, select bank1
  3712  0F75  1303               	bcf	3,6	;RP1=0, select bank1
  3713  0F76  1281               	bcf	1,5	;volatile
  3714                           
  3715                           ;dht22.c: 21: OPTION_REGbits.T0SE = 0;
  3716  0F77  1201               	bcf	1,4	;volatile
  3717                           
  3718                           ;dht22.c: 22: OPTION_REGbits.PSA = 0;
  3719  0F78  1181               	bcf	1,3	;volatile
  3720                           
  3721                           ;dht22.c: 23: OPTION_REGbits.PS0 = 0;
  3722  0F79  1001               	bcf	1,0	;volatile
  3723                           
  3724                           ;dht22.c: 24: OPTION_REGbits.PS1 = 0;
  3725  0F7A  1081               	bcf	1,1	;volatile
  3726                           
  3727                           ;dht22.c: 25: OPTION_REGbits.PS2 = 0;
  3728  0F7B  1101               	bcf	1,2	;volatile
  3729                           
  3730                           ;dht22.c: 28: _delay((unsigned long)((1000)*(8000000/4000.0)));
  3731  0F7C  300B               	movlw	11
  3732  0F7D  1283               	bcf	3,5	;RP0=0, select bank0
  3733  0F7E  1303               	bcf	3,6	;RP1=0, select bank0
  3734  0F7F  00A7               	movwf	??_dht22_init+2
  3735  0F80  3026               	movlw	38
  3736  0F81  00A6               	movwf	??_dht22_init+1
  3737  0F82  3066               	movlw	102
  3738  0F83  00A5               	movwf	??_dht22_init
  3739  0F84                     u1347:	
  3740  0F84  0BA5               	decfsz	??_dht22_init,f
  3741  0F85  2F84               	goto	u1347
  3742  0F86  0BA6               	decfsz	??_dht22_init+1,f
  3743  0F87  2F84               	goto	u1347
  3744  0F88  0BA7               	decfsz	??_dht22_init+2,f
  3745  0F89  2F84               	goto	u1347
  3746  0F8A  2F8B               	nop2
  3747  0F8B  0008               	return
  3748  0F8C                     __end_of_dht22_init:	
  3749                           
  3750                           	psect	text15
  3751  0553                     __ptext15:	
  3752 ;; *************** function _bmp180_read_params *****************
  3753 ;; Defined at:
  3754 ;;		line 29 in file "bmp180.c"
  3755 ;; Parameters:    Size  Location     Type
  3756 ;;  device          1    wreg     PTR struct bmp180_t
  3757 ;;		 -> main@dev(26), 
  3758 ;; Auto vars:     Size  Location     Type
  3759 ;;  device          1   43[BANK0 ] PTR struct bmp180_t
  3760 ;;		 -> main@dev(26), 
  3761 ;;  data           22   19[BANK0 ] unsigned char [22]
  3762 ;;  i               1   42[BANK0 ] unsigned char 
  3763 ;;  j               1   41[BANK0 ] unsigned char 
  3764 ;; Return value:  Size  Location     Type
  3765 ;;                  1    wreg      unsigned char 
  3766 ;; Registers used:
  3767 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3768 ;; Tracked objects:
  3769 ;;		On entry : 0/0
  3770 ;;		On exit  : 0/0
  3771 ;;		Unchanged: 0/0
  3772 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3773 ;;      Params:         0       0       0       0
  3774 ;;      Locals:         0      25       0       0
  3775 ;;      Temps:          0       3       0       0
  3776 ;;      Totals:         0      28       0       0
  3777 ;;Total ram usage:       28 bytes
  3778 ;; Hardware stack levels used:    1
  3779 ;; Hardware stack levels required when called:    6
  3780 ;; This function calls:
  3781 ;;		_i2c_fw_write_and_read
  3782 ;; This function is called by:
  3783 ;;		_main
  3784 ;; This function uses a non-reentrant model
  3785 ;;
  3786                           
  3787                           
  3788                           ;psect for function _bmp180_read_params
  3789  0553                     _bmp180_read_params:	
  3790                           
  3791                           ;incstack = 0
  3792                           ; Regs used in _bmp180_read_params: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3793                           ;bmp180_read_params@device stored from wreg
  3794  0553  1283               	bcf	3,5	;RP0=0, select bank0
  3795  0554  1303               	bcf	3,6	;RP1=0, select bank0
  3796  0555  00CB               	movwf	bmp180_read_params@device
  3797                           
  3798                           ;bmp180.c: 31: unsigned char i, j = 0;
  3799  0556  01C9               	clrf	bmp180_read_params@j
  3800                           
  3801                           ;bmp180.c: 32: unsigned char data[22];
  3802                           ;bmp180.c: 34: for(i=0xAA;i<=0xBF;i++){
  3803  0557  30AA               	movlw	170
  3804  0558  00B0               	movwf	??_bmp180_read_params
  3805  0559  0830               	movf	??_bmp180_read_params,w
  3806  055A  00CA               	movwf	bmp180_read_params@i
  3807  055B  30C0               	movlw	192
  3808  055C  024A               	subwf	bmp180_read_params@i,w
  3809  055D  1803               	btfsc	3,0
  3810  055E  2D83               	goto	l2042
  3811  055F                     l2034:	
  3812                           
  3813                           ;bmp180.c: 35: i2c_fw_write_and_read((device->addr>>1), i, 1, &data[j]);
  3814  055F  084A               	movf	bmp180_read_params@i,w
  3815  0560  00B0               	movwf	??_bmp180_read_params
  3816  0561  0830               	movf	??_bmp180_read_params,w
  3817  0562  00A9               	movwf	i2c_fw_write_and_read@reg
  3818  0563  01AA               	clrf	i2c_fw_write_and_read@data_len
  3819  0564  0AAA               	incf	i2c_fw_write_and_read@data_len,f
  3820  0565  0849               	movf	bmp180_read_params@j,w
  3821  0566  3E33               	addlw	(low (bmp180_read_params@data| 0))& (0+255)
  3822  0567  00B1               	movwf	??_bmp180_read_params+1
  3823  0568  0831               	movf	??_bmp180_read_params+1,w
  3824  0569  00AB               	movwf	i2c_fw_write_and_read@data
  3825  056A  084B               	movf	bmp180_read_params@device,w
  3826  056B  3E16               	addlw	22
  3827  056C  0084               	movwf	4
  3828  056D  1383               	bcf	3,7	;select IRP bank0
  3829  056E  0800               	movf	0,w
  3830  056F  00B2               	movwf	??_bmp180_read_params+2
  3831  0570  1003               	clrc
  3832  0571  0C32               	rrf	??_bmp180_read_params+2,w
  3833  0572  118A  268A  118A   	fcall	_i2c_fw_write_and_read
  3834                           
  3835                           ;bmp180.c: 37: j++;
  3836  0575  3001               	movlw	1
  3837  0576  1283               	bcf	3,5	;RP0=0, select bank0
  3838  0577  1303               	bcf	3,6	;RP1=0, select bank0
  3839  0578  00B0               	movwf	??_bmp180_read_params
  3840  0579  0830               	movf	??_bmp180_read_params,w
  3841  057A  07C9               	addwf	bmp180_read_params@j,f
  3842  057B  3001               	movlw	1
  3843  057C  00B0               	movwf	??_bmp180_read_params
  3844  057D  0830               	movf	??_bmp180_read_params,w
  3845  057E  07CA               	addwf	bmp180_read_params@i,f
  3846  057F  30C0               	movlw	192
  3847  0580  024A               	subwf	bmp180_read_params@i,w
  3848  0581  1C03               	skipc
  3849  0582  2D5F               	goto	l2034
  3850  0583                     l2042:	
  3851                           
  3852                           ;bmp180.c: 38: }
  3853                           ;bmp180.c: 40: device->params.ac1 = ((signed short)data[0] << 8) | data[1];
  3854  0583  084B               	movf	bmp180_read_params@device,w
  3855  0584  0084               	movwf	4
  3856  0585  0834               	movf	bmp180_read_params@data+1,w
  3857  0586  1383               	bcf	3,7	;select IRP bank0
  3858  0587  0080               	movwf	0
  3859  0588  0A84               	incf	4,f
  3860  0589  0833               	movf	bmp180_read_params@data,w
  3861  058A  0080               	movwf	0
  3862                           
  3863                           ;bmp180.c: 41: device->params.ac2 = ((signed short)data[2] << 8) | data[3];
  3864  058B  084B               	movf	bmp180_read_params@device,w
  3865  058C  3E02               	addlw	2
  3866  058D  0084               	movwf	4
  3867  058E  0836               	movf	bmp180_read_params@data+3,w
  3868  058F  0080               	movwf	0
  3869  0590  0A84               	incf	4,f
  3870  0591  0835               	movf	bmp180_read_params@data+2,w
  3871  0592  0080               	movwf	0
  3872                           
  3873                           ;bmp180.c: 42: device->params.ac3 = ((signed short)data[4] << 8) | data[5];
  3874  0593  084B               	movf	bmp180_read_params@device,w
  3875  0594  3E04               	addlw	4
  3876  0595  0084               	movwf	4
  3877  0596  0838               	movf	bmp180_read_params@data+5,w
  3878  0597  0080               	movwf	0
  3879  0598  0A84               	incf	4,f
  3880  0599  0837               	movf	bmp180_read_params@data+4,w
  3881  059A  0080               	movwf	0
  3882                           
  3883                           ;bmp180.c: 43: device->params.ac4 = ((unsigned short)data[6] << 8) | data[7];
  3884  059B  084B               	movf	bmp180_read_params@device,w
  3885  059C  3E06               	addlw	6
  3886  059D  0084               	movwf	4
  3887  059E  083A               	movf	bmp180_read_params@data+7,w
  3888  059F  0080               	movwf	0
  3889  05A0  0A84               	incf	4,f
  3890  05A1  0839               	movf	bmp180_read_params@data+6,w
  3891  05A2  0080               	movwf	0
  3892                           
  3893                           ;bmp180.c: 44: device->params.ac5 = ((unsigned short)data[8] << 8) | data[9];
  3894  05A3  084B               	movf	bmp180_read_params@device,w
  3895  05A4  3E08               	addlw	8
  3896  05A5  0084               	movwf	4
  3897  05A6  083C               	movf	bmp180_read_params@data+9,w
  3898  05A7  0080               	movwf	0
  3899  05A8  0A84               	incf	4,f
  3900  05A9  083B               	movf	bmp180_read_params@data+8,w
  3901  05AA  0080               	movwf	0
  3902                           
  3903                           ;bmp180.c: 45: device->params.ac6 = ((unsigned short)data[10] << 8) | data[11];
  3904  05AB  084B               	movf	bmp180_read_params@device,w
  3905  05AC  3E0A               	addlw	10
  3906  05AD  0084               	movwf	4
  3907  05AE  083E               	movf	bmp180_read_params@data+11,w
  3908  05AF  0080               	movwf	0
  3909  05B0  0A84               	incf	4,f
  3910  05B1  083D               	movf	bmp180_read_params@data+10,w
  3911  05B2  0080               	movwf	0
  3912                           
  3913                           ;bmp180.c: 47: device->params.b1 = ((signed short)data[12] << 8) | data[13];
  3914  05B3  084B               	movf	bmp180_read_params@device,w
  3915  05B4  3E0C               	addlw	12
  3916  05B5  0084               	movwf	4
  3917  05B6  0840               	movf	bmp180_read_params@data+13,w
  3918  05B7  0080               	movwf	0
  3919  05B8  0A84               	incf	4,f
  3920  05B9  083F               	movf	bmp180_read_params@data+12,w
  3921  05BA  0080               	movwf	0
  3922                           
  3923                           ;bmp180.c: 48: device->params.b2 = ((signed short)data[14] << 8) | data[15];
  3924  05BB  084B               	movf	bmp180_read_params@device,w
  3925  05BC  3E0E               	addlw	14
  3926  05BD  0084               	movwf	4
  3927  05BE  0842               	movf	bmp180_read_params@data+15,w
  3928  05BF  0080               	movwf	0
  3929  05C0  0A84               	incf	4,f
  3930  05C1  0841               	movf	bmp180_read_params@data+14,w
  3931  05C2  0080               	movwf	0
  3932                           
  3933                           ;bmp180.c: 50: device->params.mb = ((signed short)data[16] << 8) | data[17];
  3934  05C3  084B               	movf	bmp180_read_params@device,w
  3935  05C4  3E10               	addlw	16
  3936  05C5  0084               	movwf	4
  3937  05C6  0844               	movf	bmp180_read_params@data+17,w
  3938  05C7  0080               	movwf	0
  3939  05C8  0A84               	incf	4,f
  3940  05C9  0843               	movf	bmp180_read_params@data+16,w
  3941  05CA  0080               	movwf	0
  3942                           
  3943                           ;bmp180.c: 51: device->params.mc = ((signed short)data[18] << 8) | data[19];
  3944  05CB  084B               	movf	bmp180_read_params@device,w
  3945  05CC  3E12               	addlw	18
  3946  05CD  0084               	movwf	4
  3947  05CE  0846               	movf	bmp180_read_params@data+19,w
  3948  05CF  0080               	movwf	0
  3949  05D0  0A84               	incf	4,f
  3950  05D1  0845               	movf	bmp180_read_params@data+18,w
  3951  05D2  0080               	movwf	0
  3952                           
  3953                           ;bmp180.c: 52: device->params.md = ((signed short)data[20] << 8) | data[21];
  3954  05D3  084B               	movf	bmp180_read_params@device,w
  3955  05D4  3E14               	addlw	20
  3956  05D5  0084               	movwf	4
  3957  05D6  0848               	movf	bmp180_read_params@data+21,w
  3958  05D7  0080               	movwf	0
  3959  05D8  0A84               	incf	4,f
  3960  05D9  0847               	movf	bmp180_read_params@data+20,w
  3961  05DA  0080               	movwf	0
  3962  05DB  0008               	return
  3963  05DC                     __end_of_bmp180_read_params:	
  3964                           ;bmp180.c: 69: return 0;
  3965                           ;	Return value of _bmp180_read_params is never used
  3966                           
  3967                           
  3968                           	psect	text16
  3969  07DA                     __ptext16:	
  3970 ;; *************** function _bmp180_init *****************
  3971 ;; Defined at:
  3972 ;;		line 8 in file "bmp180.c"
  3973 ;; Parameters:    Size  Location     Type
  3974 ;;  device          1    wreg     PTR struct bmp180_t
  3975 ;;		 -> main@dev(26), 
  3976 ;; Auto vars:     Size  Location     Type
  3977 ;;  device          1   20[BANK0 ] PTR struct bmp180_t
  3978 ;;		 -> main@dev(26), 
  3979 ;;  data            1   19[BANK0 ] unsigned char 
  3980 ;; Return value:  Size  Location     Type
  3981 ;;                  1    wreg      unsigned char 
  3982 ;; Registers used:
  3983 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3984 ;; Tracked objects:
  3985 ;;		On entry : 0/0
  3986 ;;		On exit  : 0/0
  3987 ;;		Unchanged: 0/0
  3988 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3989 ;;      Params:         0       0       0       0
  3990 ;;      Locals:         0       2       0       0
  3991 ;;      Temps:          0       3       0       0
  3992 ;;      Totals:         0       5       0       0
  3993 ;;Total ram usage:        5 bytes
  3994 ;; Hardware stack levels used:    1
  3995 ;; Hardware stack levels required when called:    6
  3996 ;; This function calls:
  3997 ;;		_i2c_fw_write_and_read
  3998 ;; This function is called by:
  3999 ;;		_main
  4000 ;; This function uses a non-reentrant model
  4001 ;;
  4002                           
  4003                           
  4004                           ;psect for function _bmp180_init
  4005  07DA                     _bmp180_init:	
  4006                           
  4007                           ;incstack = 0
  4008                           ; Regs used in _bmp180_init: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4009                           ;bmp180_init@device stored from wreg
  4010  07DA  1283               	bcf	3,5	;RP0=0, select bank0
  4011  07DB  1303               	bcf	3,6	;RP1=0, select bank0
  4012  07DC  00B4               	movwf	bmp180_init@device
  4013                           
  4014                           ;bmp180.c: 13: unsigned char data;
  4015                           ;bmp180.c: 14: i2c_fw_write_and_read((device->addr>>1), 0xD0, 1, &data);
  4016  07DD  30D0               	movlw	208
  4017  07DE  00B0               	movwf	??_bmp180_init
  4018  07DF  0830               	movf	??_bmp180_init,w
  4019  07E0  00A9               	movwf	i2c_fw_write_and_read@reg
  4020  07E1  01AA               	clrf	i2c_fw_write_and_read@data_len
  4021  07E2  0AAA               	incf	i2c_fw_write_and_read@data_len,f
  4022  07E3  3033               	movlw	(low (bmp180_init@data| 0))& (0+255)
  4023  07E4  00B1               	movwf	??_bmp180_init+1
  4024  07E5  0831               	movf	??_bmp180_init+1,w
  4025  07E6  00AB               	movwf	i2c_fw_write_and_read@data
  4026  07E7  0834               	movf	bmp180_init@device,w
  4027  07E8  3E16               	addlw	22
  4028  07E9  0084               	movwf	4
  4029  07EA  1383               	bcf	3,7	;select IRP bank0
  4030  07EB  0800               	movf	0,w
  4031  07EC  00B2               	movwf	??_bmp180_init+2
  4032  07ED  1003               	clrc
  4033  07EE  0C32               	rrf	??_bmp180_init+2,w
  4034  07EF  118A  268A         	fcall	_i2c_fw_write_and_read
  4035                           
  4036                           ;bmp180.c: 17: if(data = device->chipid){
  4037  07F1  1283               	bcf	3,5	;RP0=0, select bank0
  4038  07F2  1303               	bcf	3,6	;RP1=0, select bank0
  4039  07F3  0834               	movf	bmp180_init@device,w
  4040  07F4  3E18               	addlw	24
  4041  07F5  0084               	movwf	4
  4042  07F6  1383               	bcf	3,7	;select IRP bank0
  4043  07F7  0800               	movf	0,w
  4044  07F8  00B0               	movwf	??_bmp180_init
  4045  07F9  0830               	movf	??_bmp180_init,w
  4046  07FA  00B3               	movwf	bmp180_init@data
  4047  07FB  0008               	return
  4048  07FC                     __end_of_bmp180_init:	
  4049                           ;bmp180.c: 19: }
  4050                           ;bmp180.c: 21: return 0;
  4051                           ;	Return value of _bmp180_init is never used
  4052                           
  4053                           
  4054                           	psect	text17
  4055  05DC                     __ptext17:	
  4056 ;; *************** function _bmp180_get_ut *****************
  4057 ;; Defined at:
  4058 ;;		line 73 in file "bmp180.c"
  4059 ;; Parameters:    Size  Location     Type
  4060 ;;  device          1    wreg     PTR struct bmp180_t
  4061 ;;		 -> main@dev(26), 
  4062 ;; Auto vars:     Size  Location     Type
  4063 ;;  device          1   24[BANK0 ] PTR struct bmp180_t
  4064 ;;		 -> main@dev(26), 
  4065 ;;  data            2   22[BANK0 ] unsigned char [2]
  4066 ;; Return value:  Size  Location     Type
  4067 ;;                  2   16[BANK0 ] unsigned short 
  4068 ;; Registers used:
  4069 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4070 ;; Tracked objects:
  4071 ;;		On entry : 0/0
  4072 ;;		On exit  : 0/0
  4073 ;;		Unchanged: 0/0
  4074 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4075 ;;      Params:         0       2       0       0
  4076 ;;      Locals:         0       3       0       0
  4077 ;;      Temps:          0       4       0       0
  4078 ;;      Totals:         0       9       0       0
  4079 ;;Total ram usage:        9 bytes
  4080 ;; Hardware stack levels used:    1
  4081 ;; Hardware stack levels required when called:    6
  4082 ;; This function calls:
  4083 ;;		_i2c_fw_write_and_read
  4084 ;;		_i2c_fw_write_only
  4085 ;; This function is called by:
  4086 ;;		_main
  4087 ;; This function uses a non-reentrant model
  4088 ;;
  4089                           
  4090                           
  4091                           ;psect for function _bmp180_get_ut
  4092  05DC                     _bmp180_get_ut:	
  4093                           
  4094                           ;incstack = 0
  4095                           ; Regs used in _bmp180_get_ut: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4096                           ;bmp180_get_ut@device stored from wreg
  4097  05DC  1283               	bcf	3,5	;RP0=0, select bank0
  4098  05DD  1303               	bcf	3,6	;RP1=0, select bank0
  4099  05DE  00B8               	movwf	bmp180_get_ut@device
  4100                           
  4101                           ;bmp180.c: 75: unsigned char data[2];
  4102                           ;bmp180.c: 77: i2c_fw_write_only((device->addr>>1), 0xF4, 0x2E);
  4103  05DF  30F4               	movlw	244
  4104  05E0  00B2               	movwf	??_bmp180_get_ut
  4105  05E1  0832               	movf	??_bmp180_get_ut,w
  4106  05E2  00A9               	movwf	i2c_fw_write_only@reg
  4107  05E3  302E               	movlw	46
  4108  05E4  00B3               	movwf	??_bmp180_get_ut+1
  4109  05E5  0833               	movf	??_bmp180_get_ut+1,w
  4110  05E6  00AA               	movwf	i2c_fw_write_only@value
  4111  05E7  0838               	movf	bmp180_get_ut@device,w
  4112  05E8  3E16               	addlw	22
  4113  05E9  0084               	movwf	4
  4114  05EA  1383               	bcf	3,7	;select IRP bank0
  4115  05EB  0800               	movf	0,w
  4116  05EC  00B4               	movwf	??_bmp180_get_ut+2
  4117  05ED  1003               	clrc
  4118  05EE  0C34               	rrf	??_bmp180_get_ut+2,w
  4119  05EF  158A  27AD  118A   	fcall	_i2c_fw_write_only
  4120                           
  4121                           ;bmp180.c: 78: _delay((unsigned long)((5)*(8000000/4000.0)));
  4122  05F2  300D               	movlw	13
  4123  05F3  1283               	bcf	3,5	;RP0=0, select bank0
  4124  05F4  1303               	bcf	3,6	;RP1=0, select bank0
  4125  05F5  00B3               	movwf	??_bmp180_get_ut+1
  4126  05F6  30FB               	movlw	251
  4127  05F7  00B2               	movwf	??_bmp180_get_ut
  4128  05F8                     u1357:	
  4129  05F8  0BB2               	decfsz	??_bmp180_get_ut,f
  4130  05F9  2DF8               	goto	u1357
  4131  05FA  0BB3               	decfsz	??_bmp180_get_ut+1,f
  4132  05FB  2DF8               	goto	u1357
  4133  05FC  2DFD               	nop2
  4134                           
  4135                           ;bmp180.c: 79: i2c_fw_write_and_read((device->addr>>1), 0xF6, 1, &data[0]);
  4136  05FD  30F6               	movlw	246
  4137  05FE  1283               	bcf	3,5	;RP0=0, select bank0
  4138  05FF  1303               	bcf	3,6	;RP1=0, select bank0
  4139  0600  00B2               	movwf	??_bmp180_get_ut
  4140  0601  0832               	movf	??_bmp180_get_ut,w
  4141  0602  00A9               	movwf	i2c_fw_write_and_read@reg
  4142  0603  01AA               	clrf	i2c_fw_write_and_read@data_len
  4143  0604  0AAA               	incf	i2c_fw_write_and_read@data_len,f
  4144  0605  3036               	movlw	(low (bmp180_get_ut@data| 0))& (0+255)
  4145  0606  00B3               	movwf	??_bmp180_get_ut+1
  4146  0607  0833               	movf	??_bmp180_get_ut+1,w
  4147  0608  00AB               	movwf	i2c_fw_write_and_read@data
  4148  0609  0838               	movf	bmp180_get_ut@device,w
  4149  060A  3E16               	addlw	22
  4150  060B  0084               	movwf	4
  4151  060C  1383               	bcf	3,7	;select IRP bank0
  4152  060D  0800               	movf	0,w
  4153  060E  00B4               	movwf	??_bmp180_get_ut+2
  4154  060F  1003               	clrc
  4155  0610  0C34               	rrf	??_bmp180_get_ut+2,w
  4156  0611  118A  268A  118A   	fcall	_i2c_fw_write_and_read
  4157                           
  4158                           ;bmp180.c: 80: i2c_fw_write_and_read((device->addr>>1), 0xF7, 1, &data[1]);
  4159  0614  30F7               	movlw	247
  4160  0615  1283               	bcf	3,5	;RP0=0, select bank0
  4161  0616  1303               	bcf	3,6	;RP1=0, select bank0
  4162  0617  00B2               	movwf	??_bmp180_get_ut
  4163  0618  0832               	movf	??_bmp180_get_ut,w
  4164  0619  00A9               	movwf	i2c_fw_write_and_read@reg
  4165  061A  01AA               	clrf	i2c_fw_write_and_read@data_len
  4166  061B  0AAA               	incf	i2c_fw_write_and_read@data_len,f
  4167  061C  3037               	movlw	(low ((bmp180_get_ut@data| 0+1)))& (0+255)
  4168  061D  00B3               	movwf	??_bmp180_get_ut+1
  4169  061E  0833               	movf	??_bmp180_get_ut+1,w
  4170  061F  00AB               	movwf	i2c_fw_write_and_read@data
  4171  0620  0838               	movf	bmp180_get_ut@device,w
  4172  0621  3E16               	addlw	22
  4173  0622  0084               	movwf	4
  4174  0623  1383               	bcf	3,7	;select IRP bank0
  4175  0624  0800               	movf	0,w
  4176  0625  00B4               	movwf	??_bmp180_get_ut+2
  4177  0626  1003               	clrc
  4178  0627  0C34               	rrf	??_bmp180_get_ut+2,w
  4179  0628  118A  268A         	fcall	_i2c_fw_write_and_read
  4180                           
  4181                           ;bmp180.c: 84: return ((unsigned short)data[0] << 8 | data[1]);
  4182  062A  1283               	bcf	3,5	;RP0=0, select bank0
  4183  062B  1303               	bcf	3,6	;RP1=0, select bank0
  4184  062C  0837               	movf	bmp180_get_ut@data+1,w
  4185  062D  00B2               	movwf	??_bmp180_get_ut
  4186  062E  01B3               	clrf	??_bmp180_get_ut+1
  4187  062F  0836               	movf	bmp180_get_ut@data,w
  4188  0630  00B4               	movwf	??_bmp180_get_ut+2
  4189  0631  01B5               	clrf	??_bmp180_get_ut+3
  4190  0632  0834               	movf	??_bmp180_get_ut+2,w
  4191  0633  00B5               	movwf	??_bmp180_get_ut+3
  4192  0634  01B4               	clrf	??_bmp180_get_ut+2
  4193  0635  0832               	movf	??_bmp180_get_ut,w
  4194  0636  0434               	iorwf	??_bmp180_get_ut+2,w
  4195  0637  00B0               	movwf	?_bmp180_get_ut
  4196  0638  0833               	movf	??_bmp180_get_ut+1,w
  4197  0639  0435               	iorwf	??_bmp180_get_ut+3,w
  4198  063A  00B1               	movwf	?_bmp180_get_ut+1
  4199  063B  0008               	return
  4200  063C                     __end_of_bmp180_get_ut:	
  4201                           
  4202                           	psect	text18
  4203  03F2                     __ptext18:	
  4204 ;; *************** function _bmp180_get_up *****************
  4205 ;; Defined at:
  4206 ;;		line 87 in file "bmp180.c"
  4207 ;; Parameters:    Size  Location     Type
  4208 ;;  device          1    wreg     PTR struct bmp180_t
  4209 ;;		 -> main@dev(26), 
  4210 ;; Auto vars:     Size  Location     Type
  4211 ;;  device          1   35[BANK0 ] PTR struct bmp180_t
  4212 ;;		 -> main@dev(26), 
  4213 ;;  tmp             4   28[BANK0 ] unsigned long 
  4214 ;;  data            3   32[BANK0 ] unsigned char [3]
  4215 ;; Return value:  Size  Location     Type
  4216 ;;                  4   16[BANK0 ] unsigned long 
  4217 ;; Registers used:
  4218 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4219 ;; Tracked objects:
  4220 ;;		On entry : 0/0
  4221 ;;		On exit  : 0/0
  4222 ;;		Unchanged: 0/0
  4223 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4224 ;;      Params:         0       4       0       0
  4225 ;;      Locals:         0       8       0       0
  4226 ;;      Temps:          0       8       0       0
  4227 ;;      Totals:         0      20       0       0
  4228 ;;Total ram usage:       20 bytes
  4229 ;; Hardware stack levels used:    1
  4230 ;; Hardware stack levels required when called:    6
  4231 ;; This function calls:
  4232 ;;		_i2c_fw_write_and_read
  4233 ;;		_i2c_fw_write_only
  4234 ;; This function is called by:
  4235 ;;		_main
  4236 ;; This function uses a non-reentrant model
  4237 ;;
  4238                           
  4239                           
  4240                           ;psect for function _bmp180_get_up
  4241  03F2                     _bmp180_get_up:	
  4242                           
  4243                           ;incstack = 0
  4244                           ; Regs used in _bmp180_get_up: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4245                           ;bmp180_get_up@device stored from wreg
  4246  03F2  1283               	bcf	3,5	;RP0=0, select bank0
  4247  03F3  1303               	bcf	3,6	;RP1=0, select bank0
  4248  03F4  00C3               	movwf	bmp180_get_up@device
  4249                           
  4250                           ;bmp180.c: 89: unsigned char data[3];
  4251                           ;bmp180.c: 90: unsigned long tmp = 0;
  4252  03F5  3000               	movlw	0
  4253  03F6  00BF               	movwf	bmp180_get_up@tmp+3
  4254  03F7  3000               	movlw	0
  4255  03F8  00BE               	movwf	bmp180_get_up@tmp+2
  4256  03F9  3000               	movlw	0
  4257  03FA  00BD               	movwf	bmp180_get_up@tmp+1
  4258  03FB  3000               	movlw	0
  4259  03FC  00BC               	movwf	bmp180_get_up@tmp
  4260                           
  4261                           ;bmp180.c: 92: i2c_fw_write_only((device->addr>>1), 0xF4, (0x34 | (device->oss_setting<<
      +                          6)));
  4262  03FD  30F4               	movlw	244
  4263  03FE  00B4               	movwf	??_bmp180_get_up
  4264  03FF  0834               	movf	??_bmp180_get_up,w
  4265  0400  00A9               	movwf	i2c_fw_write_only@reg
  4266  0401  0843               	movf	bmp180_get_up@device,w
  4267  0402  3E19               	addlw	25
  4268  0403  0084               	movwf	4
  4269  0404  1383               	bcf	3,7	;select IRP bank0
  4270  0405  0800               	movf	0,w
  4271  0406  00B5               	movwf	??_bmp180_get_up+1
  4272  0407  3005               	movlw	5
  4273  0408                     u1055:	
  4274  0408  1003               	clrc
  4275  0409  0DB5               	rlf	??_bmp180_get_up+1,f
  4276  040A  3EFF               	addlw	-1
  4277  040B  1D03               	skipz
  4278  040C  2C08               	goto	u1055
  4279  040D  1003               	clrc
  4280  040E  0D35               	rlf	??_bmp180_get_up+1,w
  4281  040F  3834               	iorlw	52
  4282  0410  00B6               	movwf	??_bmp180_get_up+2
  4283  0411  0836               	movf	??_bmp180_get_up+2,w
  4284  0412  00AA               	movwf	i2c_fw_write_only@value
  4285  0413  0843               	movf	bmp180_get_up@device,w
  4286  0414  3E16               	addlw	22
  4287  0415  0084               	movwf	4
  4288  0416  0800               	movf	0,w
  4289  0417  00B7               	movwf	??_bmp180_get_up+3
  4290  0418  1003               	clrc
  4291  0419  0C37               	rrf	??_bmp180_get_up+3,w
  4292  041A  158A  27AD  118A   	fcall	_i2c_fw_write_only
  4293                           
  4294                           ;bmp180.c: 93: _delay((unsigned long)((3)*(8000000/4000.0)));
  4295  041D  3008               	movlw	8
  4296  041E  1283               	bcf	3,5	;RP0=0, select bank0
  4297  041F  1303               	bcf	3,6	;RP1=0, select bank0
  4298  0420  00B5               	movwf	??_bmp180_get_up+1
  4299  0421  30C9               	movlw	201
  4300  0422  00B4               	movwf	??_bmp180_get_up
  4301  0423                     u1367:	
  4302  0423  0BB4               	decfsz	??_bmp180_get_up,f
  4303  0424  2C23               	goto	u1367
  4304  0425  0BB5               	decfsz	??_bmp180_get_up+1,f
  4305  0426  2C23               	goto	u1367
  4306  0427  2C28               	nop2
  4307                           
  4308                           ;bmp180.c: 94: i2c_fw_write_and_read((device->addr>>1), 0xF6, 1, &data[0]);
  4309  0428  30F6               	movlw	246
  4310  0429  1283               	bcf	3,5	;RP0=0, select bank0
  4311  042A  1303               	bcf	3,6	;RP1=0, select bank0
  4312  042B  00B4               	movwf	??_bmp180_get_up
  4313  042C  0834               	movf	??_bmp180_get_up,w
  4314  042D  00A9               	movwf	i2c_fw_write_and_read@reg
  4315  042E  01AA               	clrf	i2c_fw_write_and_read@data_len
  4316  042F  0AAA               	incf	i2c_fw_write_and_read@data_len,f
  4317  0430  3040               	movlw	(low (bmp180_get_up@data| 0))& (0+255)
  4318  0431  00B5               	movwf	??_bmp180_get_up+1
  4319  0432  0835               	movf	??_bmp180_get_up+1,w
  4320  0433  00AB               	movwf	i2c_fw_write_and_read@data
  4321  0434  0843               	movf	bmp180_get_up@device,w
  4322  0435  3E16               	addlw	22
  4323  0436  0084               	movwf	4
  4324  0437  1383               	bcf	3,7	;select IRP bank0
  4325  0438  0800               	movf	0,w
  4326  0439  00B6               	movwf	??_bmp180_get_up+2
  4327  043A  1003               	clrc
  4328  043B  0C36               	rrf	??_bmp180_get_up+2,w
  4329  043C  118A  268A  118A   	fcall	_i2c_fw_write_and_read
  4330                           
  4331                           ;bmp180.c: 95: i2c_fw_write_and_read((device->addr>>1), 0xF7, 1, &data[1]);
  4332  043F  30F7               	movlw	247
  4333  0440  1283               	bcf	3,5	;RP0=0, select bank0
  4334  0441  1303               	bcf	3,6	;RP1=0, select bank0
  4335  0442  00B4               	movwf	??_bmp180_get_up
  4336  0443  0834               	movf	??_bmp180_get_up,w
  4337  0444  00A9               	movwf	i2c_fw_write_and_read@reg
  4338  0445  01AA               	clrf	i2c_fw_write_and_read@data_len
  4339  0446  0AAA               	incf	i2c_fw_write_and_read@data_len,f
  4340  0447  3041               	movlw	(low ((bmp180_get_up@data| 0+1)))& (0+255)
  4341  0448  00B5               	movwf	??_bmp180_get_up+1
  4342  0449  0835               	movf	??_bmp180_get_up+1,w
  4343  044A  00AB               	movwf	i2c_fw_write_and_read@data
  4344  044B  0843               	movf	bmp180_get_up@device,w
  4345  044C  3E16               	addlw	22
  4346  044D  0084               	movwf	4
  4347  044E  1383               	bcf	3,7	;select IRP bank0
  4348  044F  0800               	movf	0,w
  4349  0450  00B6               	movwf	??_bmp180_get_up+2
  4350  0451  1003               	clrc
  4351  0452  0C36               	rrf	??_bmp180_get_up+2,w
  4352  0453  118A  268A  118A   	fcall	_i2c_fw_write_and_read
  4353                           
  4354                           ;bmp180.c: 96: i2c_fw_write_and_read((device->addr>>1), 0xF8, 1, &data[2]);
  4355  0456  30F8               	movlw	248
  4356  0457  1283               	bcf	3,5	;RP0=0, select bank0
  4357  0458  1303               	bcf	3,6	;RP1=0, select bank0
  4358  0459  00B4               	movwf	??_bmp180_get_up
  4359  045A  0834               	movf	??_bmp180_get_up,w
  4360  045B  00A9               	movwf	i2c_fw_write_and_read@reg
  4361  045C  01AA               	clrf	i2c_fw_write_and_read@data_len
  4362  045D  0AAA               	incf	i2c_fw_write_and_read@data_len,f
  4363  045E  3042               	movlw	(low ((bmp180_get_up@data| 0+2)))& (0+255)
  4364  045F  00B5               	movwf	??_bmp180_get_up+1
  4365  0460  0835               	movf	??_bmp180_get_up+1,w
  4366  0461  00AB               	movwf	i2c_fw_write_and_read@data
  4367  0462  0843               	movf	bmp180_get_up@device,w
  4368  0463  3E16               	addlw	22
  4369  0464  0084               	movwf	4
  4370  0465  1383               	bcf	3,7	;select IRP bank0
  4371  0466  0800               	movf	0,w
  4372  0467  00B6               	movwf	??_bmp180_get_up+2
  4373  0468  1003               	clrc
  4374  0469  0C36               	rrf	??_bmp180_get_up+2,w
  4375  046A  118A  268A  118A   	fcall	_i2c_fw_write_and_read
  4376                           
  4377                           ;bmp180.c: 98: tmp = (unsigned long)data[0] << 16 | (unsigned long)data[1] << 8;
  4378  046D  1283               	bcf	3,5	;RP0=0, select bank0
  4379  046E  1303               	bcf	3,6	;RP1=0, select bank0
  4380  046F  0841               	movf	bmp180_get_up@data+1,w
  4381  0470  00B4               	movwf	??_bmp180_get_up
  4382  0471  01B5               	clrf	??_bmp180_get_up+1
  4383  0472  01B6               	clrf	??_bmp180_get_up+2
  4384  0473  01B7               	clrf	??_bmp180_get_up+3
  4385  0474  3008               	movlw	8
  4386  0475                     u1065:	
  4387  0475  1003               	clrc
  4388  0476  0DB4               	rlf	??_bmp180_get_up,f
  4389  0477  0DB5               	rlf	??_bmp180_get_up+1,f
  4390  0478  0DB6               	rlf	??_bmp180_get_up+2,f
  4391  0479  0DB7               	rlf	??_bmp180_get_up+3,f
  4392  047A  3EFF               	addlw	-1
  4393  047B  1D03               	skipz
  4394  047C  2C75               	goto	u1065
  4395  047D  0840               	movf	bmp180_get_up@data,w
  4396  047E  00B8               	movwf	??_bmp180_get_up+4
  4397  047F  01B9               	clrf	??_bmp180_get_up+5
  4398  0480  01BA               	clrf	??_bmp180_get_up+6
  4399  0481  01BB               	clrf	??_bmp180_get_up+7
  4400  0482  3010               	movlw	16
  4401  0483                     u1075:	
  4402  0483  1003               	clrc
  4403  0484  0DB8               	rlf	??_bmp180_get_up+4,f
  4404  0485  0DB9               	rlf	??_bmp180_get_up+5,f
  4405  0486  0DBA               	rlf	??_bmp180_get_up+6,f
  4406  0487  0DBB               	rlf	??_bmp180_get_up+7,f
  4407  0488  3EFF               	addlw	-1
  4408  0489  1D03               	skipz
  4409  048A  2C83               	goto	u1075
  4410  048B  0834               	movf	??_bmp180_get_up,w
  4411  048C  0438               	iorwf	??_bmp180_get_up+4,w
  4412  048D  00BC               	movwf	bmp180_get_up@tmp
  4413  048E  0835               	movf	??_bmp180_get_up+1,w
  4414  048F  0439               	iorwf	??_bmp180_get_up+5,w
  4415  0490  00BD               	movwf	bmp180_get_up@tmp+1
  4416  0491  0836               	movf	??_bmp180_get_up+2,w
  4417  0492  043A               	iorwf	??_bmp180_get_up+6,w
  4418  0493  00BE               	movwf	bmp180_get_up@tmp+2
  4419  0494  0837               	movf	??_bmp180_get_up+3,w
  4420  0495  043B               	iorwf	??_bmp180_get_up+7,w
  4421  0496  00BF               	movwf	bmp180_get_up@tmp+3
  4422                           
  4423                           ;bmp180.c: 104: return (unsigned long)(tmp | data[2]) >> (8 - device->oss_setting);
  4424  0497  083C               	movf	bmp180_get_up@tmp,w
  4425  0498  00B4               	movwf	??_bmp180_get_up
  4426  0499  083D               	movf	bmp180_get_up@tmp+1,w
  4427  049A  00B5               	movwf	??_bmp180_get_up+1
  4428  049B  083E               	movf	bmp180_get_up@tmp+2,w
  4429  049C  00B6               	movwf	??_bmp180_get_up+2
  4430  049D  083F               	movf	bmp180_get_up@tmp+3,w
  4431  049E  00B7               	movwf	??_bmp180_get_up+3
  4432  049F  0842               	movf	bmp180_get_up@data+2,w
  4433  04A0  00B8               	movwf	??_bmp180_get_up+4
  4434  04A1  01B9               	clrf	??_bmp180_get_up+5
  4435  04A2  01BA               	clrf	??_bmp180_get_up+6
  4436  04A3  01BB               	clrf	??_bmp180_get_up+7
  4437  04A4  0838               	movf	??_bmp180_get_up+4,w
  4438  04A5  04B4               	iorwf	??_bmp180_get_up,f
  4439  04A6  0839               	movf	??_bmp180_get_up+5,w
  4440  04A7  04B5               	iorwf	??_bmp180_get_up+1,f
  4441  04A8  083A               	movf	??_bmp180_get_up+6,w
  4442  04A9  04B6               	iorwf	??_bmp180_get_up+2,f
  4443  04AA  083B               	movf	??_bmp180_get_up+7,w
  4444  04AB  04B7               	iorwf	??_bmp180_get_up+3,f
  4445  04AC  0843               	movf	bmp180_get_up@device,w
  4446  04AD  3E19               	addlw	25
  4447  04AE  0084               	movwf	4
  4448  04AF  1383               	bcf	3,7	;select IRP bank0
  4449  04B0  0300               	decf	0,w
  4450  04B1  3AFF               	xorlw	255
  4451  04B2  3E08               	addlw	8
  4452  04B3  3E01               	addlw	1
  4453  04B4  2CBA               	goto	u1080
  4454  04B5                     u1085:	
  4455  04B5  1003               	clrc
  4456  04B6  0CB7               	rrf	??_bmp180_get_up+3,f
  4457  04B7  0CB6               	rrf	??_bmp180_get_up+2,f
  4458  04B8  0CB5               	rrf	??_bmp180_get_up+1,f
  4459  04B9  0CB4               	rrf	??_bmp180_get_up,f
  4460  04BA                     u1080:	
  4461  04BA  3EFF               	addlw	-1
  4462  04BB  1D03               	skipz
  4463  04BC  2CB5               	goto	u1085
  4464  04BD  0837               	movf	??_bmp180_get_up+3,w
  4465  04BE  00B3               	movwf	?_bmp180_get_up+3
  4466  04BF  0836               	movf	??_bmp180_get_up+2,w
  4467  04C0  00B2               	movwf	?_bmp180_get_up+2
  4468  04C1  0835               	movf	??_bmp180_get_up+1,w
  4469  04C2  00B1               	movwf	?_bmp180_get_up+1
  4470  04C3  0834               	movf	??_bmp180_get_up,w
  4471  04C4  00B0               	movwf	?_bmp180_get_up
  4472  04C5  0008               	return
  4473  04C6                     __end_of_bmp180_get_up:	
  4474                           
  4475                           	psect	text19
  4476  0FAD                     __ptext19:	
  4477 ;; *************** function _i2c_fw_write_only *****************
  4478 ;; Defined at:
  4479 ;;		line 207 in file "i2c_fw_master.c"
  4480 ;; Parameters:    Size  Location     Type
  4481 ;;  addr            1    wreg     unsigned char 
  4482 ;;  reg             1    9[BANK0 ] unsigned char 
  4483 ;;  value           1   10[BANK0 ] unsigned char 
  4484 ;; Auto vars:     Size  Location     Type
  4485 ;;  addr            1   12[BANK0 ] unsigned char 
  4486 ;; Return value:  Size  Location     Type
  4487 ;;                  1    wreg      unsigned char 
  4488 ;; Registers used:
  4489 ;;		wreg, status,2, status,0, pclath, cstack
  4490 ;; Tracked objects:
  4491 ;;		On entry : 0/0
  4492 ;;		On exit  : 0/0
  4493 ;;		Unchanged: 0/0
  4494 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4495 ;;      Params:         0       2       0       0
  4496 ;;      Locals:         0       1       0       0
  4497 ;;      Temps:          0       1       0       0
  4498 ;;      Totals:         0       4       0       0
  4499 ;;Total ram usage:        4 bytes
  4500 ;; Hardware stack levels used:    1
  4501 ;; Hardware stack levels required when called:    5
  4502 ;; This function calls:
  4503 ;;		_i2c_fw_read_status
  4504 ;;		_i2c_fw_start
  4505 ;;		_i2c_fw_stop
  4506 ;;		_i2c_fw_write_byte
  4507 ;; This function is called by:
  4508 ;;		_bmp180_get_ut
  4509 ;;		_bmp180_get_up
  4510 ;; This function uses a non-reentrant model
  4511 ;;
  4512                           
  4513                           
  4514                           ;psect for function _i2c_fw_write_only
  4515  0FAD                     _i2c_fw_write_only:	
  4516                           
  4517                           ;incstack = 0
  4518                           ; Regs used in _i2c_fw_write_only: [wreg+status,2+status,0+pclath+cstack]
  4519                           ;i2c_fw_write_only@addr stored from wreg
  4520  0FAD  1283               	bcf	3,5	;RP0=0, select bank0
  4521  0FAE  1303               	bcf	3,6	;RP1=0, select bank0
  4522  0FAF  00AC               	movwf	i2c_fw_write_only@addr
  4523                           
  4524                           ;i2c_fw_master.c: 209: i2c_fw_start();
  4525  0FB0  158A  26B5  158A   	fcall	_i2c_fw_start
  4526                           
  4527                           ;i2c_fw_master.c: 211: i2c_fw_write_byte((addr<<1) & 0xFE);
  4528  0FB3  1283               	bcf	3,5	;RP0=0, select bank0
  4529  0FB4  1303               	bcf	3,6	;RP1=0, select bank0
  4530  0FB5  082C               	movf	i2c_fw_write_only@addr,w
  4531  0FB6  00AB               	movwf	??_i2c_fw_write_only
  4532  0FB7  072B               	addwf	??_i2c_fw_write_only,w
  4533  0FB8  39FE               	andlw	254
  4534  0FB9  118A  27AC  158A   	fcall	_i2c_fw_write_byte
  4535                           
  4536                           ;i2c_fw_master.c: 213: i2c_fw_read_status();
  4537  0FBC  158A  26FF  158A   	fcall	_i2c_fw_read_status
  4538                           
  4539                           ;i2c_fw_master.c: 215: i2c_fw_write_byte(reg);
  4540  0FBF  1283               	bcf	3,5	;RP0=0, select bank0
  4541  0FC0  1303               	bcf	3,6	;RP1=0, select bank0
  4542  0FC1  0829               	movf	i2c_fw_write_only@reg,w
  4543  0FC2  118A  27AC  158A   	fcall	_i2c_fw_write_byte
  4544                           
  4545                           ;i2c_fw_master.c: 217: i2c_fw_read_status();
  4546  0FC5  158A  26FF  158A   	fcall	_i2c_fw_read_status
  4547                           
  4548                           ;i2c_fw_master.c: 219: i2c_fw_write_byte(value);
  4549  0FC8  1283               	bcf	3,5	;RP0=0, select bank0
  4550  0FC9  1303               	bcf	3,6	;RP1=0, select bank0
  4551  0FCA  082A               	movf	i2c_fw_write_only@value,w
  4552  0FCB  118A  27AC  158A   	fcall	_i2c_fw_write_byte
  4553                           
  4554                           ;i2c_fw_master.c: 221: i2c_fw_read_status();
  4555  0FCE  158A  26FF  158A   	fcall	_i2c_fw_read_status
  4556                           
  4557                           ;i2c_fw_master.c: 222: i2c_fw_stop();
  4558  0FD1  158A  26C1         	fcall	_i2c_fw_stop
  4559  0FD3  0008               	return
  4560  0FD4                     __end_of_i2c_fw_write_only:	
  4561                           ;i2c_fw_master.c: 224: return 0;
  4562                           ;	Return value of _i2c_fw_write_only is never used
  4563                           
  4564                           
  4565                           	psect	text20
  4566  068A                     __ptext20:	
  4567 ;; *************** function _i2c_fw_write_and_read *****************
  4568 ;; Defined at:
  4569 ;;		line 171 in file "i2c_fw_master.c"
  4570 ;; Parameters:    Size  Location     Type
  4571 ;;  addr            1    wreg     unsigned char 
  4572 ;;  reg             1    9[BANK0 ] unsigned char 
  4573 ;;  data_len        1   10[BANK0 ] unsigned char 
  4574 ;;  data            1   11[BANK0 ] PTR unsigned char 
  4575 ;;		 -> bmp180_get_up@data(3), bmp180_get_ut@data(2), bmp180_read_params@data(22), bmp180_init@data(1), 
  4576 ;; Auto vars:     Size  Location     Type
  4577 ;;  addr            1   14[BANK0 ] unsigned char 
  4578 ;;  i               1   15[BANK0 ] unsigned char 
  4579 ;; Return value:  Size  Location     Type
  4580 ;;                  1    wreg      unsigned char 
  4581 ;; Registers used:
  4582 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4583 ;; Tracked objects:
  4584 ;;		On entry : 0/0
  4585 ;;		On exit  : 0/0
  4586 ;;		Unchanged: 0/0
  4587 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4588 ;;      Params:         0       3       0       0
  4589 ;;      Locals:         0       2       0       0
  4590 ;;      Temps:          0       2       0       0
  4591 ;;      Totals:         0       7       0       0
  4592 ;;Total ram usage:        7 bytes
  4593 ;; Hardware stack levels used:    1
  4594 ;; Hardware stack levels required when called:    5
  4595 ;; This function calls:
  4596 ;;		_i2c_fw_read_byte
  4597 ;;		_i2c_fw_read_status
  4598 ;;		_i2c_fw_repstart
  4599 ;;		_i2c_fw_send_ack
  4600 ;;		_i2c_fw_start
  4601 ;;		_i2c_fw_stop
  4602 ;;		_i2c_fw_write_byte
  4603 ;; This function is called by:
  4604 ;;		_bmp180_init
  4605 ;;		_bmp180_read_params
  4606 ;;		_bmp180_get_ut
  4607 ;;		_bmp180_get_up
  4608 ;; This function uses a non-reentrant model
  4609 ;;
  4610                           
  4611                           
  4612                           ;psect for function _i2c_fw_write_and_read
  4613  068A                     _i2c_fw_write_and_read:	
  4614                           
  4615                           ;incstack = 0
  4616                           ; Regs used in _i2c_fw_write_and_read: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4617                           ;i2c_fw_write_and_read@addr stored from wreg
  4618  068A  1283               	bcf	3,5	;RP0=0, select bank0
  4619  068B  1303               	bcf	3,6	;RP1=0, select bank0
  4620  068C  00AE               	movwf	i2c_fw_write_and_read@addr
  4621                           
  4622                           ;i2c_fw_master.c: 174: unsigned char i;
  4623                           ;i2c_fw_master.c: 176: i2c_fw_start();
  4624  068D  158A  26B5  118A   	fcall	_i2c_fw_start
  4625                           
  4626                           ;i2c_fw_master.c: 178: i2c_fw_write_byte((addr<<1) & 0xFE);
  4627  0690  1283               	bcf	3,5	;RP0=0, select bank0
  4628  0691  1303               	bcf	3,6	;RP1=0, select bank0
  4629  0692  082E               	movf	i2c_fw_write_and_read@addr,w
  4630  0693  00AC               	movwf	??_i2c_fw_write_and_read
  4631  0694  072C               	addwf	??_i2c_fw_write_and_read,w
  4632  0695  39FE               	andlw	254
  4633  0696  118A  27AC  118A   	fcall	_i2c_fw_write_byte
  4634                           
  4635                           ;i2c_fw_master.c: 180: i2c_fw_read_status();
  4636  0699  158A  26FF  118A   	fcall	_i2c_fw_read_status
  4637                           
  4638                           ;i2c_fw_master.c: 182: i2c_fw_write_byte(reg);
  4639  069C  1283               	bcf	3,5	;RP0=0, select bank0
  4640  069D  1303               	bcf	3,6	;RP1=0, select bank0
  4641  069E  0829               	movf	i2c_fw_write_and_read@reg,w
  4642  069F  118A  27AC  118A   	fcall	_i2c_fw_write_byte
  4643                           
  4644                           ;i2c_fw_master.c: 184: i2c_fw_read_status();
  4645  06A2  158A  26FF  118A   	fcall	_i2c_fw_read_status
  4646                           
  4647                           ;i2c_fw_master.c: 186: i2c_fw_repstart();
  4648  06A5  158A  26CD  118A   	fcall	_i2c_fw_repstart
  4649                           
  4650                           ;i2c_fw_master.c: 188: i2c_fw_write_byte((addr<<1) | 0x01);
  4651  06A8  1403               	setc
  4652  06A9  1283               	bcf	3,5	;RP0=0, select bank0
  4653  06AA  1303               	bcf	3,6	;RP1=0, select bank0
  4654  06AB  0D2E               	rlf	i2c_fw_write_and_read@addr,w
  4655  06AC  118A  27AC  118A   	fcall	_i2c_fw_write_byte
  4656                           
  4657                           ;i2c_fw_master.c: 190: i2c_fw_read_status();
  4658  06AF  158A  26FF  118A   	fcall	_i2c_fw_read_status
  4659                           
  4660                           ;i2c_fw_master.c: 193: for(i=0;i<data_len;i++){
  4661  06B2  1283               	bcf	3,5	;RP0=0, select bank0
  4662  06B3  1303               	bcf	3,6	;RP1=0, select bank0
  4663  06B4  01AF               	clrf	i2c_fw_write_and_read@i
  4664  06B5                     l1758:	
  4665  06B5  082A               	movf	i2c_fw_write_and_read@data_len,w
  4666  06B6  022F               	subwf	i2c_fw_write_and_read@i,w
  4667  06B7  1803               	btfsc	3,0
  4668  06B8  2ECC               	goto	l1760
  4669                           
  4670                           ;i2c_fw_master.c: 194: *(data + i) = i2c_fw_read_byte();
  4671  06B9  118A  2742  118A   	fcall	_i2c_fw_read_byte
  4672  06BC  1283               	bcf	3,5	;RP0=0, select bank0
  4673  06BD  1303               	bcf	3,6	;RP1=0, select bank0
  4674  06BE  00AC               	movwf	??_i2c_fw_write_and_read
  4675  06BF  082F               	movf	i2c_fw_write_and_read@i,w
  4676  06C0  072B               	addwf	i2c_fw_write_and_read@data,w
  4677  06C1  00AD               	movwf	??_i2c_fw_write_and_read+1
  4678  06C2  082D               	movf	??_i2c_fw_write_and_read+1,w
  4679  06C3  0084               	movwf	4
  4680  06C4  082C               	movf	??_i2c_fw_write_and_read,w
  4681  06C5  1383               	bcf	3,7	;select IRP bank0
  4682  06C6  0080               	movwf	0
  4683  06C7  3001               	movlw	1
  4684  06C8  00AC               	movwf	??_i2c_fw_write_and_read
  4685  06C9  082C               	movf	??_i2c_fw_write_and_read,w
  4686  06CA  07AF               	addwf	i2c_fw_write_and_read@i,f
  4687  06CB  2EB5               	goto	l1758
  4688  06CC                     l1760:	
  4689                           
  4690                           ;i2c_fw_master.c: 195: }
  4691                           ;i2c_fw_master.c: 196: i2c_fw_send_ack();
  4692  06CC  158A  26A9  118A   	fcall	_i2c_fw_send_ack
  4693                           
  4694                           ;i2c_fw_master.c: 202: i2c_fw_stop();
  4695  06CF  158A  26C1         	fcall	_i2c_fw_stop
  4696  06D1  0008               	return
  4697  06D2                     __end_of_i2c_fw_write_and_read:	
  4698                           ;i2c_fw_master.c: 204: return 0;
  4699                           ;	Return value of _i2c_fw_write_and_read is never used
  4700                           
  4701                           
  4702                           	psect	text21
  4703  07AC                     __ptext21:	
  4704 ;; *************** function _i2c_fw_write_byte *****************
  4705 ;; Defined at:
  4706 ;;		line 117 in file "i2c_fw_master.c"
  4707 ;; Parameters:    Size  Location     Type
  4708 ;;  data            1    wreg     unsigned char 
  4709 ;; Auto vars:     Size  Location     Type
  4710 ;;  data            1    7[BANK0 ] unsigned char 
  4711 ;;  i               1    8[BANK0 ] unsigned char 
  4712 ;; Return value:  Size  Location     Type
  4713 ;;		None               void
  4714 ;; Registers used:
  4715 ;;		wreg, status,2, status,0
  4716 ;; Tracked objects:
  4717 ;;		On entry : 0/0
  4718 ;;		On exit  : 0/0
  4719 ;;		Unchanged: 0/0
  4720 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4721 ;;      Params:         0       0       0       0
  4722 ;;      Locals:         0       2       0       0
  4723 ;;      Temps:          0       2       0       0
  4724 ;;      Totals:         0       4       0       0
  4725 ;;Total ram usage:        4 bytes
  4726 ;; Hardware stack levels used:    1
  4727 ;; Hardware stack levels required when called:    4
  4728 ;; This function calls:
  4729 ;;		Nothing
  4730 ;; This function is called by:
  4731 ;;		_i2c_fw_write_and_read
  4732 ;;		_i2c_fw_write_only
  4733 ;; This function uses a non-reentrant model
  4734 ;;
  4735                           
  4736                           
  4737                           ;psect for function _i2c_fw_write_byte
  4738  07AC                     _i2c_fw_write_byte:	
  4739                           
  4740                           ;incstack = 0
  4741                           ; Regs used in _i2c_fw_write_byte: [wreg+status,2+status,0]
  4742                           ;i2c_fw_write_byte@data stored from wreg
  4743  07AC  1283               	bcf	3,5	;RP0=0, select bank0
  4744  07AD  1303               	bcf	3,6	;RP1=0, select bank0
  4745  07AE  00A7               	movwf	i2c_fw_write_byte@data
  4746                           
  4747                           ;i2c_fw_master.c: 119: unsigned char i;
  4748                           ;i2c_fw_master.c: 121: (GIE = 0);
  4749  07AF  138B               	bcf	11,7	;volatile
  4750                           
  4751                           ;i2c_fw_master.c: 124: TRISBbits.TRISB4 = 0;
  4752  07B0  1683               	bsf	3,5	;RP0=1, select bank1
  4753  07B1  1303               	bcf	3,6	;RP1=0, select bank1
  4754  07B2  1206               	bcf	6,4	;volatile
  4755                           
  4756                           ;i2c_fw_master.c: 125: TRISBbits.TRISB6 = 0;
  4757  07B3  1306               	bcf	6,6	;volatile
  4758                           
  4759                           ;i2c_fw_master.c: 127: for(i=0;i<8;i++){
  4760  07B4  1283               	bcf	3,5	;RP0=0, select bank0
  4761  07B5  1303               	bcf	3,6	;RP1=0, select bank0
  4762  07B6  01A8               	clrf	i2c_fw_write_byte@i
  4763  07B7  3008               	movlw	8
  4764  07B8  0228               	subwf	i2c_fw_write_byte@i,w
  4765  07B9  1803               	btfsc	3,0
  4766  07BA  2FD8               	goto	l282
  4767  07BB                     l281:	
  4768                           
  4769                           ;i2c_fw_master.c: 128: if(data & (1 << 7))
  4770  07BB  1FA7               	btfss	i2c_fw_write_byte@data,7
  4771  07BC  2FC0               	goto	l283
  4772                           
  4773                           ;i2c_fw_master.c: 129: TRISBbits.TRISB4 = 1;
  4774  07BD  1683               	bsf	3,5	;RP0=1, select bank1
  4775  07BE  1303               	bcf	3,6	;RP1=0, select bank1
  4776  07BF  1606               	bsf	6,4	;volatile
  4777  07C0                     l283:	
  4778                           
  4779                           ;i2c_fw_master.c: 131: TRISBbits.TRISB6 = 1;
  4780  07C0  1683               	bsf	3,5	;RP0=1, select bank1
  4781  07C1  1303               	bcf	3,6	;RP1=0, select bank1
  4782  07C2  1706               	bsf	6,6	;volatile
  4783                           
  4784                           ;i2c_fw_master.c: 132: _delay((unsigned long)((1)*(8000000/4000000.0)));
  4785  07C3  2FC4               	nop2	;2 cycle nop
  4786                           
  4787                           ;i2c_fw_master.c: 134: TRISBbits.TRISB6 = 0;
  4788  07C4  1683               	bsf	3,5	;RP0=1, select bank1
  4789  07C5  1303               	bcf	3,6	;RP1=0, select bank1
  4790  07C6  1306               	bcf	6,6	;volatile
  4791                           
  4792                           ;i2c_fw_master.c: 135: TRISBbits.TRISB4 = 0;
  4793  07C7  1206               	bcf	6,4	;volatile
  4794                           
  4795                           ;i2c_fw_master.c: 137: data = data << 1;
  4796  07C8  1283               	bcf	3,5	;RP0=0, select bank0
  4797  07C9  1303               	bcf	3,6	;RP1=0, select bank0
  4798  07CA  0827               	movf	i2c_fw_write_byte@data,w
  4799  07CB  00A5               	movwf	??_i2c_fw_write_byte
  4800  07CC  0725               	addwf	??_i2c_fw_write_byte,w
  4801  07CD  00A6               	movwf	??_i2c_fw_write_byte+1
  4802  07CE  0826               	movf	??_i2c_fw_write_byte+1,w
  4803  07CF  00A7               	movwf	i2c_fw_write_byte@data
  4804  07D0  3001               	movlw	1
  4805  07D1  00A5               	movwf	??_i2c_fw_write_byte
  4806  07D2  0825               	movf	??_i2c_fw_write_byte,w
  4807  07D3  07A8               	addwf	i2c_fw_write_byte@i,f
  4808  07D4  3008               	movlw	8
  4809  07D5  0228               	subwf	i2c_fw_write_byte@i,w
  4810  07D6  1C03               	skipc
  4811  07D7  2FBB               	goto	l281
  4812  07D8                     l282:	
  4813                           
  4814                           ;i2c_fw_master.c: 138: }
  4815                           ;i2c_fw_master.c: 142: (GIE = 1);
  4816  07D8  178B               	bsf	11,7	;volatile
  4817  07D9  0008               	return
  4818  07DA                     __end_of_i2c_fw_write_byte:	
  4819                           
  4820                           	psect	text22
  4821  0EC1                     __ptext22:	
  4822 ;; *************** function _i2c_fw_stop *****************
  4823 ;; Defined at:
  4824 ;;		line 39 in file "i2c_fw_master.c"
  4825 ;; Parameters:    Size  Location     Type
  4826 ;;		None
  4827 ;; Auto vars:     Size  Location     Type
  4828 ;;		None
  4829 ;; Return value:  Size  Location     Type
  4830 ;;		None               void
  4831 ;; Registers used:
  4832 ;;		None
  4833 ;; Tracked objects:
  4834 ;;		On entry : 0/0
  4835 ;;		On exit  : 0/0
  4836 ;;		Unchanged: 0/0
  4837 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4838 ;;      Params:         0       0       0       0
  4839 ;;      Locals:         0       0       0       0
  4840 ;;      Temps:          0       0       0       0
  4841 ;;      Totals:         0       0       0       0
  4842 ;;Total ram usage:        0 bytes
  4843 ;; Hardware stack levels used:    1
  4844 ;; Hardware stack levels required when called:    4
  4845 ;; This function calls:
  4846 ;;		Nothing
  4847 ;; This function is called by:
  4848 ;;		_i2c_fw_write_and_read
  4849 ;;		_i2c_fw_write_only
  4850 ;; This function uses a non-reentrant model
  4851 ;;
  4852                           
  4853                           
  4854                           ;psect for function _i2c_fw_stop
  4855  0EC1                     _i2c_fw_stop:	
  4856                           
  4857                           ;i2c_fw_master.c: 41: (GIE = 0);
  4858                           
  4859                           ;incstack = 0
  4860                           ; Regs used in _i2c_fw_stop: []
  4861  0EC1  138B               	bcf	11,7	;volatile
  4862                           
  4863                           ;i2c_fw_master.c: 43: TRISBbits.TRISB4 = 0;
  4864  0EC2  1683               	bsf	3,5	;RP0=1, select bank1
  4865  0EC3  1303               	bcf	3,6	;RP1=0, select bank1
  4866  0EC4  1206               	bcf	6,4	;volatile
  4867                           
  4868                           ;i2c_fw_master.c: 44: TRISBbits.TRISB6 = 1;
  4869  0EC5  1706               	bsf	6,6	;volatile
  4870                           
  4871                           ;i2c_fw_master.c: 45: _delay((unsigned long)((1)*(8000000/4000000.0)));
  4872  0EC6  2EC7               	nop2	;2 cycle nop
  4873                           
  4874                           ;i2c_fw_master.c: 47: TRISBbits.TRISB4 = 1;
  4875  0EC7  1683               	bsf	3,5	;RP0=1, select bank1
  4876  0EC8  1303               	bcf	3,6	;RP1=0, select bank1
  4877  0EC9  1606               	bsf	6,4	;volatile
  4878                           
  4879                           ;i2c_fw_master.c: 48: _delay((unsigned long)((1)*(8000000/4000000.0)));
  4880  0ECA  2ECB               	nop2	;2 cycle nop
  4881                           
  4882                           ;i2c_fw_master.c: 49: (GIE = 1);
  4883  0ECB  178B               	bsf	11,7	;volatile
  4884  0ECC  0008               	return
  4885  0ECD                     __end_of_i2c_fw_stop:	
  4886                           
  4887                           	psect	text23
  4888  0EB5                     __ptext23:	
  4889 ;; *************** function _i2c_fw_start *****************
  4890 ;; Defined at:
  4891 ;;		line 25 in file "i2c_fw_master.c"
  4892 ;; Parameters:    Size  Location     Type
  4893 ;;		None
  4894 ;; Auto vars:     Size  Location     Type
  4895 ;;		None
  4896 ;; Return value:  Size  Location     Type
  4897 ;;		None               void
  4898 ;; Registers used:
  4899 ;;		None
  4900 ;; Tracked objects:
  4901 ;;		On entry : 0/0
  4902 ;;		On exit  : 0/0
  4903 ;;		Unchanged: 0/0
  4904 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4905 ;;      Params:         0       0       0       0
  4906 ;;      Locals:         0       0       0       0
  4907 ;;      Temps:          0       0       0       0
  4908 ;;      Totals:         0       0       0       0
  4909 ;;Total ram usage:        0 bytes
  4910 ;; Hardware stack levels used:    1
  4911 ;; Hardware stack levels required when called:    4
  4912 ;; This function calls:
  4913 ;;		Nothing
  4914 ;; This function is called by:
  4915 ;;		_i2c_fw_write_and_read
  4916 ;;		_i2c_fw_write_only
  4917 ;; This function uses a non-reentrant model
  4918 ;;
  4919                           
  4920                           
  4921                           ;psect for function _i2c_fw_start
  4922  0EB5                     _i2c_fw_start:	
  4923                           
  4924                           ;i2c_fw_master.c: 27: (GIE = 0);
  4925                           
  4926                           ;incstack = 0
  4927                           ; Regs used in _i2c_fw_start: []
  4928  0EB5  138B               	bcf	11,7	;volatile
  4929                           
  4930                           ;i2c_fw_master.c: 29: TRISBbits.TRISB4 = 1;
  4931  0EB6  1683               	bsf	3,5	;RP0=1, select bank1
  4932  0EB7  1303               	bcf	3,6	;RP1=0, select bank1
  4933  0EB8  1606               	bsf	6,4	;volatile
  4934                           
  4935                           ;i2c_fw_master.c: 30: TRISBbits.TRISB6 = 1;
  4936  0EB9  1706               	bsf	6,6	;volatile
  4937                           
  4938                           ;i2c_fw_master.c: 32: TRISBbits.TRISB4 = 0;
  4939  0EBA  1206               	bcf	6,4	;volatile
  4940                           
  4941                           ;i2c_fw_master.c: 33: _delay((unsigned long)((1)*(8000000/4000000.0)));
  4942  0EBB  2EBC               	nop2	;2 cycle nop
  4943                           
  4944                           ;i2c_fw_master.c: 35: TRISBbits.TRISB6 = 0;
  4945  0EBC  1683               	bsf	3,5	;RP0=1, select bank1
  4946  0EBD  1303               	bcf	3,6	;RP1=0, select bank1
  4947  0EBE  1306               	bcf	6,6	;volatile
  4948                           
  4949                           ;i2c_fw_master.c: 36: (GIE = 1);
  4950  0EBF  178B               	bsf	11,7	;volatile
  4951  0EC0  0008               	return
  4952  0EC1                     __end_of_i2c_fw_start:	
  4953                           
  4954                           	psect	text24
  4955  0EA9                     __ptext24:	
  4956 ;; *************** function _i2c_fw_send_ack *****************
  4957 ;; Defined at:
  4958 ;;		line 87 in file "i2c_fw_master.c"
  4959 ;; Parameters:    Size  Location     Type
  4960 ;;		None
  4961 ;; Auto vars:     Size  Location     Type
  4962 ;;		None
  4963 ;; Return value:  Size  Location     Type
  4964 ;;		None               void
  4965 ;; Registers used:
  4966 ;;		None
  4967 ;; Tracked objects:
  4968 ;;		On entry : 0/0
  4969 ;;		On exit  : 0/0
  4970 ;;		Unchanged: 0/0
  4971 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4972 ;;      Params:         0       0       0       0
  4973 ;;      Locals:         0       0       0       0
  4974 ;;      Temps:          0       0       0       0
  4975 ;;      Totals:         0       0       0       0
  4976 ;;Total ram usage:        0 bytes
  4977 ;; Hardware stack levels used:    1
  4978 ;; Hardware stack levels required when called:    4
  4979 ;; This function calls:
  4980 ;;		Nothing
  4981 ;; This function is called by:
  4982 ;;		_i2c_fw_write_and_read
  4983 ;; This function uses a non-reentrant model
  4984 ;;
  4985                           
  4986                           
  4987                           ;psect for function _i2c_fw_send_ack
  4988  0EA9                     _i2c_fw_send_ack:	
  4989                           
  4990                           ;i2c_fw_master.c: 89: (GIE = 0);
  4991                           
  4992                           ;incstack = 0
  4993                           ; Regs used in _i2c_fw_send_ack: []
  4994  0EA9  138B               	bcf	11,7	;volatile
  4995                           
  4996                           ;i2c_fw_master.c: 91: TRISBbits.TRISB4 = 1;
  4997  0EAA  1683               	bsf	3,5	;RP0=1, select bank1
  4998  0EAB  1303               	bcf	3,6	;RP1=0, select bank1
  4999  0EAC  1606               	bsf	6,4	;volatile
  5000                           
  5001                           ;i2c_fw_master.c: 92: TRISBbits.TRISB6 = 0;
  5002  0EAD  1306               	bcf	6,6	;volatile
  5003                           
  5004                           ;i2c_fw_master.c: 96: TRISBbits.TRISB6 = 1;
  5005  0EAE  1706               	bsf	6,6	;volatile
  5006                           
  5007                           ;i2c_fw_master.c: 97: _delay((unsigned long)((1)*(8000000/4000000.0)));
  5008  0EAF  2EB0               	nop2	;2 cycle nop
  5009                           
  5010                           ;i2c_fw_master.c: 98: TRISBbits.TRISB6 = 0;
  5011  0EB0  1683               	bsf	3,5	;RP0=1, select bank1
  5012  0EB1  1303               	bcf	3,6	;RP1=0, select bank1
  5013  0EB2  1306               	bcf	6,6	;volatile
  5014                           
  5015                           ;i2c_fw_master.c: 99: (GIE = 1);
  5016  0EB3  178B               	bsf	11,7	;volatile
  5017  0EB4  0008               	return
  5018  0EB5                     __end_of_i2c_fw_send_ack:	
  5019                           
  5020                           	psect	text25
  5021  0ECD                     __ptext25:	
  5022 ;; *************** function _i2c_fw_repstart *****************
  5023 ;; Defined at:
  5024 ;;		line 52 in file "i2c_fw_master.c"
  5025 ;; Parameters:    Size  Location     Type
  5026 ;;		None
  5027 ;; Auto vars:     Size  Location     Type
  5028 ;;		None
  5029 ;; Return value:  Size  Location     Type
  5030 ;;		None               void
  5031 ;; Registers used:
  5032 ;;		None
  5033 ;; Tracked objects:
  5034 ;;		On entry : 0/0
  5035 ;;		On exit  : 0/0
  5036 ;;		Unchanged: 0/0
  5037 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5038 ;;      Params:         0       0       0       0
  5039 ;;      Locals:         0       0       0       0
  5040 ;;      Temps:          0       0       0       0
  5041 ;;      Totals:         0       0       0       0
  5042 ;;Total ram usage:        0 bytes
  5043 ;; Hardware stack levels used:    1
  5044 ;; Hardware stack levels required when called:    4
  5045 ;; This function calls:
  5046 ;;		Nothing
  5047 ;; This function is called by:
  5048 ;;		_i2c_fw_write_and_read
  5049 ;; This function uses a non-reentrant model
  5050 ;;
  5051                           
  5052                           
  5053                           ;psect for function _i2c_fw_repstart
  5054  0ECD                     _i2c_fw_repstart:	
  5055                           
  5056                           ;i2c_fw_master.c: 54: (GIE = 0);
  5057                           
  5058                           ;incstack = 0
  5059                           ; Regs used in _i2c_fw_repstart: []
  5060  0ECD  138B               	bcf	11,7	;volatile
  5061                           
  5062                           ;i2c_fw_master.c: 56: TRISBbits.TRISB4 = 1;
  5063  0ECE  1683               	bsf	3,5	;RP0=1, select bank1
  5064  0ECF  1303               	bcf	3,6	;RP1=0, select bank1
  5065  0ED0  1606               	bsf	6,4	;volatile
  5066                           
  5067                           ;i2c_fw_master.c: 57: TRISBbits.TRISB6 = 1;
  5068  0ED1  1706               	bsf	6,6	;volatile
  5069                           
  5070                           ;i2c_fw_master.c: 60: _delay((unsigned long)((1)*(8000000/4000000.0)));
  5071  0ED2  2ED3               	nop2	;2 cycle nop
  5072                           
  5073                           ;i2c_fw_master.c: 61: TRISBbits.TRISB4 = 0;
  5074  0ED3  1683               	bsf	3,5	;RP0=1, select bank1
  5075  0ED4  1303               	bcf	3,6	;RP1=0, select bank1
  5076  0ED5  1206               	bcf	6,4	;volatile
  5077                           
  5078                           ;i2c_fw_master.c: 62: _delay((unsigned long)((1)*(8000000/4000000.0)));
  5079  0ED6  2ED7               	nop2	;2 cycle nop
  5080                           
  5081                           ;i2c_fw_master.c: 63: TRISBbits.TRISB6 = 0;
  5082  0ED7  1683               	bsf	3,5	;RP0=1, select bank1
  5083  0ED8  1303               	bcf	3,6	;RP1=0, select bank1
  5084  0ED9  1306               	bcf	6,6	;volatile
  5085                           
  5086                           ;i2c_fw_master.c: 64: _delay((unsigned long)((1)*(8000000/4000000.0)));
  5087  0EDA  2EDB               	nop2	;2 cycle nop
  5088                           
  5089                           ;i2c_fw_master.c: 68: (GIE = 1);
  5090  0EDB  178B               	bsf	11,7	;volatile
  5091  0EDC  0008               	return
  5092  0EDD                     __end_of_i2c_fw_repstart:	
  5093                           
  5094                           	psect	text26
  5095  0EFF                     __ptext26:	
  5096 ;; *************** function _i2c_fw_read_status *****************
  5097 ;; Defined at:
  5098 ;;		line 71 in file "i2c_fw_master.c"
  5099 ;; Parameters:    Size  Location     Type
  5100 ;;		None
  5101 ;; Auto vars:     Size  Location     Type
  5102 ;;  ret             1    5[BANK0 ] unsigned char 
  5103 ;; Return value:  Size  Location     Type
  5104 ;;                  1    wreg      unsigned char 
  5105 ;; Registers used:
  5106 ;;		wreg, status,2
  5107 ;; Tracked objects:
  5108 ;;		On entry : 0/0
  5109 ;;		On exit  : 0/0
  5110 ;;		Unchanged: 0/0
  5111 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5112 ;;      Params:         0       0       0       0
  5113 ;;      Locals:         0       1       0       0
  5114 ;;      Temps:          0       0       0       0
  5115 ;;      Totals:         0       1       0       0
  5116 ;;Total ram usage:        1 bytes
  5117 ;; Hardware stack levels used:    1
  5118 ;; Hardware stack levels required when called:    4
  5119 ;; This function calls:
  5120 ;;		Nothing
  5121 ;; This function is called by:
  5122 ;;		_i2c_fw_write_and_read
  5123 ;;		_i2c_fw_write_only
  5124 ;; This function uses a non-reentrant model
  5125 ;;
  5126                           
  5127                           
  5128                           ;psect for function _i2c_fw_read_status
  5129  0EFF                     _i2c_fw_read_status:	
  5130                           
  5131                           ;i2c_fw_master.c: 73: unsigned char ret = 1;
  5132                           
  5133                           ;incstack = 0
  5134                           ; Regs used in _i2c_fw_read_status: [wreg+status,2]
  5135  0EFF  1283               	bcf	3,5	;RP0=0, select bank0
  5136  0F00  1303               	bcf	3,6	;RP1=0, select bank0
  5137  0F01  01A5               	clrf	i2c_fw_read_status@ret
  5138  0F02  0AA5               	incf	i2c_fw_read_status@ret,f
  5139                           
  5140                           ;i2c_fw_master.c: 75: (GIE = 0);
  5141  0F03  138B               	bcf	11,7	;volatile
  5142                           
  5143                           ;i2c_fw_master.c: 77: TRISBbits.TRISB4 = 1;
  5144  0F04  1683               	bsf	3,5	;RP0=1, select bank1
  5145  0F05  1303               	bcf	3,6	;RP1=0, select bank1
  5146  0F06  1606               	bsf	6,4	;volatile
  5147                           
  5148                           ;i2c_fw_master.c: 78: TRISBbits.TRISB6 = 1;
  5149  0F07  1706               	bsf	6,6	;volatile
  5150                           
  5151                           ;i2c_fw_master.c: 80: ret = PORTBbits.RB4;
  5152  0F08  3000               	movlw	0
  5153  0F09  1283               	bcf	3,5	;RP0=0, select bank0
  5154  0F0A  1303               	bcf	3,6	;RP1=0, select bank0
  5155  0F0B  1A06               	btfsc	6,4	;volatile
  5156  0F0C  3001               	movlw	1
  5157  0F0D  00A5               	movwf	i2c_fw_read_status@ret
  5158                           
  5159                           ;i2c_fw_master.c: 81: _delay((unsigned long)((1)*(8000000/4000000.0)));
  5160  0F0E  2F0F               	nop2	;2 cycle nop
  5161                           
  5162                           ;i2c_fw_master.c: 82: TRISBbits.TRISB6 = 0;
  5163  0F0F  1683               	bsf	3,5	;RP0=1, select bank1
  5164  0F10  1303               	bcf	3,6	;RP1=0, select bank1
  5165  0F11  1306               	bcf	6,6	;volatile
  5166                           
  5167                           ;i2c_fw_master.c: 83: (GIE = 1);
  5168  0F12  178B               	bsf	11,7	;volatile
  5169  0F13  0008               	return
  5170  0F14                     __end_of_i2c_fw_read_status:	
  5171                           ;i2c_fw_master.c: 84: return ret;
  5172                           ;	Return value of _i2c_fw_read_status is never used
  5173                           
  5174                           
  5175                           	psect	text27
  5176  0742                     __ptext27:	
  5177 ;; *************** function _i2c_fw_read_byte *****************
  5178 ;; Defined at:
  5179 ;;		line 145 in file "i2c_fw_master.c"
  5180 ;; Parameters:    Size  Location     Type
  5181 ;;		None
  5182 ;; Auto vars:     Size  Location     Type
  5183 ;;  i               1    8[BANK0 ] unsigned char 
  5184 ;;  data            1    7[BANK0 ] unsigned char 
  5185 ;; Return value:  Size  Location     Type
  5186 ;;                  1    wreg      unsigned char 
  5187 ;; Registers used:
  5188 ;;		wreg, status,2, status,0
  5189 ;; Tracked objects:
  5190 ;;		On entry : 0/0
  5191 ;;		On exit  : 0/0
  5192 ;;		Unchanged: 0/0
  5193 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5194 ;;      Params:         0       0       0       0
  5195 ;;      Locals:         0       2       0       0
  5196 ;;      Temps:          0       2       0       0
  5197 ;;      Totals:         0       4       0       0
  5198 ;;Total ram usage:        4 bytes
  5199 ;; Hardware stack levels used:    1
  5200 ;; Hardware stack levels required when called:    4
  5201 ;; This function calls:
  5202 ;;		Nothing
  5203 ;; This function is called by:
  5204 ;;		_i2c_fw_write_and_read
  5205 ;; This function uses a non-reentrant model
  5206 ;;
  5207                           
  5208                           
  5209                           ;psect for function _i2c_fw_read_byte
  5210  0742                     _i2c_fw_read_byte:	
  5211                           
  5212                           ;i2c_fw_master.c: 147: unsigned char i, data = 0;
  5213                           
  5214                           ;incstack = 0
  5215                           ; Regs used in _i2c_fw_read_byte: [wreg+status,2+status,0]
  5216  0742  1283               	bcf	3,5	;RP0=0, select bank0
  5217  0743  1303               	bcf	3,6	;RP1=0, select bank0
  5218  0744  01A7               	clrf	i2c_fw_read_byte@data
  5219                           
  5220                           ;i2c_fw_master.c: 149: (GIE = 0);
  5221  0745  138B               	bcf	11,7	;volatile
  5222                           
  5223                           ;i2c_fw_master.c: 152: TRISBbits.TRISB6 = 0;
  5224  0746  1683               	bsf	3,5	;RP0=1, select bank1
  5225  0747  1303               	bcf	3,6	;RP1=0, select bank1
  5226  0748  1306               	bcf	6,6	;volatile
  5227                           
  5228                           ;i2c_fw_master.c: 153: TRISBbits.TRISB4 = 1;
  5229  0749  1606               	bsf	6,4	;volatile
  5230                           
  5231                           ;i2c_fw_master.c: 156: for(i=0;i<8;i++){
  5232  074A  1283               	bcf	3,5	;RP0=0, select bank0
  5233  074B  1303               	bcf	3,6	;RP1=0, select bank0
  5234  074C  01A8               	clrf	i2c_fw_read_byte@i
  5235  074D  3008               	movlw	8
  5236  074E  0228               	subwf	i2c_fw_read_byte@i,w
  5237  074F  1803               	btfsc	3,0
  5238  0750  2F76               	goto	l288
  5239  0751                     l287:	
  5240                           
  5241                           ;i2c_fw_master.c: 157: TRISBbits.TRISB6 = 1;
  5242  0751  1683               	bsf	3,5	;RP0=1, select bank1
  5243  0752  1303               	bcf	3,6	;RP1=0, select bank1
  5244  0753  1706               	bsf	6,6	;volatile
  5245                           
  5246                           ;i2c_fw_master.c: 159: if(PORTBbits.RB4)
  5247  0754  1283               	bcf	3,5	;RP0=0, select bank0
  5248  0755  1303               	bcf	3,6	;RP1=0, select bank0
  5249  0756  1E06               	btfss	6,4	;volatile
  5250  0757  2F69               	goto	l1638
  5251                           
  5252                           ;i2c_fw_master.c: 160: data = data | (1 << (7 - i));
  5253  0758  3001               	movlw	1
  5254  0759  00A5               	movwf	??_i2c_fw_read_byte
  5255  075A  0328               	decf	i2c_fw_read_byte@i,w
  5256  075B  3AFF               	xorlw	255
  5257  075C  3E07               	addlw	7
  5258  075D  3E01               	addlw	1
  5259  075E  2F61               	goto	u654
  5260  075F                     u655:	
  5261  075F  1003               	clrc
  5262  0760  0DA5               	rlf	??_i2c_fw_read_byte,f
  5263  0761                     u654:	
  5264  0761  3EFF               	addlw	-1
  5265  0762  1D03               	skipz
  5266  0763  2F5F               	goto	u655
  5267  0764  0825               	movf	??_i2c_fw_read_byte,w
  5268  0765  0427               	iorwf	i2c_fw_read_byte@data,w
  5269  0766  00A6               	movwf	??_i2c_fw_read_byte+1
  5270  0767  0826               	movf	??_i2c_fw_read_byte+1,w
  5271  0768  00A7               	movwf	i2c_fw_read_byte@data
  5272  0769                     l1638:	
  5273                           
  5274                           ;i2c_fw_master.c: 162: TRISBbits.TRISB6 = 0;
  5275  0769  1683               	bsf	3,5	;RP0=1, select bank1
  5276  076A  1303               	bcf	3,6	;RP1=0, select bank1
  5277  076B  1306               	bcf	6,6	;volatile
  5278  076C  3001               	movlw	1
  5279  076D  1283               	bcf	3,5	;RP0=0, select bank0
  5280  076E  1303               	bcf	3,6	;RP1=0, select bank0
  5281  076F  00A5               	movwf	??_i2c_fw_read_byte
  5282  0770  0825               	movf	??_i2c_fw_read_byte,w
  5283  0771  07A8               	addwf	i2c_fw_read_byte@i,f
  5284  0772  3008               	movlw	8
  5285  0773  0228               	subwf	i2c_fw_read_byte@i,w
  5286  0774  1C03               	skipc
  5287  0775  2F51               	goto	l287
  5288  0776                     l288:	
  5289                           
  5290                           ;i2c_fw_master.c: 164: }
  5291                           ;i2c_fw_master.c: 166: (GIE = 1);
  5292  0776  178B               	bsf	11,7	;volatile
  5293                           
  5294                           ;i2c_fw_master.c: 168: return data;
  5295  0777  0827               	movf	i2c_fw_read_byte@data,w
  5296  0778  0008               	return
  5297  0779                     __end_of_i2c_fw_read_byte:	
  5298                           
  5299                           	psect	text28
  5300  0F8C                     __ptext28:	
  5301 ;; *************** function _isr *****************
  5302 ;; Defined at:
  5303 ;;		line 49 in file "main.c"
  5304 ;; Parameters:    Size  Location     Type
  5305 ;;		None
  5306 ;; Auto vars:     Size  Location     Type
  5307 ;;		None
  5308 ;; Return value:  Size  Location     Type
  5309 ;;		None               void
  5310 ;; Registers used:
  5311 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5312 ;; Tracked objects:
  5313 ;;		On entry : 0/0
  5314 ;;		On exit  : 0/0
  5315 ;;		Unchanged: 0/0
  5316 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5317 ;;      Params:         0       0       0       0
  5318 ;;      Locals:         0       0       0       0
  5319 ;;      Temps:          0       5       0       0
  5320 ;;      Totals:         0       5       0       0
  5321 ;;Total ram usage:        5 bytes
  5322 ;; Hardware stack levels used:    1
  5323 ;; Hardware stack levels required when called:    3
  5324 ;; This function calls:
  5325 ;;		_tx_send_data
  5326 ;; This function is called by:
  5327 ;;		Interrupt level 1
  5328 ;; This function uses a non-reentrant model
  5329 ;;
  5330                           
  5331                           
  5332                           ;psect for function _isr
  5333  0F8C                     _isr:	
  5334                           
  5335                           ;main.c: 54: if(PIR1bits.TMR1IF){
  5336  0F8C  1C0C               	btfss	12,0	;volatile
  5337  0F8D  2FA2               	goto	i1l159
  5338                           
  5339                           ;main.c: 55: scale++;
  5340  0F8E  3001               	movlw	1
  5341  0F8F  00A0               	movwf	??_isr
  5342  0F90  0820               	movf	??_isr,w
  5343  0F91  07FC               	addwf	_scale,f
  5344                           
  5345                           ;main.c: 57: if( scale == 20 ){
  5346  0F92  3014               	movlw	20
  5347  0F93  067C               	xorwf	_scale,w
  5348  0F94  1D03               	btfss	3,2
  5349  0F95  2F9F               	goto	i1l2138
  5350                           
  5351                           ;main.c: 58: tx_send_data(40,data);
  5352  0F96  303A               	movlw	(low (_data| (0+256)))& (0+255)
  5353  0F97  00A0               	movwf	??_isr
  5354  0F98  0820               	movf	??_isr,w
  5355  0F99  00F6               	movwf	tx_send_data@data
  5356  0F9A  3028               	movlw	40
  5357  0F9B  118A  263C  158A   	fcall	_tx_send_data
  5358                           
  5359                           ;main.c: 59: scale = 0;
  5360  0F9E  01FC               	clrf	_scale
  5361  0F9F                     i1l2138:	
  5362                           
  5363                           ;main.c: 60: }
  5364                           ;main.c: 63: PIR1bits.TMR1IF = 0;
  5365  0F9F  1283               	bcf	3,5	;RP0=0, select bank0
  5366  0FA0  1303               	bcf	3,6	;RP1=0, select bank0
  5367  0FA1  100C               	bcf	12,0	;volatile
  5368  0FA2                     i1l159:	
  5369  0FA2  0824               	movf	??_isr+4,w
  5370  0FA3  00FF               	movwf	127
  5371  0FA4  0823               	movf	??_isr+3,w
  5372  0FA5  008A               	movwf	10
  5373  0FA6  0822               	movf	??_isr+2,w
  5374  0FA7  0084               	movwf	4
  5375  0FA8  0E21               	swapf	(??_isr+1)^0,w
  5376  0FA9  0083               	movwf	3
  5377  0FAA  0EFE               	swapf	126,f
  5378  0FAB  0E7E               	swapf	126,w
  5379  0FAC  0009               	retfie
  5380  0FAD                     __end_of_isr:	
  5381                           
  5382                           	psect	intentry
  5383  0004                     __pintentry:	
  5384                           ;incstack = 0
  5385                           ; Regs used in _isr: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5386                           
  5387  0004                     interrupt_function:	
  5388  007E                     saved_w	set	btemp
  5389  0004  00FE               	movwf	btemp
  5390  0005  0E03               	swapf	3,w
  5391  0006  1283               	bcf	3,5	;RP0=0, select bank0
  5392  0007  1303               	bcf	3,6	;RP1=0, select bank0
  5393  0008  00A1               	movwf	??_isr+1
  5394  0009  0804               	movf	4,w
  5395  000A  00A2               	movwf	??_isr+2
  5396  000B  080A               	movf	10,w
  5397  000C  00A3               	movwf	??_isr+3
  5398  000D  087F               	movf	btemp+1,w
  5399  000E  00A4               	movwf	??_isr+4
  5400  000F  158A  2F8C         	ljmp	_isr
  5401                           
  5402                           	psect	text29
  5403  063C                     __ptext29:	
  5404 ;; *************** function _tx_send_data *****************
  5405 ;; Defined at:
  5406 ;;		line 76 in file "wl_tx.c"
  5407 ;; Parameters:    Size  Location     Type
  5408 ;;  length          1    wreg     unsigned char 
  5409 ;;  data            1    6[COMMON] PTR unsigned char 
  5410 ;;		 -> data(48), 
  5411 ;; Auto vars:     Size  Location     Type
  5412 ;;  length          1    9[COMMON] unsigned char 
  5413 ;;  i               1   10[COMMON] unsigned char 
  5414 ;;  checksum        1    8[COMMON] unsigned char 
  5415 ;; Return value:  Size  Location     Type
  5416 ;;                  1    wreg      unsigned char 
  5417 ;; Registers used:
  5418 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5419 ;; Tracked objects:
  5420 ;;		On entry : 0/0
  5421 ;;		On exit  : 0/0
  5422 ;;		Unchanged: 0/0
  5423 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5424 ;;      Params:         1       0       0       0
  5425 ;;      Locals:         3       0       0       0
  5426 ;;      Temps:          1       0       0       0
  5427 ;;      Totals:         5       0       0       0
  5428 ;;Total ram usage:        5 bytes
  5429 ;; Hardware stack levels used:    1
  5430 ;; Hardware stack levels required when called:    2
  5431 ;; This function calls:
  5432 ;;		_sendbit
  5433 ;;		_sendbyte
  5434 ;; This function is called by:
  5435 ;;		_isr
  5436 ;; This function uses a non-reentrant model
  5437 ;;
  5438                           
  5439                           
  5440                           ;psect for function _tx_send_data
  5441  063C                     _tx_send_data:	
  5442                           
  5443                           ;incstack = 0
  5444                           ; Regs used in _tx_send_data: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5445                           ;tx_send_data@length stored from wreg
  5446  063C  00F9               	movwf	tx_send_data@length
  5447                           
  5448                           ;wl_tx.c: 78: unsigned char i, checksum = 0;
  5449  063D  01F8               	clrf	tx_send_data@checksum
  5450                           
  5451                           ;wl_tx.c: 80: for(i=0;i<14;i++){
  5452  063E  01FA               	clrf	tx_send_data@i
  5453  063F  300E               	movlw	14
  5454  0640  027A               	subwf	tx_send_data@i,w
  5455  0641  1803               	btfsc	3,0
  5456  0642  2E4F               	goto	i1l1972
  5457  0643                     i1l1966:	
  5458                           
  5459                           ;wl_tx.c: 81: sendbit(0);
  5460  0643  3000               	movlw	0
  5461  0644  158A  2756  118A   	fcall	_sendbit
  5462  0647  3001               	movlw	1
  5463  0648  00F7               	movwf	??_tx_send_data
  5464  0649  0877               	movf	??_tx_send_data,w
  5465  064A  07FA               	addwf	tx_send_data@i,f
  5466  064B  300E               	movlw	14
  5467  064C  027A               	subwf	tx_send_data@i,w
  5468  064D  1C03               	skipc
  5469  064E  2E43               	goto	i1l1966
  5470  064F                     i1l1972:	
  5471                           
  5472                           ;wl_tx.c: 82: }
  5473                           ;wl_tx.c: 84: sendbit(1);
  5474  064F  3001               	movlw	1
  5475  0650  158A  2756  118A   	fcall	_sendbit
  5476                           
  5477                           ;wl_tx.c: 86: _delay((unsigned long)((10)*(8000000/4000000.0)));
  5478  0653  3006               	movlw	6
  5479  0654  00F7               	movwf	??_tx_send_data
  5480  0655                     u137_27:	
  5481  0655  0BF7               	decfsz	??_tx_send_data,f
  5482  0656  2E55               	goto	u137_27
  5483  0657  0000               	nop
  5484                           
  5485                           ;wl_tx.c: 88: sendbyte(0x55);
  5486  0658  3055               	movlw	85
  5487  0659  158A  2714  118A   	fcall	_sendbyte
  5488                           
  5489                           ;wl_tx.c: 89: sendbyte(0x01);
  5490  065C  3001               	movlw	1
  5491  065D  158A  2714  118A   	fcall	_sendbyte
  5492                           
  5493                           ;wl_tx.c: 90: sendbyte(length);
  5494  0660  0879               	movf	tx_send_data@length,w
  5495  0661  158A  2714  118A   	fcall	_sendbyte
  5496                           
  5497                           ;wl_tx.c: 91: sendbyte(0x77);
  5498  0664  3077               	movlw	119
  5499  0665  158A  2714  118A   	fcall	_sendbyte
  5500                           
  5501                           ;wl_tx.c: 93: for(i=0;i<length;i++){
  5502  0668  01FA               	clrf	tx_send_data@i
  5503  0669                     i1l1990:	
  5504  0669  0879               	movf	tx_send_data@length,w
  5505  066A  027A               	subwf	tx_send_data@i,w
  5506  066B  1803               	btfsc	3,0
  5507  066C  2E7C               	goto	i1l1992
  5508                           
  5509                           ;wl_tx.c: 94: sendbyte( *(data + i) );
  5510  066D  087A               	movf	tx_send_data@i,w
  5511  066E  0776               	addwf	tx_send_data@data,w
  5512  066F  00F7               	movwf	??_tx_send_data
  5513  0670  0877               	movf	??_tx_send_data,w
  5514  0671  0084               	movwf	4
  5515  0672  1783               	bsf	3,7	;select IRP bank2
  5516  0673  0800               	movf	0,w
  5517  0674  158A  2714  118A   	fcall	_sendbyte
  5518  0677  3001               	movlw	1
  5519  0678  00F7               	movwf	??_tx_send_data
  5520  0679  0877               	movf	??_tx_send_data,w
  5521  067A  07FA               	addwf	tx_send_data@i,f
  5522  067B  2E69               	goto	i1l1990
  5523  067C                     i1l1992:	
  5524                           
  5525                           ;wl_tx.c: 96: }
  5526                           ;wl_tx.c: 101: sendbit(0);
  5527  067C  3000               	movlw	0
  5528  067D  158A  2756  118A   	fcall	_sendbit
  5529                           
  5530                           ;wl_tx.c: 102: sendbit(0);
  5531  0680  3000               	movlw	0
  5532  0681  158A  2756  118A   	fcall	_sendbit
  5533                           
  5534                           ;wl_tx.c: 104: _delay((unsigned long)((100)*(8000000/4000000.0)));
  5535  0684  3042               	movlw	66
  5536  0685  00F7               	movwf	??_tx_send_data
  5537  0686                     u138_27:	
  5538  0686  0BF7               	decfsz	??_tx_send_data,f
  5539  0687  2E86               	goto	u138_27
  5540  0688  0000               	nop
  5541  0689  0008               	return
  5542  068A                     __end_of_tx_send_data:	
  5543                           ;wl_tx.c: 106: return 0;
  5544                           ;	Return value of _tx_send_data is never used
  5545                           
  5546                           
  5547                           	psect	text30
  5548  0F14                     __ptext30:	
  5549 ;; *************** function _sendbyte *****************
  5550 ;; Defined at:
  5551 ;;		line 22 in file "wl_tx.c"
  5552 ;; Parameters:    Size  Location     Type
  5553 ;;  data            1    wreg     unsigned char 
  5554 ;; Auto vars:     Size  Location     Type
  5555 ;;  data            1    4[COMMON] unsigned char 
  5556 ;;  i               1    5[COMMON] unsigned char 
  5557 ;; Return value:  Size  Location     Type
  5558 ;;		None               void
  5559 ;; Registers used:
  5560 ;;		wreg, status,2, status,0, pclath, cstack
  5561 ;; Tracked objects:
  5562 ;;		On entry : 0/0
  5563 ;;		On exit  : 0/0
  5564 ;;		Unchanged: 0/0
  5565 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5566 ;;      Params:         0       0       0       0
  5567 ;;      Locals:         2       0       0       0
  5568 ;;      Temps:          2       0       0       0
  5569 ;;      Totals:         4       0       0       0
  5570 ;;Total ram usage:        4 bytes
  5571 ;; Hardware stack levels used:    1
  5572 ;; Hardware stack levels required when called:    1
  5573 ;; This function calls:
  5574 ;;		_sendbit
  5575 ;; This function is called by:
  5576 ;;		_tx_send_data
  5577 ;; This function uses a non-reentrant model
  5578 ;;
  5579                           
  5580                           
  5581                           ;psect for function _sendbyte
  5582  0F14                     _sendbyte:	
  5583                           
  5584                           ;incstack = 0
  5585                           ; Regs used in _sendbyte: [wreg+status,2+status,0+pclath+cstack]
  5586                           ;sendbyte@data stored from wreg
  5587  0F14  00F4               	movwf	sendbyte@data
  5588                           
  5589                           ;wl_tx.c: 24: unsigned char i;
  5590                           ;wl_tx.c: 26: for(i=0;i<8;i++){
  5591  0F15  01F5               	clrf	sendbyte@i
  5592  0F16                     L2:	
  5593  0F16  3008               	movlw	8
  5594  0F17  0275               	subwf	sendbyte@i,w
  5595  0F18  1803               	btfsc	3,0
  5596  0F19  0008               	return
  5597                           
  5598                           ;wl_tx.c: 31: sendbit((data & 0x80));
  5599  0F1A  0874               	movf	sendbyte@data,w
  5600  0F1B  3980               	andlw	128
  5601  0F1C  158A  2756  158A   	fcall	_sendbit
  5602                           
  5603                           ;wl_tx.c: 32: data = data << 1;
  5604  0F1F  0874               	movf	sendbyte@data,w
  5605  0F20  00F2               	movwf	??_sendbyte
  5606  0F21  0772               	addwf	??_sendbyte,w
  5607  0F22  00F3               	movwf	??_sendbyte+1
  5608  0F23  0873               	movf	??_sendbyte+1,w
  5609  0F24  00F4               	movwf	sendbyte@data
  5610  0F25  3001               	movlw	1
  5611  0F26  00F2               	movwf	??_sendbyte
  5612  0F27  0872               	movf	??_sendbyte,w
  5613  0F28  07F5               	addwf	sendbyte@i,f
  5614  0F29  2F16               	goto	L2
  5615  0F2A                     __end_of_sendbyte:	
  5616                           
  5617                           	psect	text31
  5618  0F56                     __ptext31:	
  5619 ;; *************** function _sendbit *****************
  5620 ;; Defined at:
  5621 ;;		line 11 in file "wl_tx.c"
  5622 ;; Parameters:    Size  Location     Type
  5623 ;;  bt              1    wreg     unsigned char 
  5624 ;; Auto vars:     Size  Location     Type
  5625 ;;  bt              1    1[COMMON] unsigned char 
  5626 ;; Return value:  Size  Location     Type
  5627 ;;		None               void
  5628 ;; Registers used:
  5629 ;;		wreg, status,2, status,0
  5630 ;; Tracked objects:
  5631 ;;		On entry : 0/0
  5632 ;;		On exit  : 0/0
  5633 ;;		Unchanged: 0/0
  5634 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5635 ;;      Params:         0       0       0       0
  5636 ;;      Locals:         1       0       0       0
  5637 ;;      Temps:          1       0       0       0
  5638 ;;      Totals:         2       0       0       0
  5639 ;;Total ram usage:        2 bytes
  5640 ;; Hardware stack levels used:    1
  5641 ;; This function calls:
  5642 ;;		Nothing
  5643 ;; This function is called by:
  5644 ;;		_sendbyte
  5645 ;;		_tx_send_data
  5646 ;; This function uses a non-reentrant model
  5647 ;;
  5648                           
  5649                           
  5650                           ;psect for function _sendbit
  5651  0F56                     _sendbit:	
  5652                           
  5653                           ;incstack = 0
  5654                           ; Regs used in _sendbit: [wreg+status,2+status,0]
  5655                           ;sendbit@bt stored from wreg
  5656  0F56  00F1               	movwf	sendbit@bt
  5657                           
  5658                           ;wl_tx.c: 14: PORTCbits.RC7 = 1;
  5659  0F57  1283               	bcf	3,5	;RP0=0, select bank0
  5660  0F58  1303               	bcf	3,6	;RP1=0, select bank0
  5661  0F59  1787               	bsf	7,7	;volatile
  5662                           
  5663                           ;wl_tx.c: 15: _delay((unsigned long)((80)*(8000000/4000000.0)));
  5664  0F5A  3035               	movlw	53
  5665  0F5B  00F0               	movwf	??_sendbit
  5666  0F5C                     u139_27:	
  5667  0F5C  0BF0               	decfsz	??_sendbit,f
  5668  0F5D  2F5C               	goto	u139_27
  5669                           
  5670                           ;wl_tx.c: 16: PORTCbits.RC7 = 0;
  5671  0F5E  1283               	bcf	3,5	;RP0=0, select bank0
  5672  0F5F  1303               	bcf	3,6	;RP1=0, select bank0
  5673  0F60  1387               	bcf	7,7	;volatile
  5674                           
  5675                           ;wl_tx.c: 17: _delay((unsigned long)((100)*(8000000/4000000.0)));
  5676  0F61  3042               	movlw	66
  5677  0F62  00F0               	movwf	??_sendbit
  5678  0F63                     u140_27:	
  5679  0F63  0BF0               	decfsz	??_sendbit,f
  5680  0F64  2F63               	goto	u140_27
  5681  0F65  0000               	nop
  5682                           
  5683                           ;wl_tx.c: 18: if(bt > 0)
  5684  0F66  0871               	movf	sendbit@bt,w
  5685  0F67  1903               	btfsc	3,2
  5686  0F68  0008               	return
  5687                           
  5688                           ;wl_tx.c: 19: _delay((unsigned long)((50)*(8000000/4000000.0)));
  5689  0F69  3021               	movlw	33
  5690  0F6A  00F0               	movwf	??_sendbit
  5691  0F6B                     u141_27:	
  5692  0F6B  0BF0               	decfsz	??_sendbit,f
  5693  0F6C  2F6B               	goto	u141_27
  5694  0F6D  0008               	return
  5695  0F6E                     __end_of_sendbit:	
  5696  007E                     btemp	set	126	;btemp
  5697  007E                     wtemp	set	126
  5698  007E                     wtemp0	set	126
  5699  0080                     wtemp1	set	128
  5700  0082                     wtemp2	set	130
  5701  0084                     wtemp3	set	132
  5702  0086                     wtemp4	set	134
  5703  0088                     wtemp5	set	136
  5704  007F                     wtemp6	set	127
  5705  007E                     ttemp	set	126
  5706  007E                     ttemp0	set	126
  5707  0081                     ttemp1	set	129
  5708  0084                     ttemp2	set	132
  5709  0087                     ttemp3	set	135
  5710  007F                     ttemp4	set	127
  5711  007E                     ltemp	set	126
  5712  007E                     ltemp0	set	126
  5713  0082                     ltemp1	set	130
  5714  0086                     ltemp2	set	134
  5715  0080                     ltemp3	set	128


Data Sizes:
    Strings     0
    Constant    0
    Data        22
    BSS         81
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     11      13
    BANK0            80     48      75
    BANK1            80     64      64
    BANK2            80      0      74

Pointer List with Targets:

    tx_send_data@data	PTR unsigned char  size(1) Largest target is 48
		 -> data(BANK2[48]), 

    bmp180_get_up@device	PTR struct bmp180_t size(1) Largest target is 26
		 -> main@dev(BANK1[26]), 

    bmp180_get_ut@device	PTR struct bmp180_t size(1) Largest target is 26
		 -> main@dev(BANK1[26]), 

    bmp180_read_params@device	PTR struct bmp180_t size(1) Largest target is 26
		 -> main@dev(BANK1[26]), 

    bmp180_init@device	PTR struct bmp180_t size(1) Largest target is 26
		 -> main@dev(BANK1[26]), 

    i2c_fw_write_and_read@data	PTR unsigned char  size(1) Largest target is 22
		 -> bmp180_get_up@data(BANK0[3]), bmp180_get_ut@data(BANK0[2]), bmp180_read_params@data(BANK0[22]), bmp180_init@data(BANK0[1]), 

    ds18b20_start_convert@dev	PTR struct ds18b20 size(1) Largest target is 22
		 -> main@t1(BANK1[22]), 

    ds18b20_read_scratch@dev	PTR struct ds18b20 size(1) Largest target is 22
		 -> main@t1(BANK1[22]), 

    dht22_read@s	PTR struct dht22 size(1) Largest target is 5
		 -> main@d1(BANK1[5]), 

    dht22_read@ptr	PTR unsigned char  size(1) Largest target is 5
		 -> d1.rhi(COMMON[1]), main@d1(BANK1[5]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    _isr->_tx_send_data
    _tx_send_data->_sendbyte
    _sendbyte->_sendbit

Critical Paths under _main in BANK0

    _main->_bmp180_read_params
    _ds18b20_start_convert->_ow_write_byte
    _ds18b20_read_scratch->_ow_write_byte
    _bmp180_read_params->_i2c_fw_write_and_read
    _bmp180_init->_i2c_fw_write_and_read
    _bmp180_get_ut->_i2c_fw_write_and_read
    _bmp180_get_up->_i2c_fw_write_and_read
    _i2c_fw_write_only->_i2c_fw_write_byte
    _i2c_fw_write_and_read->_i2c_fw_read_byte
    _i2c_fw_write_and_read->_i2c_fw_write_byte

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                68    64      4   13977
                                             44 BANK0      4     0      4
                                              0 BANK1     64    64      0
                      _bmp180_get_up
                      _bmp180_get_ut
                        _bmp180_init
                 _bmp180_read_params
                         _dht22_init
                         _dht22_read
                       _ds18b20_init
               _ds18b20_read_scratch
              _ds18b20_start_convert
                        _i2c_fw_init
                  _init_tx_interrupt
                           _pic_init
                            _tx_init
                          _uart_init
 ---------------------------------------------------------------------------------
 (1) _uart_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _tx_init                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _pic_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_tx_interrupt                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _i2c_fw_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ds18b20_start_convert                                5     5      0     250
                                              9 BANK0      5     5      0
                           _ow_reset
                      _ow_write_byte
 ---------------------------------------------------------------------------------
 (1) _ds18b20_read_scratch                                 5     5      0     937
                                              9 BANK0      5     5      0
                       _ow_read_byte
                           _ow_reset
                      _ow_write_byte
 ---------------------------------------------------------------------------------
 (2) _ow_write_byte                                        4     4      0      91
                                              5 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (2) _ow_reset                                             2     2      0       9
                                              5 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _ow_read_byte                                         3     3      0      93
                                              5 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _ds18b20_init                                         0     0      0       0
                            _ow_init
 ---------------------------------------------------------------------------------
 (2) _ow_init                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _dht22_read                                          10    10      0     433
                                              5 BANK0     10    10      0
 ---------------------------------------------------------------------------------
 (1) _dht22_init                                           3     3      0       0
                                              5 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _bmp180_read_params                                  28    28      0    2628
                                             16 BANK0     28    28      0
              _i2c_fw_write_and_read
 ---------------------------------------------------------------------------------
 (1) _bmp180_init                                          5     5      0    1812
                                             16 BANK0      5     5      0
              _i2c_fw_write_and_read
 ---------------------------------------------------------------------------------
 (1) _bmp180_get_ut                                        9     7      2    2321
                                             16 BANK0      9     7      2
              _i2c_fw_write_and_read
                  _i2c_fw_write_only
 ---------------------------------------------------------------------------------
 (1) _bmp180_get_up                                       20    16      4    2456
                                             16 BANK0     20    16      4
              _i2c_fw_write_and_read
                  _i2c_fw_write_only
 ---------------------------------------------------------------------------------
 (2) _i2c_fw_write_only                                    4     2      2     421
                                              9 BANK0      4     2      2
                 _i2c_fw_read_status
                       _i2c_fw_start
                        _i2c_fw_stop
                  _i2c_fw_write_byte
 ---------------------------------------------------------------------------------
 (2) _i2c_fw_write_and_read                                7     4      3    1713
                                              9 BANK0      7     4      3
                   _i2c_fw_read_byte
                 _i2c_fw_read_status
                    _i2c_fw_repstart
                    _i2c_fw_send_ack
                       _i2c_fw_start
                        _i2c_fw_stop
                  _i2c_fw_write_byte
 ---------------------------------------------------------------------------------
 (3) _i2c_fw_write_byte                                    4     4      0      91
                                              5 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (3) _i2c_fw_stop                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _i2c_fw_start                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _i2c_fw_send_ack                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _i2c_fw_repstart                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _i2c_fw_read_status                                   1     1      0       8
                                              5 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _i2c_fw_read_byte                                     4     4      0     114
                                              5 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _isr                                                  5     5      0     358
                                              0 BANK0      5     5      0
                       _tx_send_data
 ---------------------------------------------------------------------------------
 (5) _tx_send_data                                         5     4      1     358
                                              6 COMMON     5     4      1
                            _sendbit
                           _sendbyte
 ---------------------------------------------------------------------------------
 (6) _sendbyte                                             4     4      0     113
                                              2 COMMON     4     4      0
                            _sendbit
 ---------------------------------------------------------------------------------
 (7) _sendbit                                              2     2      0      22
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _bmp180_get_up
     _i2c_fw_write_and_read
       _i2c_fw_read_byte
       _i2c_fw_read_status
       _i2c_fw_repstart
       _i2c_fw_send_ack
       _i2c_fw_start
       _i2c_fw_stop
       _i2c_fw_write_byte
     _i2c_fw_write_only
       _i2c_fw_read_status
       _i2c_fw_start
       _i2c_fw_stop
       _i2c_fw_write_byte
   _bmp180_get_ut
     _i2c_fw_write_and_read
       _i2c_fw_read_byte
       _i2c_fw_read_status
       _i2c_fw_repstart
       _i2c_fw_send_ack
       _i2c_fw_start
       _i2c_fw_stop
       _i2c_fw_write_byte
     _i2c_fw_write_only
       _i2c_fw_read_status
       _i2c_fw_start
       _i2c_fw_stop
       _i2c_fw_write_byte
   _bmp180_init
     _i2c_fw_write_and_read
       _i2c_fw_read_byte
       _i2c_fw_read_status
       _i2c_fw_repstart
       _i2c_fw_send_ack
       _i2c_fw_start
       _i2c_fw_stop
       _i2c_fw_write_byte
   _bmp180_read_params
     _i2c_fw_write_and_read
       _i2c_fw_read_byte
       _i2c_fw_read_status
       _i2c_fw_repstart
       _i2c_fw_send_ack
       _i2c_fw_start
       _i2c_fw_stop
       _i2c_fw_write_byte
   _dht22_init
   _dht22_read
   _ds18b20_init
     _ow_init
   _ds18b20_read_scratch
     _ow_read_byte
     _ow_reset
     _ow_write_byte
   _ds18b20_start_convert
     _ow_reset
     _ow_write_byte
   _i2c_fw_init
   _init_tx_interrupt
   _pic_init
   _tx_init
   _uart_init

 _isr (ROOT)
   _tx_send_data
     _sendbit
     _sendbyte
       _sendbit

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               50      0      4A       7       92.5%
BITBANK2            50      0       0       6        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50     40      40       5       80.0%
BITBANK1            50      0       0       4        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     30      4B       3       93.8%
BITBANK0            50      0       0       9        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      B       D       1       92.9%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      E2      10        0.0%
ABS                  0      0      E2       8        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V1.35 build -356382666 
Symbol Table                                                                                   Wed Nov 25 05:46:24 2015

                             pc 0002                     __CFG_CP$OFF 0000                              l21 04F4  
                            l31 050A                              l24 04F6                              l34 050D  
                            l18 04F0                              l28 052A                              l62 0397  
                            fsr 0004            i2c_fw_write_only@reg 0029                             l206 07A9  
                ?_ow_write_byte 0070                             l281 07BB                             l282 07D8  
                           l283 07C0                             l195 0714                             l196 0740  
                           l287 0751                             l288 0776                             _GIE 005F  
                  __CFG_CPD$OFF 0000                             u654 0761                             u655 075F  
                           u905 036E                             _isr 0F8C                             fsr0 0004  
                           indf 0000      __size_of_i2c_fw_write_byte 002E           i2c_fw_write_only@addr 002C  
    __size_of_i2c_fw_write_only 0027                            l2042 0583                            l2034 055F  
                          l2360 0097                            l1820 04FD                            l1638 0769  
                          l1902 03DF                            l1760 06CC                            l1728 079A  
                          l1920 06F7                            l1834 051A                            l1826 0502  
                          l1914 06E3                            l1676 0FF6                            l1758 06B5  
                          l1838 0522                            l1678 0FF7                            l1864 02E5  
                          l1698 0725                            l1858 02D1                            l1894 03B9  
                          l1898 03CC                            ?_isr 0070                            _BRGH 04C2  
                          u1205 029A                            u1055 0408                            u1080 04BA  
                          u1160 0039                            u1065 0475                            u1217 00F3  
                          u1170 0062                            u1075 0483                            u1307 078F  
                          u1227 014E                            u1085 04B5                            u1317 079C  
                          u1237 02B8                            u1327 04D8                            u1247 0703  
                          u1337 04ED                            u1257 071B                            u1185 0268  
                          u1347 0F84                            u1267 0728                            u1195 0281  
                          u1357 05F8                            u1277 0FE0                            u1367 0423  
                          u1287 0FEC                            u1297 0FFA                            _RCIF 0065  
                          _TMR0 0001                            _TXIF 0064                            _SYNC 04C4  
                 _bmp180_get_up 03F2                   _bmp180_get_ut 05DC                            _crc8 007B  
                          _data 013A                            _main 002F                            btemp 007E  
                 ?_i2c_fw_start 0070                            ltemp 007E                   ??_i2c_fw_init 0025  
                          start 0011                            ttemp 007E                   ??_i2c_fw_stop 0025  
                          wtemp 007E                   __CFG_IESO$OFF 0000                   __CFG_MCLRE$ON 0000  
         __size_of_tx_send_data 004E  __size_of_i2c_fw_write_and_read 0048          i2c_fw_write_only@value 002A  
 __end_of_i2c_fw_write_and_read 06D2                           ??_isr 0020                           ?_main 004C  
                         _BRG16 04DB                   __CFG_WDTE$OFF 0000                           _ANSEL 011E  
                         i1l159 0FA2                           _RCREG 001A                           _RCSTA 0018  
                         _SPBRG 0099                           _SSPIF 0063                           _TXREG 0019  
                         _TXSTA 0098                   __CFG_PWRTE$ON 0000     __size_of_bmp180_read_params 0089  
                __CFG_FCMEN$OFF 0000            tx_send_data@checksum 0078                           _scale 007C  
               __end_of_sendbit 0F6E                  __CFG_BOREN$OFF 0000                           pclath 000A  
                ?_bmp180_get_up 0030                  ?_bmp180_get_ut 0030                           ltemp0 007E  
                         ltemp1 0082                           ltemp2 0086                           ltemp3 0080  
               __end_of_ow_init 0E85                    _tx_send_data 063C                           ttemp0 007E  
                         ttemp1 0081                           ttemp2 0084                           ttemp3 0087  
                         ttemp4 007F                           status 0003                  ??_i2c_fw_start 0025  
                         wtemp0 007E                           wtemp1 0080                           wtemp2 0082  
                         wtemp3 0084                           wtemp4 0086                           wtemp5 0088  
                         wtemp6 007F                 __end_of_tx_init 0E8C      __end_of_i2c_fw_read_status 0F14  
               __initialization 0013                    __end_of_main 02C0             __end_of_i2c_fw_init 0E9E  
           __end_of_i2c_fw_stop 0ECD             bmp180_read_params@i 004A             bmp180_read_params@j 0049  
               ??_ow_write_byte 0025                          ??_main 00A0       __size_of_i2c_fw_read_byte 0037  
        bmp180_read_params@data 0033                          _ANSELH 011F                          i1l2138 0F9F  
                        i1l1972 064F                          i1l1990 0669                          i1l1966 0643  
                        i1l1992 067C                          u140_27 0F63                          u141_27 0F6B  
                        u137_27 0655                          u138_27 0686                          u139_27 0F5C  
                        _OSCCON 008F                 _i2c_fw_send_ack 0EA9                          _SSPCON 0014  
               _i2c_fw_repstart 0ECD  __size_of_ds18b20_start_convert 0039   __end_of_ds18b20_start_convert 070B  
            dht22_read@humidity 0029                __end_of_pic_init 0EFF                          main@d1 00AB  
                        main@t1 00CA                          main@up 00A7                          main@ut 00A5  
              __end_of_sendbyte 0F2A    __end_of_ds18b20_read_scratch 03F2                          saved_w 007E  
              __end_of_ow_reset 1000                       ??_sendbit 0070                       ??_ow_init 0025  
               ??_bmp180_get_up 0034                 ??_bmp180_get_ut 0032                       ??_tx_init 0025  
       __end_of__initialization 002C                     _i2c_fw_init 0E94                     _i2c_fw_stop 0EC1  
                dht22_read@temp 0027                  __pcstackCOMMON 0070                    __pidataBANK0 0F40  
                    _dht22_init 0F6E                      _dht22_read 04C6                   ?_ds18b20_init 0070  
          __end_of_i2c_fw_start 0EC1                  _OPTION_REGbits 0081         __end_of_i2c_fw_send_ack 0EB5  
       __end_of_i2c_fw_repstart 0EDD                   ??_bmp180_init 0030                      __pbssBANK0 0066  
                    __pbssBANK2 0120                      __pmaintext 002F                      __pintentry 0004  
                ??_ds18b20_init 0025                _i2c_fw_read_byte 0742              __size_of_uart_init 0016  
                ow_write_byte@i 0028                       ?_pic_init 0070                ow_read_byte@data 0027  
           __end_of_bmp180_init 07FC                       ?_sendbyte 0070            _ds18b20_read_scratch 02C0  
                     ?_ow_reset 0070                     ?_dht22_init 0070                     ?_dht22_read 0070  
         _i2c_fw_write_and_read 068A                         __ptext1 0F2A                         __ptext2 0E85  
                       __ptext3 0EED                         __ptext4 0E9E                         __ptext5 0E94  
                       __ptext6 06D2                         __ptext7 02C0                         __ptext8 070B  
                       __ptext9 0FD4      __end_of_bmp180_read_params 05DC              _i2c_fw_read_status 0EFF  
                     _T1CONbits 0010                    __size_of_isr 0021                         _sendbit 0F56  
             _init_tx_interrupt 0E9E                         _ow_init 0E7E                ?_i2c_fw_send_ack 0070  
           ?_i2c_fw_read_status 0070                         main@dev 00B0          ds18b20_start_convert@i 002D  
                       _tx_init 0E85                         clrloop0 0E8D              ?_init_tx_interrupt 0070  
              ?_i2c_fw_repstart 0070            end_of_initialization 002C                   ?_ow_read_byte 0070  
                    ??_pic_init 0025             ??_init_tx_interrupt 0025               __end_of_uart_init 0F40  
         ?_ds18b20_read_scratch 0070                      ??_sendbyte 0072                      ??_ow_reset 0025  
          ??_i2c_fw_read_status 0025           __size_of_i2c_fw_start 000C   i2c_fw_write_and_read@data_len 002A  
                     _PORTBbits 0006                       _PORTCbits 0007           __end_of_ow_write_byte 0742  
     __end_of_init_tx_interrupt 0EA9                 bmp180_init@data 0033                       _TRISBbits 0086  
                     _TRISCbits 0087                     ow_reset@ret 0026                  ??_ow_read_byte 0025  
           __size_of_dht22_init 001E             __size_of_dht22_read 008D                     _bmp180_init 07DA  
          __end_of_ds18b20_init 07FF                    _i2c_fw_start 0EB5                    ?_i2c_fw_init 0070  
                  ?_i2c_fw_stop 0070              tx_send_data@length 0079          ?_i2c_fw_write_and_read 0029  
         _ds18b20_start_convert 06D2             start_initialization 0013                     __end_of_isr 0FAD  
         __end_of_bmp180_get_up 04C6           __end_of_bmp180_get_ut 063C        __end_of_i2c_fw_read_byte 0779  
        ??_ds18b20_read_scratch 0029                      init_fetch0 0EDD                     __pdataBANK0 0050  
    __size_of_init_tx_interrupt 000B                     __pbssCOMMON 007B                       ___latbits 0001  
                 dht22_read@ptr 002B                   __pcstackBANK0 0020                   __pcstackBANK1 00A0  
                 ?_tx_send_data 0076        bmp180_read_params@device 004B                     dht22_read@i 002D  
                   dht22_read@p 002C                     dht22_read@s 002E               __size_of_pic_init 0012  
        ?_ds18b20_start_convert 0070                    ??_dht22_init 0025                    ??_dht22_read 0025  
             __size_of_sendbyte 0016            __end_of_ow_read_byte 07AC               __size_of_ow_reset 002C  
                      ?_sendbit 0070                        ?_ow_init 0070        i2c_fw_write_and_read@reg 0029  
         __size_of_ds18b20_init 0003                        ?_tx_init 0070                  ??_tx_send_data 0077  
            __end_of_dht22_init 0F8C              __end_of_dht22_read 0553              _bmp180_read_params 0553  
             interrupt_function 0004                       clear_ram0 0E8C                        _PIE1bits 008C  
           ?_bmp180_read_params 0070                        _PIR1bits 000C           ds18b20_read_scratch@i 002C  
           bmp180_get_up@device 0043                   tx_send_data@i 007A            __size_of_i2c_fw_init 000A  
             i2c_fw_read_byte@i 0028                       main@F1621 0050            __size_of_i2c_fw_stop 000C  
                     main@F1623 0066                       main@F1625 0120                       _uart_init 0F2A  
           bmp180_get_ut@device 0038                      _ADCON0bits 001F                    _ds18b20_init 07FC  
      ds18b20_start_convert@dev 002C            ??_bmp180_read_params 0030                    ?_bmp180_init 0070  
      __size_of_i2c_fw_send_ack 000C         ??_i2c_fw_write_and_read 002C        __size_of_i2c_fw_repstart 0010  
                  sendbyte@data 0074                      ?_uart_init 0070     __size_of_i2c_fw_read_status 0015  
              __size_of_sendbit 0018                        __ptext10 0779                        __ptext11 07FC  
                      __ptext20 068A                        __ptext12 0E7E                        __ptext21 07AC  
                      __ptext13 04C6                        __ptext30 0F14                        __ptext22 0EC1  
                      __ptext14 0F6E                        __ptext31 0F56                        __ptext23 0EB5  
                      __ptext15 0553                        __ptext24 0EA9                        __ptext16 07DA  
                      __ptext25 0ECD                        __ptext17 05DC                        __ptext26 0EFF  
                      __ptext18 03F2                        __ptext27 0742                        __ptext19 0FAD  
                      __ptext28 0F8C                        __ptext29 063C                __size_of_ow_init 0007  
             _i2c_fw_write_byte 07AC               _i2c_fw_write_only 0FAD                __size_of_tx_init 0007  
                     sendbit@bt 0071              ?_i2c_fw_write_byte 0070              ?_i2c_fw_write_only 0029  
                     sendbyte@i 0075                   __size_of_main 0291                        _pic_init 0EED  
             ?_i2c_fw_read_byte 0070          __size_of_ow_write_byte 0037             ??_i2c_fw_write_byte 0025  
         __size_of_ow_read_byte 0033             ??_i2c_fw_write_only 002B                        _sendbyte 0F14  
            ??_i2c_fw_read_byte 0025                        _ow_reset 0FD4                        main@argc 004C  
                      main@argv 004E            __end_of_tx_send_data 068A                tx_send_data@data 0076  
          i2c_fw_read_byte@data 0027                      _INTCONbits 000B       __end_of_i2c_fw_write_byte 07DA  
     __end_of_i2c_fw_write_only 0FD4                        init_ram0 0EE1           i2c_fw_read_status@ret 0025  
                      intlevel1 0000                    _ow_read_byte 0779         ??_ds18b20_start_convert 0029  
                 ow_read_byte@i 0026          i2c_fw_write_and_read@i 002F         ds18b20_read_scratch@dev 002D  
 __size_of_ds18b20_read_scratch 0132               bmp180_get_up@data 0040               bmp180_get_ut@data 0036  
                   ??_uart_init 0025               ??_i2c_fw_send_ack 0025               ??_i2c_fw_repstart 0025  
        __size_of_bmp180_get_up 00D4          __size_of_bmp180_get_ut 0060                   _ow_write_byte 070B  
              bmp180_get_up@tmp 003C            __size_of_bmp180_init 0022               __CFG_FOSC$INTRCIO 0000  
             bmp180_init@device 0034       i2c_fw_write_and_read@addr 002E       i2c_fw_write_and_read@data 002B  
             ow_write_byte@data 0027           i2c_fw_write_byte@data 0027              i2c_fw_write_byte@i 0028  
